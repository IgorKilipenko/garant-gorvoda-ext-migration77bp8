// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа ++
#Область ОбработчикиКомандФормы

// Выполняет создание отсутствующих элементов справочника lc_ВидыТарифов по данным БП77
&НаКлиенте
Асинх Процедура СоздатьВидыТарифовПотребителей(Команда)
    // Предупреждение пользователю о необратимости операции
    РезультатДиалога = Ждать ГП_ОбщегоНазначенияКлиент.СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(
            "Будут созданы элементы видов тарифов потребителей.");
    Если РезультатДиалога = Ложь Тогда
        Возврат; // Пользователь отказался от выполнения операции
    КонецЕсли;

    РезультатСоздания = СоздатьВидыТарифовПотребителейНаСервере();

    СообщениеПользователю = "";
    Если РезультатСоздания.Успех = Ложь Тогда
        СообщениеПользователю = СтрШаблон("Создание видов тарифов потребителей не выполнено.
                |Информация о проблеме: %1", РезультатСоздания.ТекстСообщения);
    Иначе
        СообщениеПользователю = СтрШаблон("Создание видов тарифов потребителей выполнено успешно.
                |Создано ""%1"" новых элементов",
                РезультатСоздания.СозданныеЭлементы.Количество());
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеПользователю);
КонецПроцедуры

// Заполняет регистр сведений `ГП_ВидыТарифовПотребителейЛицевыхСчетов` данными для формирования
//  связи: Лицевой счет - Вид тарифа потребителя (БП77)
&НаКлиенте
Асинх Процедура НазначитьВидыТарифовПотребителейНаЛицевыеСчета(Команда)
    // Предупреждение пользователю о необратимости операции
    РезультатДиалога = Ждать ГП_ОбщегоНазначенияКлиент.СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(
            "Будут созданы записи назначения видов тарифов потребителей на лицевые счета.");
    Если РезультатДиалога = Ложь Тогда
        Возврат; // Пользователь отказался от выполнения операции
    КонецЕсли;

    ПериодЗаполнения = Дата(2024, 01, 01); // !!! Требует рефакторинг - дату должен указывать пользователь
    РезультатЗаполнения = ЗаполнитьВидыТарифовПотребителейЛицевыхСчетовНаСервере(ПериодЗаполнения);

    СообщениеПользователю = "";
    Если РезультатЗаполнения.Успех = Ложь Тогда
        СообщениеПользователю = СтрШаблон("Назначения видов тарифов потребителей не выполнено.
                |Информация о проблеме: %1", РезультатЗаполнения.ТекстСообщения);
    Иначе
        СообщениеПользователю = СтрШаблон("Назначения видов тарифов потребителей выполнено успешно.
                |Создано ""%1"" записей",
                РезультатЗаполнения.КоличествоЗаписанных);
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеПользователю);
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы
// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа --

// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа ++
#Область СлужебныеПроцедурыИФункции

// Выполняет создание отсутствующих элементов справочника lc_ВидыТарифов по данным БП77
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * СозданныеЭлементы - Массив из СправочникСсылка.lc_ВидыТарифов
//      * ТекстСообщения - Строка, Неопределено
&НаСервереБезКонтекста
Функция СоздатьВидыТарифовПотребителейНаСервере()
    Возврат ГП_МиграцияТарифовАбонентов.СоздатьВидыТарифовПотребителей();
КонецФункции

// Заполняет регистр сведений `ГП_ВидыТарифовПотребителейЛицевыхСчетов` данными для формирования
//  связи: Лицевой счет - Вид тарифа потребителя (БП77)
// Параметры:
//  Период - Дата - Период заполнения (дата актуальности)
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанных - Число
//      * ТекстСообщения - Строка, Неопределено
&НаСервереБезКонтекста
Функция ЗаполнитьВидыТарифовПотребителейЛицевыхСчетовНаСервере(Знач Период)
    Возврат ГП_МиграцияТарифовАбонентов.ЗаполнитьВидыТарифовПотребителейЛицевыхСчетов(Период);
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа --
