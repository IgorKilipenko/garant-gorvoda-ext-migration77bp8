// Гарант+ Килипенко 11.09.2024 [F00227694] Доработка документа ввод показаний счетчика ++
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ГП_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
    // Добавление кнопки создания документа ввода показаний
    ГП_СоздатьКомандуУстановитьЗначенияСчетчиковНаСервере();
    ГП_СоздатьКомандуУстановитьСчетчикНаСервере();

    ГП_СоздатьПанельДинамическихПоказателейНаСервере();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы
// Гарант+ Килипенко 11.09.2024 [F00227694] Доработка документа ввод показаний счетчика --

// Гарант+ Килипенко 11.09.2024 [F00227694] Доработка документа ввод показаний счетчика ++
#Область ОбработчикиКомандФормы

// Создает документ ввода показаний счетчиков по текущей строке списка (с отбором по договору л/с текущей строки)
&НаКлиенте
Асинх Процедура ГП_УстановитьЗначенияСчетчиковПриНажатии(Команда)
    ТекущийЛицевойСчет = ГП_ПолучитьТекущийЛицевойСчет();
    Если ТекущийЛицевойСчет = Неопределено Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбрана строка лицевого счета.");
        Возврат;
    КонецЕсли;

    ПараметрыВводаПоказаний = ГП_СформироватьПараметрыВводаПоказанийНаСервере(ТекущийЛицевойСчет);
    ФормаВводаПоказаний = ОткрытьФорму("Документ.УПЖКХ_ВводПоказанийСчетчика.Форма.ФормаДокумента",
            ПараметрыВводаПоказаний, , , , , , РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

// Гарант+ Килипенко 21.11.2024 [F00231299] создание документа установка счетчика из л/с ++
//
&НаКлиенте
Асинх Процедура ГП_УстановитьСчетчикПриНажатии(Команда)
    ТекущийЛицевойСчет = ГП_ПолучитьТекущийЛицевойСчет();
    Если ТекущийЛицевойСчет = Неопределено Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбрана строка лицевого счета.");
        Возврат;
    КонецЕсли;

    ГП_ОткрытьФормуУстановкиСчетчика(ТекущийЛицевойСчет);
КонецПроцедуры // Гарант+ Килипенко 21.11.2024 [F00231299] создание документа установка счетчика из л/с --

// Выполняет запись измененных значений динамических показателей
&НаКлиенте
Асинх Процедура ГП_ЗаписатьДинамическиеПоказателиПриНажатии(Команда)
    АктивныйЛицевойСчет = ГП_ПолучитьАктивныйЛицевойСчет();

    Если АктивныйЛицевойСчет = Неопределено Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не определен лицевой счет");
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ГП_ТаблицаДинамическихПоказателей.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Нет данных для записи");
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ГП_ТаблицаДинамическихПоказателей.Количество() > 1 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Ошибка структуры динамических показателей. Может быть только одна запись показателей");
        Возврат;
    КонецЕсли;

    РезультатДиалога = Ждать ГП_ОбщегоНазначенияКлиент.СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(
            СтрШаблон("Выполнить запись значений динамических показателей на дату: ""%1""",
                Формат(ЭтотОбъект.ГП_ДатаЗаписиДинамическихПоказателей, "ДФ='дд ММММ гггг'")));
    Если РезультатДиалога = Ложь Тогда
        Возврат;
    КонецЕсли;

    СтруктураДанныхПоказателей = НовыйСтруктураДинамическихПоказателейНаСервере();
    ЗаполнитьЗначенияСвойств(СтруктураДанныхПоказателей, ЭтотОбъект.ГП_ТаблицаДинамическихПоказателей[0]);

    РезультатЗаписи = ГП_ЗаписатьЗначенияДинамическихПоказателейДляЛСНаСервере(
            АктивныйЛицевойСчет,
            СтруктураДанныхПоказателей,
            ЭтотОбъект.ГП_ДатаЗаписиДинамическихПоказателей);

    Если РезультатЗаписи.Успех Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Запись динамических показателей выполнена успешно");
    Иначе
        ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(
                "При записи динамических показателей возникла ошибка.
                |Информация:
                |%1", РезультатЗаписи.ТекстСообщения));
    КонецЕсли;
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы
// Гарант+ Килипенко 11.09.2024 [F00227694] Доработка документа ввод показаний счетчика --

// Гарант+ Килипенко 10.09.2024 [F00227690] Заполнение динамических показателей ++
#Область СлужебныеПроцедурыИФункции

// Обновление ТЧ ГП_ТаблицаДинамическихПоказателей для текущей строки
&НаКлиенте
&После ("ОбновитьПодчиненныеТаблицы")
Процедура ГП_ОбновитьПодчиненныеТаблицы()
    ЛицевойСчетОпределен = ?(ЭтотОбъект.мЗначениеОтбора = Неопределено ИЛИ ЭтотОбъект.мЗначениеОтбора.Пустая(),
            Ложь, Истина);
    ТекСтраница = Элементы.ПанельДополнительнойИнформации.ТекущаяСтраница;
    Если ТекСтраница <> ЭтотОбъект.Элементы.ГП_ДинамическиеПоказатели ИЛИ ЛицевойСчетОпределен = Ложь Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.Элементы.Список.ТекущиеДанные = Неопределено Тогда
        ГП_ОчиститьТаблицуДинамическихПоказателей();
        Возврат;
    КонецЕсли;

    ГП_ОчиститьТаблицуДинамическихПоказателей();
    ГП_ОбновитьТаблицуДинамическихПоказателейНаСервере(ЭтотОбъект.мЗначениеОтбора);
КонецПроцедуры

// Выполняет обновление ТЧ ГП_ТаблицаДинамическихПоказателей для л/с
// Параметры:
//  ЛицевойСчетСсылка - СправочникСсылка.КВП_ЛицевыеСчета
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета
//      * ВидПотребления
//      * Финансирование
//      * Водозабор
//      * Договородержатель
//      * Контролер
//      * Характеристика
//      * ВидТарифаПотребителя - СправочникСсылка.lc_ВидыТарифов
&НаСервере
Процедура ГП_ОбновитьТаблицуДинамическихПоказателейНаСервере(Знач ЛицевойСчетСсылка)
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ДинамическиеПоказателиЛицевыхСчетов.ЛицевойСчет КАК ЛицевойСчет,
        |	ДинамическиеПоказателиЛицевыхСчетов.ПроцентВодоотведенияХВС КАК ПроцентВодоотведенияХВС,
        |	ДинамическиеПоказателиЛицевыхСчетов.ПроцентВодоотведенияГВС КАК ПроцентВодоотведенияГВС,
        |	ДинамическиеПоказателиЛицевыхСчетов.ВидПотребления КАК ВидПотребления,
        |	ДинамическиеПоказателиЛицевыхСчетов.Финансирование КАК Финансирование,
        |	ДинамическиеПоказателиЛицевыхСчетов.Водозабор КАК Водозабор,
        |	ДинамическиеПоказателиЛицевыхСчетов.Договородержатель КАК Договородержатель,
        |	ДинамическиеПоказателиЛицевыхСчетов.Контролер КАК Контролер,
        |	ДинамическиеПоказателиЛицевыхСчетов.Характеристика КАК Характеристика
        |ПОМЕСТИТЬ ВТ_ДинамическиеПоказатели
        |ИЗ
        |	РегистрСведений.lc_ДинамическиеПоказателиЛицевыхСчетов.СрезПоследних(, ЛицевойСчет = &ЛицевойСчет) КАК ДинамическиеПоказателиЛицевыхСчетов
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВидыТарифовПотребителейЛицевыхСчетов.Период КАК Период,
        |	ВидыТарифовПотребителейЛицевыхСчетов.ЛицевойСчет КАК ЛицевойСчет,
        |	ВидыТарифовПотребителейЛицевыхСчетов.ВидТарифаПотребителя КАК ВидТарифаПотребителя
        |ПОМЕСТИТЬ ВТ_ВидыТарифовПотребителейЛицевыхСчетов
        |ИЗ
        |	РегистрСведений.ГП_ВидыТарифовПотребителейЛицевыхСчетов.СрезПоследних(, ЛицевойСчет = &ЛицевойСчет) КАК ВидыТарифовПотребителейЛицевыхСчетов
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ДинамическиеПоказатели.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_ДинамическиеПоказатели.ПроцентВодоотведенияХВС КАК ПроцентВодоотведенияХВС,
        |	ВТ_ДинамическиеПоказатели.ПроцентВодоотведенияГВС КАК ПроцентВодоотведенияГВС,
        |	ВТ_ДинамическиеПоказатели.ВидПотребления КАК ВидПотребления,
        |	ВТ_ДинамическиеПоказатели.Финансирование КАК Финансирование,
        |	ВТ_ДинамическиеПоказатели.Водозабор КАК Водозабор,
        |	ВТ_ДинамическиеПоказатели.Договородержатель КАК Договородержатель,
        |	ВТ_ДинамическиеПоказатели.Контролер КАК Контролер,
        |	ВТ_ДинамическиеПоказатели.Характеристика КАК Характеристика,
        |	ЕСТЬNULL(ВТ_ВидыТарифовПотребителейЛицевыхСчетов.ВидТарифаПотребителя, ЗНАЧЕНИЕ(Справочник.lc_ВидыТарифов.ПустаяСсылка)) КАК ВидТарифаПотребителя
        |ИЗ
        |	ВТ_ДинамическиеПоказатели КАК ВТ_ДинамическиеПоказатели
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидыТарифовПотребителейЛицевыхСчетов КАК ВТ_ВидыТарифовПотребителейЛицевыхСчетов
        |		ПО ВТ_ДинамическиеПоказатели.ЛицевойСчет = ВТ_ВидыТарифовПотребителейЛицевыхСчетов.ЛицевойСчет
        |";

    Запрос.УстановитьПараметр("ЛицевойСчет", ЛицевойСчетСсылка);

    РезультатЗапроса = Запрос.Выполнить();
    ТаблицаРезультата = РезультатЗапроса.Выгрузить();

    ЭтотОбъект.ГП_ТаблицаДинамическихПоказателей.Загрузить(ТаблицаРезультата);
КонецПроцедуры

// Очищает ТЧ ГП_ТаблицаДинамическихПоказателей
&НаКлиенте
Процедура ГП_ОчиститьТаблицуДинамическихПоказателей()
    ЭтотОбъект.ГП_ТаблицаДинамическихПоказателей.Очистить();
КонецПроцедуры

// Гарант+ Килипенко 11.09.2024 [F00227694] Доработка документа ввод показаний счетчика ++
#Область ГП_НастройкаФормы

// Создает кнопку формы Установить значения счетчиков
// Возвращаемое значение:
//  - Структура
//      * Кнопка
//      * Команда
&НаСервере
Функция ГП_СоздатьКомандуУстановитьЗначенияСчетчиковНаСервере()
    РезультатФункции = Новый Структура("Кнопка, Команда");

    // Создание команды формы
    РезультатФункции.Команда = ЭтотОбъект.Команды.Добавить("ГП_УстановитьЗначенияСчетчиков");
    РезультатФункции.Команда.Заголовок = "Установить показания счетчиков";
    РезультатФункции.Команда.Действие = "ГП_УстановитьЗначенияСчетчиковПриНажатии";

    // Создание элемента формы
    РезультатФункции.Кнопка = ЭтотОбъект.Элементы.Вставить(
            "ГП_УстановитьЗначенияСчетчиков",
            Тип("КнопкаФормы"),
            ЭтотОбъект.Элементы.ФормаПользовательскиеКоманды,
            ЭтотОбъект.Элементы.ФормаГруппаОтчеты);
    РезультатФункции.Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
    РезультатФункции.Кнопка.ИмяКоманды = РезультатФункции.Команда.Имя;

    Возврат РезультатФункции;
КонецФункции

// Создает кнопку Записать для страницы Сведения абонента
&НаСервере
Функция ГП_СоздатьКомандуЗаписатьДинамическиеПоказателиНаСервере()
    РезультатФункции = Новый Структура("Кнопка, Команда, ГруппаФормы");

    // Создание группы формы
    РезультатФункции.ГруппаФормы = ЭтотОбъект.Элементы.Вставить(
            "ГП_ДинамическиеПоказателиДействия",
            Тип("ГруппаФормы"),
            ЭтотОбъект.Элементы.ГП_ДинамическиеПоказатели,
            ЭтотОбъект.Элементы.ГП_ТаблицаДинамическихПоказателей);
    РезультатФункции.ГруппаФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа;

    НаименованиеСоздаваемогоЭлемента = "ГП_ЗаписатьДинамическиеПоказатели";
    // Создание команды формы
    РезультатФункции.Команда = ЭтотОбъект.Команды.Добавить(НаименованиеСоздаваемогоЭлемента);
    РезультатФункции.Команда.Заголовок = "Записать";
    РезультатФункции.Команда.Действие = НаименованиеСоздаваемогоЭлемента + "ПриНажатии";

    // Создание элемента формы
    РезультатФункции.Кнопка = ЭтотОбъект.Элементы.Добавить(
            НаименованиеСоздаваемогоЭлемента,
            Тип("КнопкаФормы"),
            РезультатФункции.ГруппаФормы);
    РезультатФункции.Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
    РезультатФункции.Кнопка.ИмяКоманды = РезультатФункции.Команда.Имя;

    Возврат РезультатФункции;
КонецФункции

// Создает поле Дата для страницы Сведения абонента
&НаСервере
Функция ГП_СоздатьЭлементДатаЗаписиДинамическихПоказателейНаСервере()
    РезультатФункции = Новый Структура("Элемент, Реквизит, ГруппаФормы");

    НаименованиеСоздаваемогоРеквизита = "ГП_ДатаЗаписиДинамическихПоказателей";

    // Создание реквизита
    ТипРеквизита = ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата);
    РезультатФункции.Реквизит = Новый РеквизитФормы(НаименованиеСоздаваемогоРеквизита, ТипРеквизита, "", "Дата");
    ЭтотОбъект.ИзменитьРеквизиты(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РезультатФункции.Реквизит));

    // Создание элемента формы
    РезультатФункции.Элемент = ЭтотОбъект.Элементы.Добавить(
            НаименованиеСоздаваемогоРеквизита,
            Тип("ПолеФормы"),
            ЭтотОбъект.Элементы.ГП_ДинамическиеПоказателиДействия);
    РезультатФункции.Элемент.Вид = ВидПоляФормы.ПолеВвода;
    РезультатФункции.Элемент.ПутьКДанным = НаименованиеСоздаваемогоРеквизита;

    ЭтотОбъект[НаименованиеСоздаваемогоРеквизита] = ТекущаяДатаСеанса();

    Возврат РезультатФункции;
КонецФункции

// Гарант+ Килипенко 21.11.2024 [F00231299] создание документа установка счетчика из л/с ++
//
// Создает кнопку `Установит счетчик`
&НаСервере
Функция ГП_СоздатьКомандуУстановитьСчетчикНаСервере()
    РезультатФункции = Новый Структура("Кнопка, Команда");

    НаименованиеСоздаваемогоЭлемента = "ГП_УстановитьСчетчик";
    // Создание команды формы
    РезультатФункции.Команда = ЭтотОбъект.Команды.Добавить(НаименованиеСоздаваемогоЭлемента);
    РезультатФункции.Команда.Заголовок = "Установить счетчик";
    РезультатФункции.Команда.Действие = НаименованиеСоздаваемогоЭлемента + "ПриНажатии";

    // Создание элемента формы
    РезультатФункции.Кнопка = ЭтотОбъект.Элементы.Вставить(
            НаименованиеСоздаваемогоЭлемента,
            Тип("КнопкаФормы"),
            ЭтотОбъект.Элементы.ФормаПользовательскиеКоманды,
            ЭтотОбъект.Элементы.ФормаГруппаОтчеты);
    РезультатФункции.Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
    РезультатФункции.Кнопка.ИмяКоманды = РезультатФункции.Команда.Имя;

    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 21.11.2024 [F00231299] создание документа установка счетчика из л/с --

// Создает панель действий для страницы Сведения абонента
&НаСервере
Процедура ГП_СоздатьПанельДинамическихПоказателейНаСервере()
    ГП_СоздатьКомандуЗаписатьДинамическиеПоказателиНаСервере();
    ГП_СоздатьЭлементДатаЗаписиДинамическихПоказателейНаСервере();
КонецПроцедуры

#КонецОбласти // ГП_НастройкаФормы
// Гарант+ Килипенко 11.09.2024 [F00227694] Доработка документа ввод показаний счетчика --

// Параметры:
//  ЛицевойСчетСсылка - СправочникСсылка.КВП_ЛицевыеСчета
// Возвращаемое значение:
//  - Структура
//      * ВидОперации - ПеречислениеСсылка.КВП_ВидыОперацийВводаПоказанийСчетчика
&НаСервереБезКонтекста
Функция ГП_СформироватьПараметрыВводаПоказанийНаСервере(Знач ЛицевойСчетСсылка)
    РезультатФункции = Новый Структура("ГП_ВидОперации");
    РезультатФункции.ГП_ВидОперации = Перечисления.КВП_ВидыОперацийВводаПоказанийСчетчика.ВводПоказанииСчетчикаНаЛицевойСчет;

    ТаблицаПоказаний = ГП_ПолучитьКоллекциюПоказанийНаСервере(ЛицевойСчетСсылка);
    РезультатФункции.Вставить("ГП_ЗначенияПоказанийДляЗаполнения", ТаблицаПоказаний);

    Возврат РезультатФункции;
КонецФункции

// Получает лицевой счет текущей строки списка
// Возвращаемое значение:
//  - ЛицевойСчетСсылка - СправочникСсылка.КВП_ЛицевыеСчета
&НаКлиенте
Функция ГП_ПолучитьТекущийЛицевойСчет()
    ЛицевойСчетОпределен = ГП_ЭтоСуществующаяСсылкаЛицевогоСчета(ЭтотОбъект.мЗначениеОтбора)
        И ГП_ЭтоГруппаЛицевыхСчетовНаСервере(ЭтотОбъект.мЗначениеОтбора) = Ложь;
    Если ЛицевойСчетОпределен = Ложь Тогда
        Возврат Неопределено;
    КонецЕсли;

    Возврат ЭтотОбъект.мЗначениеОтбора;
КонецФункции

// Параметры:
//  ЛицевойСчетСсылка - СправочникСсылка.КВП_ЛицевыеСчета
// Возвращаемое значение:
//  - Булево
&НаКлиентеНаСервереБезКонтекста
Функция ГП_ЭтоСуществующаяСсылкаЛицевогоСчета(Знач ЛицевойСчетСсылка)
    Возврат ТипЗнч(ЛицевойСчетСсылка) = Тип("СправочникСсылка.КВП_ЛицевыеСчета")
        И ЛицевойСчетСсылка.Пустая() = Ложь;
КонецФункции

// Параметры:
//  ЛицевойСчетСсылка - СправочникСсылка.КВП_ЛицевыеСчета
// Возвращаемое значение:
//  - Булево
&НаСервереБезКонтекста
Функция ГП_ЭтоГруппаЛицевыхСчетовНаСервере(Знач ЛицевойСчетСсылка)
    Если ГП_ЭтоСуществующаяСсылкаЛицевогоСчета(ЛицевойСчетСсылка) = Ложь Тогда
        Возврат Ложь;
    КонецЕсли;

    Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЛицевойСчетСсылка, "ЭтоГруппа");
КонецФункции

// Параметры:
//  ЛицевойСчетСсылка - СправочникСсылка.КВП_ЛицевыеСчета
// Возвращаемое значение:
//  - Массив из Структура
//      * Услуга - СправочникСсылка.КВП_Услуги
//      * Счетчик - СправочникСсылка.КВП_Счетчики
//      * Объект - СправочникСсылка.КВП_ЛицевыеСчета
//      * КоэффициентТрансформации - Число
//      * ТемпературныйКоэффициент - Число
&НаСервереБезКонтекста
Функция ГП_ПолучитьКоллекциюПоказанийНаСервере(Знач ЛицевойСчетСсылка)
    РезультатФункции = Новый Массив;

    КлючиСтруктурыДанных = "Услуга, Счетчик, Объект, КоэффициентТрансформации"
        + ", ТемпературныйКоэффициент, КоэффициентЧислитель, КоэффициентЗнаменатель";

    ПриборыУчетаДоговора = ГП_ПолучитьПриборыУчетаДоговораПоЛицевомуСчетуНаСервере(ЛицевойСчетСсылка);

    Для Каждого СтрокаПриборУчета Из ПриборыУчетаДоговора Цикл
        НоваяСтрокаПоказаний = Новый Структура(КлючиСтруктурыДанных);
        НоваяСтрокаПоказаний.Услуга = СтрокаПриборУчета.Услуга;
        НоваяСтрокаПоказаний.Счетчик = СтрокаПриборУчета.ПриборУчета;
        НоваяСтрокаПоказаний.Объект = СтрокаПриборУчета.Объект;
        НоваяСтрокаПоказаний.КоэффициентТрансформации =
            ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаПриборУчета.ПриборУчета, "Коэффициент");
        НоваяСтрокаПоказаний.ТемпературныйКоэффициент = 1.0; // !!Проверить
        НоваяСтрокаПоказаний.КоэффициентЧислитель = 1.0; // !!Проверить
        НоваяСтрокаПоказаний.КоэффициентЗнаменатель = 1.0; // !!Проверить

        РезультатФункции.Добавить(НоваяСтрокаПоказаний);
    КонецЦикла;

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  ЛицевойСчетСсылка - СправочникСсылка.КВП_ЛицевыеСчета
//  СтруктураХранилища - Структура, Неопределено
//      * Адрес - Строка
// Возвращаемое значение:
//  - ТаблицаЗначений - Когда ПоместитьВХранилище = Неопределено
//  - Строка - Адрес хранилища, когда заполнено СтруктураХранилища
&НаСервереБезКонтекста
Функция ГП_ПолучитьПриборыУчетаДоговораПоЛицевомуСчетуНаСервере(Знач ЛицевойСчетСсылка, Знач СтруктураХранилища = Неопределено)
    ТаблицаРезультатаФункции = ГП_ПриборыУчета.ПолучитьПриборыУчетаДоговораПоЛицевомуСчету(ЛицевойСчетСсылка, Истина);

    РезультатФункции = Неопределено;
    Если СтруктураХранилища <> Неопределено Тогда
        ТаблицаРезультатаФункции = ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаРезультатаФункции);
        РезультатФункции = ПоместитьВоВременноеХранилище(ТаблицаРезультатаФункции, СтруктураХранилища.Адрес);
    Иначе
        РезультатФункции = ТаблицаРезультатаФункции;
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

// Выполняет запись данных в регистры сведений [lc_ДинамическиеПоказателиЛицевыхСчетов, ГП_ВидыТарифовПотребителейЛицевыхСчетов]
// Параметры:
//  ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета
//  СтруктураДанных - Структура
//      * ВидПотребления
//      * Финансирование
//      * Водозабор
//      * Договородержатель
//      * Контролер
//      * Характеристика
//      * ВидТарифаПотребителя
//  Период - Дата, Неопределено
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
&НаСервереБезКонтекста
Функция ГП_ЗаписатьЗначенияДинамическихПоказателейДляЛСНаСервере(Знач ЛицевойСчет, Знач СтруктураДанных, Знач Период = Неопределено)
    Возврат Справочники.КВП_ЛицевыеСчета.ГП_ЗаписатьЗначенияДинамическихПоказателейДляЛС(ЛицевойСчет, СтруктураДанных, Период);
КонецФункции

// Возвращаемое значение:
//  - Булево
&НаКлиенте
Функция ГП_ЛицевойСчетОпределен()
    РезультатФункции = ?(ТипЗнч(ЭтотОбъект.мЗначениеОтбора) <> Тип("СправочникСсылка.КВП_ЛицевыеСчета")
            ИЛИ ЭтотОбъект.мЗначениеОтбора.Пустая(),
            Ложь, Истина);

    Возврат РезультатФункции;
КонецФункции

// Возвращаемое значение:
//  - СправочникСсылка.КВП_ЛицевыеСчета, Неопределено
&НаКлиенте
Функция ГП_ПолучитьАктивныйЛицевойСчет()
    Если ГП_ЛицевойСчетОпределен() = Ложь Тогда
        Возврат Неопределено;
    КонецЕсли;

    Возврат ЭтотОбъект.мЗначениеОтбора;
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * ВидПотребления - Неопределено
//      * Финансирование - Неопределено
//      * Водозабор - Неопределено
//      * Договородержатель - Неопределено
//      * Контролер - Неопределено
//      * Характеристика - Неопределено
//      * ВидТарифаПотребителя - Неопределено
&НаСервереБезКонтекста
Функция НовыйСтруктураДинамическихПоказателейНаСервере()
    Возврат Справочники.КВП_ЛицевыеСчета.ГП_НовыйСтруктураДинамическихПоказателей();
КонецФункции

// Гарант+ Килипенко 21.11.2024 [F00231299] создание документа установка счетчика из л/с ++
//
&НаКлиенте
Функция ГП_ОткрытьФормуУстановкиСчетчика(Знач ЛицевойСчетСсылка)
    // ТекущееЗдание = ГП_ПолучитьЗданиеЛицевогоСчетаНаСервере(ЛицевойСчетСсылка);
    // Если ТекущееЗдание = Неопределено Тогда
    //     ОбщегоНазначенияКлиент.СообщитьПользователю("Внимание! Не определено здание для текущего л/с");
    // КонецЕсли;

    ПараметрыФормы = Новый Структура("ГП_ДанныеУстановки", Новый Структура);
    ПараметрыФормы.ГП_ДанныеУстановки.Вставить("Объект", ЛицевойСчетСсылка);

    ФормаДокумента = ОткрытьФорму("Документ.КВП_УстановкаСчетчика.Форма.ФормаДокумента",
            ПараметрыФормы, , , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

    Возврат ФормаДокумента;
КонецФункции // Гарант+ Килипенко 21.11.2024 [F00231299] создание документа установка счетчика из л/с --

// Гарант+ Килипенко 21.11.2024 [F00231299] создание документа установка счетчика из л/с ++
//
// Параметры:
//  ЛицевойСчетСсылка - СправочникСсылка.КВП_ЛицевыеСчета
// Возвращаемое значение:
//  - СправочникСсылка.КВП_Здания, Неопределено
&НаСервереБезКонтекста
Функция ГП_ПолучитьЗданиеЛицевогоСчетаНаСервере(Знач ЛицевойСчетСсылка)
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
        |   ЕСТЬNULL(ЛицевыеСчета.Адрес.Владелец, Неопределено) КАК Здание
        |ИЗ
        |   Справочник.КВП_ЛицевыеСчета КАК ЛицевыеСчета
        |ГДЕ
        |   ЛицевыеСчета.Ссылка = &ЛицевойСчетСсылка
        |";

    Запрос.УстановитьПараметр("ЛицевойСчетСсылка", ЛицевойСчетСсылка);
    РезультатЗапроса = Запрос.Выполнить();

    РезультатФункции = Неопределено;
    Если РезультатЗапроса.Пустой() Тогда
        Возврат РезультатФункции;
    КонецЕсли;

    Выборка = РезультатЗапроса.Выбрать();
    Выборка.Следующий();
    РезультатФункции = Выборка.Здание;

    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 21.11.2024 [F00231299] создание документа установка счетчика из л/с --

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 10.09.2024 [F00227690] Заполнение динамических показателей --
