// Гарант+ Килипенко 18.11.2024 [F00231124] Отбор счетчиков по договорам ++
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ГП_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
    ГП_ДополнитьТекстЗапросаНаСервере();
    БухгалтерскиеОтчетыКлиентСервер.ДобавитьВыбранноеПоле(ЭтотОбъект.Список.КомпоновщикНастроек, "ДатаПоверки");

    ГП_СоздатьРеквизитОборПоДоговоруНаСервере();
    ГП_СоздатьЭлементДоговорНаСервере();
    ГП_СоздатьЭлементСпискаДатаПоверкиНаСервере();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы
// Гарант+ Килипенко 18.11.2024 [F00231124] Отбор счетчиков по договорам --

// Гарант+ Килипенко 18.11.2024 [F00231124] Отбор счетчиков по договорам ++
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГП_ДоговорПриИзменении(Элемент)
    ГП_УстановитьФильтрПоДоговоруНаСервере(ЭтотОбъект.ГП_Договор);
КонецПроцедуры

&НаКлиенте
Процедура ГП_ДоговорНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;

    ПараметрыОтбора = Новый Структура;
    СписокВидовДоговоров = Новый СписокЗначений;
    СписокВидовДоговоров.Добавить(ГП_ПолучитьДополнительныйВидДоговораАбонентскийОтделНаСервере());
    ПараметрыОтбора.Вставить("ВидДоговораДополнительный", СписокВидовДоговоров);

    ПараметрыФормы = Новый Структура("Отбор", ПараметрыОтбора);
    Оповещение = Новый ОписаниеОповещения("ПослеВыбораДоговораВОперацииДоговорНачалоВыбора", ЭтотОбъект, Неопределено);
    ОткрытьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаВыбора",
        ПараметрыФормы, , , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ГП_СписокПриПолученииДанныхНаСервереПосле(ИмяЭлемента, Настройки, Строки)
    Для Каждого СтрокаКЗ Из Строки Цикл
        а = 1;
    КонецЦикла;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы
// Гарант+ Килипенко 18.11.2024 [F00231124] Отбор счетчиков по договорам --

// Гарант+ Килипенко 18.11.2024 [F00231124] Отбор счетчиков по договорам ++
#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ГП_СоздатьЭлементДоговорНаСервере()
    РезультатФункции = Новый Структура("Элемент, Реквизит, ГруппаФормы");

    НаименованиеСоздаваемогоРеквизита = "ГП_Договор";

    // Создание реквизита
    ТипРеквизита = Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов");
    РезультатФункции.Реквизит = Новый РеквизитФормы(НаименованиеСоздаваемогоРеквизита, ТипРеквизита, "", "Договор");
    ЭтотОбъект.ИзменитьРеквизиты(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РезультатФункции.Реквизит));

    ЭтотОбъект[НаименованиеСоздаваемогоРеквизита] = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();

    // Создание элемента формы
    РезультатФункции.Элемент = ГП_РаботаСФормамиКлиентСервер.СоздатьПолеФормы(НаименованиеСоздаваемогоРеквизита,
            Новый Структура("Заголовок", "Договор"), ЭтотОбъект, "ГруппаПараметрыОтбора", Неопределено);
    РезультатФункции.Элемент.Вид = ВидПоляФормы.ПолеВвода;
    РезультатФункции.Элемент.ПутьКДанным = НаименованиеСоздаваемогоРеквизита;
    РезультатФункции.Элемент.КнопкаОчистки = Истина;
    РезультатФункции.Элемент.УстановитьДействие("ПриИзменении", "ГП_ДоговорПриИзменении");
    РезультатФункции.Элемент.УстановитьДействие("НачалоВыбора", "ГП_ДоговорНачалоВыбора");

    Возврат РезультатФункции;
КонецФункции

&НаСервере
Функция ГП_СоздатьЭлементСпискаДатаПоверкиНаСервере()
    РезультатФункции = Новый Структура("Элемент");

    НаименованиеСоздаваемогоПоля = "ГП_ДатаПоверки";

    // Создание элемента формы
    РезультатФункции.Элемент = ГП_РаботаСФормамиКлиентСервер.СоздатьПолеФормы(НаименованиеСоздаваемогоПоля,
            Новый Структура("Заголовок", "Дата поверки"), ЭтотОбъект, "Список", "Тарифность");
    РезультатФункции.Элемент.Вид = ВидПоляФормы.ПолеВвода;
    РезультатФункции.Элемент.ПутьКДанным = "Список." + НаименованиеСоздаваемогоПоля;
    РезультатФункции.Элемент.ДоступныеТипы = Новый ОписаниеТипов(ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));

    Возврат РезультатФункции;
КонецФункции

&НаСервере
Функция ГП_СоздатьРеквизитОборПоДоговоруНаСервере()
    РезультатФункции = Новый Структура("Реквизит");

    НаименованиеСоздаваемогоРеквизита = "ГП_ОтборПоДоговору";

    // Создание реквизита
    ТипРеквизита = Новый ОписаниеТипов();
    РезультатФункции.Реквизит = Новый РеквизитФормы(НаименованиеСоздаваемогоРеквизита, ТипРеквизита, "", "Отбор по договору");
    ЭтотОбъект.ИзменитьРеквизиты(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РезультатФункции.Реквизит));

    ЗначениеРеквизитаОтбора = ЭтотОбъект.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЗначениеРеквизитаОтбора.Представление = "ГП_ОтборПоДоговору";
    ЗначениеРеквизитаОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
    ЗначениеРеквизитаОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
    ЗначениеРеквизитаОтбора.ПравоеЗначение = Новый Массив;
    ЗначениеРеквизитаОтбора.Использование = Ложь;
    ЭтотОбъект[НаименованиеСоздаваемогоРеквизита] = ЗначениеРеквизитаОтбора;

    Возврат РезультатФункции;
КонецФункции

&НаСервере
Процедура ГП_УстановитьФильтрПоДоговоруНаСервере(Знач ДоговорСсылка)
    ОтборПоДоговору = ГП_ПолучитьЭлементОтбораПоПредставлению(ЭтотОбъект.ГП_ОтборПоДоговору.Представление);
    Если ОтборПоДоговору = Неопределено Тогда
        Возврат;
    КонецЕсли;

    Если ЗначениеЗаполнено(ДоговорСсылка) = Ложь Тогда
        ОтборПоДоговору.Использование = Ложь;
        Возврат;
    КонецЕсли;

    МассивКонтрагентовОтбора = ГП_ПолучитьСписокПриборовУчетаДоговораНаСервере(ДоговорСсылка);
    ОтборПоДоговору.ПравоеЗначение = МассивКонтрагентовОтбора;
    ОтборПоДоговору.Использование = Истина;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ГП_ПолучитьСписокПриборовУчетаДоговораНаСервере(Знач ДоговорСсылка)
    РезультатФункции = ГП_ПриборыУчета.ПолучитьСписокПриборовУчетаДоговора(ДоговорСсылка, Неопределено);
    Возврат РезультатФункции;
КонецФункции

&НаСервере
Функция ГП_ПолучитьЭлементОтбораПоПредставлению(Знач Представление)
    Для Каждого ТекущийЭлементОтбора Из ЭтотОбъект.Список.Отбор.Элементы Цикл
        Если ТекущийЭлементОтбора.Представление = Представление Тогда
            Возврат ТекущийЭлементОтбора;
        КонецЕсли;
    КонецЦикла;

    Возврат Неопределено;
КонецФункции

&НаСервереБезКонтекста
Функция ГП_ПолучитьДополнительныйВидДоговораАбонентскийОтделНаСервере()
    Возврат ГП_РаботаСДоговорами.ПолучитьДополнительныйВидДоговораАбонентскийОтдел().Ссылка;
КонецФункции

&НаСервере
Процедура ГП_ДополнитьТекстЗапросаНаСервере()
    ЭтотОбъект.Список.ТекстЗапроса = ГП_ПолучитьДополненныйТекстЗапросаНаСервере(ЭтотОбъект.Список.ТекстЗапроса);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ГП_ПолучитьДополненныйТекстЗапросаНаСервере(Знач ТекстЗапроса)
    ТекстЗапросаНачало =
        "ВЫБРАТЬ
        |    ИсторияСостоянийПриборовУчета.ПриборУчета КАК ПриборУчета,
        |    МАКСИМУМ(ИсторияСостоянийПриборовУчета.ДатаПоверки) КАК ДатаПоверки
        |ПОМЕСТИТЬ ВТ_ИсторияСостоянийПриборовУчета
        |ИЗ
        |    РегистрСведений.УПЖКХ_ИсторияСостоянийПриборовУчета.СрезПоследних(&ДатаАктуальностиСведений) КАК ИсторияСостоянийПриборовУчета
        |СГРУППИРОВАТЬ ПО
        |   ИсторияСостоянийПриборовУчета.ПриборУчета
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |";

    СтрокаЗамены = "ЕСТЬNULL(втСостонияПриборовУчета.Действует, ЛОЖЬ) КАК Действует";

    ТекстЗапросаЗамены = СтрокаЗамены + ",
        |ВТ_ИсторияСостоянийПриборовУчета.ДатаПоверки КАК ГП_ДатаПоверки";

    ТекстЗапроса = СтрЗаменить(ТекстЗапроса, СтрокаЗамены, ТекстЗапросаЗамены);

    ТекстЗапросаОкончание =
        "ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсторияСостоянийПриборовУчета КАК ВТ_ИсторияСостоянийПриборовУчета
        |ПО втСостонияПриборовУчета.ПриборУчета = ВТ_ИсторияСостоянийПриборовУчета.ПриборУчета";

    ТекстЗапроса = СтрШаблон(
            "%1
            |%2
            |%3", ТекстЗапросаНачало, ТекстЗапроса, ТекстЗапросаОкончание);

    Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 18.11.2024 [F00231124] Отбор счетчиков по договорам --

#Область СлужебныйПрограммныйИнтерфейс

// Обработчик оповещения процедуры ОткрытьФорму.
// Параметры:
//  РезультатЗакрытия - значение, переданное при вызове метода Закрыть открываемой формы.
//  ДополнительныеПараметры - значение, которое было указано при создании оповещения.
&НаКлиенте
Процедура ПослеВыбораДоговораВОперацииДоговорНачалоВыбора(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
    Если ЭтотОбъект.ГП_Договор <> РезультатЗакрытия Тогда
        ЭтотОбъект.ГП_Договор = РезультатЗакрытия;
        ГП_УстановитьФильтрПоДоговоруНаСервере(ЭтотОбъект.ГП_Договор);
    КонецЕсли;
КонецПроцедуры

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
