
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	Если Объект.Ссылка.Пустая() Тогда
		НастройкиПользователей.ЗаполнитьШапкуДокумента(Объект);
	КонецЕсли;
	ТекущийКуратор=РаботаСоСтудентами.ПолучитьКуратора(Объект.Ссылка);
	Курс=РаботаСУчебнойГруппойНаСервере.ПолучитьКурс(Объект.Ссылка);
		// Обработчик подсистемы "Свойства".
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура СменитьКуратора(Команда)
	ПараметрыЗаписи = Новый Структура();
	ПараметрыЗаписи.Вставить("УчебнаяГруппа", Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.Кураторство.ФормаЗаписи",ПараметрыЗаписи,ЭтотОбъект,,,, Новый ОписаниеОповещения("СменитьКуратораЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура СменитьКуратораЗавершение(Результат, ДополнительныеПараметры) Экспорт

	ТекущийКуратор=РаботаСоСтудентами.ПолучитьКуратора(Объект.Ссылка);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
      ОбновитьЭлементыДополнительныхРеквизитов();
КонецЕсли;
КонецПроцедуры

Процедура ОбновитьЭлементыДополнительныхРеквизитов()
   УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПрограммаСПОПриИзменении(Элемент)
	ЗаполнитьПоПрограмме();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПрограмме()
	Объект.ФормаОбучения=Объект.ПрограммаСПО.ФормаОбучения;
	Объект.Специальность=Объект.ПрограммаСПО.Специальность;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСеместрыНаСервере()
	ГодПоступления  = Объект.ГодПоступления;
	ГодОкончания	= Год(Объект.ДатаОкончанияОбучения);
	ЛетОбучения = ГодОкончания-ГодПоступления;
	Если ЛетОбучения>0 И ЛетОбучения <=5 Тогда
		Объект.Семестры.Очистить();
		Семестр = 1;
		Для Курс=1 По ЛетОбучения Цикл
			Для НомерСеместраВГоду=1 По 2 Цикл
				НовСеместр = Объект.Семестры.Добавить();
				НовСеместр.Семестр = ПредопределенноеЗначение("Справочник.КурсыСеместры.Семестр"+Семестр);
				НовСеместр.ПериодОбучения = ПолучитьПериодОбучения(ГодПоступления-1+Курс,НомерСеместраВГоду);
				Если ЗначениеЗаполнено(НовСеместр.ПериодОбучения) Тогда
					НовСеместр.ДатаОкончания=НовСеместр.ПериодОбучения.ДатаОкончанияПериода;
				КонецЕсли;
				Семестр = Семестр + 1;
			КонецЦикла;
		КонецЦикла;
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заполнение семестров невозможно. Проверьте год поступления и дату окончания обучения.";
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьПериодОбучения(ГодОбучения,НомерСеместраВГоду);
	НайденыйРодитель = Справочники.ПериодыОбучения.НайтиПоНаименованию(Формат(ГодОбучения,"ЧГ=0"));
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПериодыОбучения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПериодыОбучения КАК ПериодыОбучения
		|ГДЕ
		|	ПериодыОбучения.Родитель = &Родитель
		|	И ПериодыОбучения.Наименование ПОДОБНО &Искомое";

	Запрос.УстановитьПараметр("Искомое", "%"+НомерСеместраВГоду+" с%");
	Запрос.УстановитьПараметр("Родитель", НайденыйРодитель);
	Выборка = Запрос.Выполнить().Выбрать();;
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ЗаполнитьСеместры(Команда)
	ЗаполнитьСеместрыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОкончаниеПериода(ПериодОбучения)
	Возврат ПериодОбучения.ДатаОкончанияПериода;
КонецФункции

&НаКлиенте
Процедура СеместрыПериодОбученияПриИзменении(Элемент)
	ТекСеместр=Элементы.Семестры.ТекущиеДанные;
	Если ТекСеместр<>Неопределено Тогда
		Если ЗначениеЗаполнено(ТекСеместр.ПериодОбучения) Тогда
			ТекСеместр.ДатаОкончания=ПолучитьОкончаниеПериода(ТекСеместр.ПериодОбучения);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти
