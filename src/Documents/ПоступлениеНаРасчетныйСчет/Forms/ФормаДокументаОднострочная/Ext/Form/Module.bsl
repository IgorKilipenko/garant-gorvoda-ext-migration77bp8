// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления ++
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ГП_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
    ГП_СоздатьДополнительныеЭлементыНаСервере();
    ГП_НастроитьВидимостьЭлементовФормыНаСервере();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы
// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления --

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ГП_ОплатаОтПокупателяФизЛицаПриИзменении(Элемент)
    ГП_ОбновитьОформлениеПоляОплатаОтПокупателяФизЛицаНаСервере();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления ++
#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ГП_СоздатьДокументРасчетовПриНажатии()
    Ждать ОткрытьНовыйДокументРегистрацииОплаты();
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы
// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления --

// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления ++
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Функция ОткрытьНовыйДокументРегистрацииОплаты()
    Если ЭтотОбъект.Объект.Проведен = Ложь Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Документ должен быть проведен");
        Возврат Неопределено;
    КонецЕсли;

    РезультатКонтроля = ГП_ВыполнитьКонтрольРанееРаспределенныхСуммДокументаНаСервере();
    Если РезультатКонтроля.Успех = Ложь ИЛИ РезультатКонтроля.ДокументыРегистрации.Количество() > 0 Тогда
        РезультатДиалога = Ждать ГП_ОбщегоНазначенияКлиент.СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(
                СтрШаблон("Внимание! По текущему документу ранее распределена сумма: %1. Остаток: %2",
                    ГП_ОбщегоНазначенияКлиент.ФорматСумм(РезультатКонтроля.ОбщаяРаспределеннаяСумма),
                    ГП_ОбщегоНазначенияКлиент.ФорматСумм(ЭтотОбъект.Объект.СуммаДокумента - РезультатКонтроля.ОбщаяРаспределеннаяСумма)));
        Если РезультатДиалога = Ложь Тогда
            Возврат Неопределено; // Пользователь отказался от выполнения операции
        КонецЕсли;
    КонецЕсли;

    ПараметрыРегистрацииОплаты = Новый Структура("ГП_ДанныеЗаполнения", Новый Структура);

    ПараметрыРегистрацииОплаты.ГП_ДанныеЗаполнения.Вставить("Дата", ЭтотОбъект.Объект.Дата);
    ПараметрыРегистрацииОплаты.ГП_ДанныеЗаполнения.Вставить("ДокументОплаты", ЭтотОбъект.Объект.Ссылка);
    ПараметрыРегистрацииОплаты.ГП_ДанныеЗаполнения.Вставить("Контрагент", ЭтотОбъект.Объект.Контрагент);
    ПараметрыРегистрацииОплаты.ГП_ДанныеЗаполнения.Вставить("ВидОперации",
        ПредопределенноеЗначение("Перечисление.КВП_ВидыОперацийРегистрацииОплаты.ПоступлениеНаБанковскийСчет"));
    ПараметрыРегистрацииОплаты.ГП_ДанныеЗаполнения.Вставить("СуммаДокументаОплаты", ЭтотОбъект.Объект.СуммаДокумента);

    ФормаРегистрацияОплаты = ОткрытьФорму("Документ.КВП_РегистрацияОплаты.Форма.ФормаДокумента",
            ПараметрыРегистрацииОплаты, , ЭтотОбъект.УникальныйИдентификатор, , , , РежимОткрытияОкнаФормы.Независимый);

    Возврат ФормаРегистрацияОплаты;
КонецФункции

#Область НастройкиФормы

&НаСервере
Процедура ГП_СоздатьДополнительныеЭлементыНаСервере()
    ГП_СоздатьКомандуСоздатьДокументРасчетовНаСервере();
    ГП_СоздатьПолеФлагаОплатаОтПокупателяФизЛицаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ГП_НастроитьВидимостьЭлементовФормыНаСервере()
    ГП_ОбновитьОформлениеПоляОплатаОтПокупателяФизЛицаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ГП_ОбновитьОформлениеПоляОплатаОтПокупателяФизЛицаНаСервере()
    Если ЭтотОбъект.Объект.ГП_ОплатаОтПокупателяФизЛица Тогда
        ЭтотОбъект.Элементы.ГП_ОплатаОтПокупателяФизЛица.ЦветТекстаЗаголовка = ЦветаСтиля.ЦветОсобогоТекста;
    Иначе
        ЭтотОбъект.Элементы.ГП_ОплатаОтПокупателяФизЛица.ЦветТекстаЗаголовка = ЦветаСтиля.ЦветТекстаПоля;
    КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ГП_СоздатьКомандуСоздатьДокументРасчетовНаСервере()
    Результат = Новый Структура("Кнопка, Команда");

    // Создание команды формы
    Результат.Команда = ЭтотОбъект.Команды.Добавить("ГП_СоздатьДокументРасчетов");
    Результат.Команда.Заголовок = "Создать док. расчетов";
    Результат.Команда.Действие = Результат.Команда.Имя + "ПриНажатии";

    // Создание элемента формы
    ПараметрыКнопки = Новый Структура("Заголовок, ИмяКоманды, Видимость");
    ПараметрыКнопки.Заголовок = Результат.Команда.Заголовок;
    ПараметрыКнопки.ИмяКоманды = Результат.Команда.Имя;
    ПараметрыКнопки.Видимость = Истина;

    Результат.Кнопка = ГП_РаботаСФормамиКлиентСервер.СоздатьКнопкуФормы(Результат.Команда.Имя, ПараметрыКнопки, ЭтотОбъект,
            "ГруппаВажныеКоманды", "ФормаОбщаяКомандаПоказатьДвиженияДокумента");

    Возврат Результат;
КонецФункции

// Используется для указания что документ может быть использован при передаче в ОФД
// Возвращаемое значение:
//  - Структура
&НаСервере
Функция ГП_СоздатьПолеФлагаОплатаОтПокупателяФизЛицаНаСервере()
    РезультатФункции = Новый Структура("Элемент");

    НаименованиеСоздаваемогоЭлемента = "ГП_ОплатаОтПокупателяФизЛица";

    // Проверка наличия поля формы
    Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтотОбъект.Элементы, НаименованиеСоздаваемогоЭлемента) Тогда
        РезультатФункции.Элемент = ЭтотОбъект.Элементы[НаименованиеСоздаваемогоЭлемента];

        Возврат РезультатФункции; // Элемент уже существует
    КонецЕсли;

    РезультатФункции.Элемент = ГП_РаботаСФормамиКлиентСервер.СоздатьПолеФлажка(НаименованиеСоздаваемогоЭлемента,
            Новый Структура, ЭтотОбъект, "ГруппаПраваяКолонка", Неопределено);
    РезультатФункции.Элемент.ПутьКДанным = СтрШаблон("Объект.%1", НаименованиеСоздаваемогоЭлемента);
    РезультатФункции.Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
    РезультатФункции.Элемент.УстановитьДействие("ПриИзменении", НаименованиеСоздаваемогоЭлемента + "ПриИзменении");

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // НастройкиФормы

// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * ОбщаяРаспределеннаяСумма - Число
//      * ДокументыРегистрации - Массив из ДокументСсылка
&НаСервере
Функция ГП_ВыполнитьКонтрольРанееРаспределенныхСуммДокументаНаСервере()
    РезультатКонтроля = ГП_РегистрацияОплатыСлужебный.ВыполнитьКонтрольРанееРаспределенныхСуммДокумента(
        ЭтотОбъект.Объект.Ссылка, ЭтотОбъект.Объект.СуммаДокумента);
    Возврат РезультатКонтроля;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления --
