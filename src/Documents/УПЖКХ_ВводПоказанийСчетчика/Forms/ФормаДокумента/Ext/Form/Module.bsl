// Гарант+ Килипенко 11.09.2024 [F00227694] Доработка документа ввод показаний счетчика ++
#Область ОбработчикиСобытийФормы

// Для заполнения ТЧ Главная при создании документа
&НаСервере
Процедура ГП_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
    ГП_СоздатьКомандуНачисленияПоПоказаниям();

    ГП_УправлениеФормой(ЭтотОбъект);

    ЭтоНовыйДокументБезКопирования = Объект.Ссылка.Пустая()
        И (ЭтотОбъект.Параметры.Свойство("ЗначениеКопирования") = Ложь
            ИЛИ ЗначениеЗаполнено(ЭтотОбъект.Параметры.ЗначениеКопирования));
    Если Отказ ИЛИ ЭтоНовыйДокументБезКопирования Тогда
        Возврат;
    КонецЕсли;

    ЭтотОбъект.Объект.Дата = ТекущаяДатаСеанса();

    Если ЭтотОбъект.Параметры.Свойство("ГП_ВидОперации") Тогда
        ЭтотОбъект.Объект.ВидОперации = ЭтотОбъект.Параметры.ГП_ВидОперации;
    КонецЕсли;

    Если Параметры.Свойство("ГП_ЗначенияПоказанийДляЗаполнения") Тогда
        ЭтотОбъект.Объект.Главная.Очистить();

        // Заполнение ТЧ Главная
        ДатаЗаполнения = ЭтотОбъект.Объект.Дата;
        Для Каждого СтрокаИсходныхПоказаний Из ЭтотОбъект.Параметры.ГП_ЗначенияПоказанийДляЗаполнения Цикл
            НоваяСтрокаПоказаний = ЭтотОбъект.Объект.Главная.Добавить();
            НоваяСтрокаПоказаний.ДатаПоказания = ДатаЗаполнения;
            ЗаполнитьЗначенияСвойств(НоваяСтрокаПоказаний, СтрокаИсходныхПоказаний);
        КонецЦикла;

        ГП_ЗаполнитьДневныеПоказанийВиртуальныхСчетчиковНаСервере();
        ОбновитьТабличнуюЧастьНаСервере();
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГП_ПриОткрытииПосле(Отказ)
    ГП_НастроитьВидимостьЭлементовФормы();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы
// Гарант+ Килипенко 11.09.2024 [F00227694] Доработка документа ввод показаний счетчика --

// Гарант+ Килипенко 16.09.2024 [F00227727] Доработать заполнение документа начисление по приборам учета ++
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГП_ВидОперацииПриИзмененииПосле(Элемент)
    ГП_НастроитьВидимостьЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ГП_ВидОперацииОбработкаВыбораПосле(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
    ГП_НастроитьВидимостьЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ГП_ВводНачальныхПоказанийПриИзмененииПосле(Элемент)
    ГП_НастроитьВидимостьЭлементовФормы();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы
// Гарант+ Килипенко 16.09.2024 [F00227727] Доработать заполнение документа начисление по приборам учета --

// Гарант+ Килипенко 11.11.2024 [F00230850] Сохранению показаний счетчика ++
#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоПоказаний

&НаКлиенте
Процедура ГП_ДеревоПоказанийДневноеПоказаниеПриИзмененииПосле(Элемент)
    ТекущиеДанныеДерева = ЭтотОбъект.Элементы.ДеревоПоказаний.ТекущиеДанные;
    Если ТекущиеДанныеДерева = Неопределено Тогда
        Возврат;
    КонецЕсли;

    ТекущийСчетчик = ТекущиеДанныеДерева.Счетчик;
    Если ГП_ПолучитьЭтоСчетчикДляПерерасчетовНаСервере(ТекущийСчетчик) = Ложь Тогда
        Возврат;
    КонецЕсли;

    ТекущиеДанныеДерева.ДневноеПоказание = ТекущиеДанныеДерева.ДневноеПоказание + ТекущиеДанныеДерева.ДневноеПоказаниеПредыдущее;
    УПЖКХ_ВводПоказанийПриборовУчетаКлиент.ОбработатьИзменениеДневногоПоказания(
        АдресХранилищаДанныхСтроки, ТекущиеДанныеДерева, Истина);
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовТаблицыФормыДеревоПоказаний
// Гарант+ Килипенко 11.11.2024 [F00230850] Сохранению показаний счетчика --

// Гарант+ Килипенко 16.09.2024 [F00227727] Доработать заполнение документа начисление по приборам учета ++
#Область ОбработчикиКомандФормы

// Создает документ ввода показаний счетчиков по текущей строке списка (с отбором по договору л/с текущей строки)
&НаКлиенте
Асинх Процедура ГП_НачислитьУслугиПоПоказаниямПриНажатии(Команда)
    Если ЭтотОбъект.Объект.Ссылка.Пустая() ИЛИ ЭтотОбъект.Объект.Проведен = Ложь Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Документ должен быть записан и проведен.");
        РезультатДиалога = Ждать ГП_ОбщегоНазначенияКлиент.СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(
                "Для продолжения необходимо записать документ.");
        Если РезультатДиалога = Ложь Тогда
            Возврат; // Пользователь отказался от выполнения операции
        Иначе
            ЭтотОбъект.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
        КонецЕсли;
    КонецЕсли;

    Если ЭтотОбъект.Объект.Проведен = Ложь Тогда
        Возврат; // Документ остался не проведенным
    КонецЕсли;

    // Открытие формы нового документа Начисления услуг
    ДанныеЗаполненияНачислений = ГП_ПолучитьСписокЛицевыхСчетовДокументаНаСервере(ЭтотОбъект.Объект.Ссылка);
    КоличествоФормДляОткрытия = ДанныеЗаполненияНачислений.Количество();
    Если КоличествоФормДляОткрытия = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Таблица ввода показаний по приборам учета должна быть заполнена");
        Возврат;
    КонецЕсли;

    Для Каждого ЛСУслугиКЗ Из ДанныеЗаполненияНачислений Цикл
        УслугаДляНачисления = ЛСУслугиКЗ.Ключ;
        ФормаНачисленияУслуг = ГП_ОткрытьНовыйДокументНачисленияУслуг(УслугаДляНачисления, ЛСУслугиКЗ.Значение);

        // Сообщаем пользователю что открыто несколько форм начисления услуг
        Если КоличествоФормДляОткрытия > 1 Тогда
            ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(
                    "Открыта форма начисления услуг для услуги ""%1"".
                    |Всего открыто: ""%2"" формы начисления",
                    УслугаДляНачисления, КоличествоФормДляОткрытия));
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы
// Гарант+ Килипенко 16.09.2024 [F00227727] Доработать заполнение документа начисление по приборам учета --

// Гарант+ Килипенко 16.09.2024 [F00227727] Доработать заполнение документа начисление по приборам учета ++
#Область СлужебныеПроцедурыИФункции

// Создает кнопку формы Начислить услуги по показаниям
// Возвращаемое значение:
//  - Структура
//      * Кнопка
//      * Команда
&НаСервере
Функция ГП_СоздатьКомандуНачисленияПоПоказаниям()
    Результат = Новый Структура("Кнопка, Команда");

    // Создание команды формы
    Результат.Команда = ЭтотОбъект.Команды.Добавить("ГП_НачислитьУслугиПоПоказаниям");
    Результат.Команда.Заголовок = "Начислить услуги по показаниям";
    Результат.Команда.Действие = "ГП_НачислитьУслугиПоПоказаниямПриНажатии";

    // Создание элемента формы
    Результат.Кнопка = ЭтотОбъект.Элементы.Добавить(
            "ГП_НачислитьУслугиПоПоказаниям",
            Тип("КнопкаФормы"),
            ЭтотОбъект.Элементы.ФормаКоманднаяПанель);
    Результат.Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
    Результат.Кнопка.ИмяКоманды = Результат.Команда.Имя;

    Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ГП_НастроитьВидимостьЭлементовФормы()
    ЭтотОбъект.Элементы.ГП_НачислитьУслугиПоПоказаниям.Видимость = (ЭтотОбъект.Объект.ВводНачальныхПоказаний = Ложь
            И ЭтотОбъект.Объект.ВидОперации =
            ПредопределенноеЗначение("Перечисление.КВП_ВидыОперацийВводаПоказанийСчетчика.ВводПоказанииСчетчикаНаЛицевойСчет"));
КонецПроцедуры

&НаСервереБезКонтекста
Функция ГП_ПолучитьСписокЛицевыхСчетовДокументаНаСервере(Знач ДокументСсылка)
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   ВЫРАЗИТЬ(ВводПоказанийСчетчикаГлавная.Объект КАК Справочник.КВП_ЛицевыеСчета) КАК ЛицевойСчет,
        |   ВводПоказанийСчетчикаГлавная.Услуга КАК Услуга
        |ИЗ
        |   Документ.УПЖКХ_ВводПоказанийСчетчика.Главная КАК ВводПоказанийСчетчикаГлавная
        |ГДЕ
        |   ВводПоказанийСчетчикаГлавная.Ссылка = &ДокументСсылка
        |   И ВводПоказанийСчетчикаГлавная.Объект ССЫЛКА Справочник.КВП_ЛицевыеСчета
        |   И ВводПоказанийСчетчикаГлавная.Объект <> ЗНАЧЕНИЕ(Справочник.КВП_ЛицевыеСчета.ПустаяСсылка)
        |
        |СГРУППИРОВАТЬ ПО
        |   ВводПоказанийСчетчикаГлавная.Услуга,
        |   ВЫРАЗИТЬ(ВводПоказанийСчетчикаГлавная.Объект КАК Справочник.КВП_ЛицевыеСчета)
        |";

    Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);

    РезультатЗапроса = Запрос.Выполнить();
    ТаблицаГлавная = РезультатЗапроса.Выгрузить();

    // Формирование списка значений
    РезультатФункции = Новый Соответствие;
    Для Каждого СтрокаДанных Из ТаблицаГлавная Цикл
        КонтейнерЛицевыхСчетов = РезультатФункции.Получить(СтрокаДанных.Услуга);
        Если КонтейнерЛицевыхСчетов = Неопределено Тогда
            КонтейнерЛицевыхСчетов = Новый СписокЗначений;
            РезультатФункции.Вставить(СтрокаДанных.Услуга, КонтейнерЛицевыхСчетов);
        КонецЕсли;

        КонтейнерЛицевыхСчетов.Добавить(СтрокаДанных.ЛицевойСчет);
    КонецЦикла;

    Возврат РезультатФункции;
КонецФункции

// Гарант+ Килипенко 18.09.2024 [F00228484] Доработка отражения в рег учете ++
//
// Открывает форму нового документа `КВП_НачислениеУслуг` с заполнением (передачей в параметрах формы)
//  списка лицевых счетов по ПУ сформированного по ТЧ Главная
// Параметры:
//  Услуга - СправочникСсылка.КВП_Услуги
//  СписокЛицевыхСчетов - СписокЗначений из СправочникСсылка.КВП_ЛицевыеСчета
// Возвращаемое значение:
//  - Форма
&НаКлиенте
Функция ГП_ОткрытьНовыйДокументНачисленияУслуг(Знач Услуга, Знач СписокЛицевыхСчетов)
    ПараметрыВводаПоказаний = Новый Структура("ГП_ВидОперации",
            ПредопределенноеЗначение("Перечисление.КВП_ВидыОперацийНачисленияУслуг.НачисленияПоПоказаниямПУ"));

    ПараметрыВводаПоказаний.Вставить("ГП_Услуга", Услуга);
    ПараметрыВводаПоказаний.Вставить("ГП_ДатаВводаПоказаний", ЭтотОбъект.Объект.Дата);
    ПараметрыВводаПоказаний.Вставить("ГП_СписокЛицевыхСчетов", СписокЛицевыхСчетов);

    ФормаНачисленияУслуг = ОткрытьФорму("Документ.КВП_НачислениеУслуг.Форма.ФормаДокумента",
            ПараметрыВводаПоказаний, , Новый УникальныйИдентификатор, , , , РежимОткрытияОкнаФормы.Независимый);

    Возврат ФормаНачисленияУслуг;
КонецФункции // Гарант+ Килипенко 18.09.2024 [F00228484] Доработка отражения в рег учете ++

// Гарант+ Килипенко 02.08.2024 [F00230765] перенос счетчиков ОИ (по среднему) ++
//
// Заполняет текущее дневное показание для виртуальных счетчиков (в ТЧ Главная) по среднему значению расхода
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * ИзмененныеСтроки - Массив из СтрокаТабличнойЧасти
Функция ГП_ЗаполнитьДневныеПоказанийВиртуальныхСчетчиковНаСервере()
    РезультатФункции = Новый Структура("Успех, ИзмененныеСтроки", Истина, Новый Массив);

    Для Каждого СтрокаДанных Из ЭтотОбъект.Объект.Главная Цикл
        Если ЗначениеЗаполнено(СтрокаДанных.Счетчик) = Ложь Тогда
            Продолжить;
        КонецЕсли;

        СтруктураДанныхСчетчика = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаДанных.Счетчик,
                Новый Структура("ГП_ЭтоВиртуальныйСчетчик, ГП_КоличествоПоСреднему, СпособРегистрацииПоказаний"));

        ЭтоВиртуальныйСчетчикСРасчетомПоСреднему = СтруктураДанныхСчетчика.ГП_ЭтоВиртуальныйСчетчик = Истина;
        ЭтоВиртуальныйСчетчикСРасчетомПоСреднему = ЭтоВиртуальныйСчетчикСРасчетомПоСреднему
            И СтруктураДанныхСчетчика.СпособРегистрацииПоказаний =
            Перечисления.КВП_СпособыРегистрацииПоказанийСчетчиков.РасходЗаПериодРасчета;

        Если ЭтоВиртуальныйСчетчикСРасчетомПоСреднему = Ложь ИЛИ СтруктураДанныхСчетчика.ГП_КоличествоПоСреднему = 0 Тогда
            Продолжить;
        КонецЕсли;

        СтрокаДанных.ДневноеПоказание = СтруктураДанныхСчетчика.ГП_КоличествоПоСреднему;
        РезультатФункции.ИзмененныеСтроки.Добавить(СтрокаДанных);
    КонецЦикла;

    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 02.08.2024 [F00230765] перенос счетчиков ОИ (по среднему) --

&НаКлиентеНаСервереБезКонтекста
Процедура ГП_УправлениеФормой(Форма)
    // Дерево показаний
    Форма.Элементы.ДеревоПоказанийГруппаПиковоеПоказание.Видимость = Ложь;
    Форма.Элементы.ДеревоПоказанийГруппаНочноеПоказание.Заголовок = "Показание для истории";
КонецПроцедуры

// Параметры:
//  СчетчикСсылка - СправочникСсылка.КВП_Счетчики
// Возвращаемое значение:
//  - Булево
&НаСервереБезКонтекста
Функция ГП_ПолучитьЭтоСчетчикДляПерерасчетовНаСервере(Знач СчетчикСсылка)
    РезультатФункции = Ложь;

    Если СчетчикСсылка = Справочники.КВП_Счетчики.ПустаяСсылка() Тогда
        Возврат РезультатФункции;
    КонецЕсли;

    РезультатФункции = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СчетчикСсылка, "ГП_ЭтоСчетчикДляПерерасчетов");
    Возврат ГП_ПриборыУчета.ПолучитьЭтоСчетчикДляПерерасчетов(СчетчикСсылка);
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 16.09.2024 [F00227727] Доработать заполнение документа начисление по приборам учета --
