// Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа ++
#Область ПереопределениеСтандартныхФункций

&ИзменениеИКонтроль("ПолучитьДопДанныеПоОплатам")
Функция ГП_ПолучитьДопДанныеПоОплатам(ТаблицаОплат)

    Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ
    |	ВЫРАЗИТЬ(втТаблицаОплат.Документ КАК Документ.КВП_РегистрацияОплаты) КАК Документ,
    |	ВЫРАЗИТЬ(втТаблицаОплат.ЛицевойСчет КАК Справочник.КВП_ЛицевыеСчета) КАК ЛицевойСчет
    |ПОМЕСТИТЬ втТаблицаОплат
    |ИЗ
    |	&втТаблицаОплат КАК втТаблицаОплат
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	втТаблицаОплат.Документ КАК Документ,
    |	втТаблицаОплат.Документ.Организация КАК Организация,
    |	втТаблицаОплат.Документ.ИсточникОплаты КАК ИсточникОплаты,
    |	втТаблицаОплат.Документ.ВариантРаспределенияОплатКапРемонт КАК ВариантРаспределенияОплатКапРемонт,
    |	втТаблицаОплат.Документ.ВидОперации КАК ВидОперации,
    |	втТаблицаОплат.Документ.Дата КАК ДатаДокумента,
    |	втТаблицаОплат.ЛицевойСчет КАК ЛицевойСчет,
    |	втТаблицаОплат.ЛицевойСчет.Адрес КАК Помещение
    |ПОМЕСТИТЬ ТаблицаОбъектов
    |ИЗ
    |	втТаблицаОплат КАК втТаблицаОплат
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ЛицевойСчет КАК ЛицевойСчет,
    |	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец КАК ОтветственныйВладелец,
    |	ПРЕДСТАВЛЕНИЕ(УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец) КАК ОтветственныйВладелецПредставление,
    |	ВЫБОР
    |		КОГДА ТИПЗНАЧЕНИЯ(УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец) = ТИП(Справочник.Контрагенты)
    |			ТОГДА УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.ИНН
    |		ИНАЧЕ УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.ФизЛицо.ИНН
    |	КОНЕЦ КАК ИНН,
    |	ВЫБОР
    |		КОГДА ТИПЗНАЧЕНИЯ(УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец) = ТИП(Справочник.Контрагенты)
    |					И УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
    |				ИЛИ ТИПЗНАЧЕНИЯ(УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец) = ТИП(Справочник.УПЖКХ_Жильцы)
    |			ТОГДА ИСТИНА
    |		ИНАЧЕ ЛОЖЬ
    |	КОНЕЦ КАК ЭтоФизЛицо
    |ПОМЕСТИТЬ втОтветственныеСобственникиНаниматели
    |ИЗ
    |	РегистрСведений.УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчета.СрезПоследних(
    |			&ТекущаяДата,
    |			ЛицевойСчет В
    |				(ВЫБРАТЬ
    |					ТаблицаОбъектов.ЛицевойСчет
    |				ИЗ
    |					ТаблицаОбъектов КАК ТаблицаОбъектов)) КАК УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ТаблицаОбъектов.Документ КАК Документ,
    #Вставка // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа ++

    |	ВЫБОР
    |		КОГДА ТаблицаОбъектов.Документ ССЫЛКА Документ.КВП_РегистрацияОплаты
    |			ТОГДА ТаблицаОбъектов.Документ.Контрагент
    |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
    |	КОНЕЦ КАК ГП_КонтрагентДокументаОплаты,

    #КонецВставки // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа --
    |	ТаблицаОбъектов.Организация КАК Организация,
    |	ТаблицаОбъектов.ИсточникОплаты КАК ИсточникОплаты,
    |	ТаблицаОбъектов.ВариантРаспределенияОплатКапРемонт КАК ВариантРаспределенияОплатКапРемонт,
    |	ТаблицаОбъектов.ВидОперации КАК ВидОперации,
    |	ТаблицаОбъектов.ДатаДокумента КАК ДатаДокумента,
    |	ТаблицаОбъектов.ЛицевойСчет КАК ЛицевойСчет,
    |	ТаблицаОбъектов.Помещение КАК Помещение,
    |	ЕСТЬNULL(втОтветственныеСобственникиНаниматели.ОтветственныйВладелецПредставление, """") КАК ОтветственныйВладелецПредставление,
    |	ЕСТЬNULL(втОтветственныеСобственникиНаниматели.ИНН, """") КАК ИННОтветственного,
    |	ЕСТЬNULL(втОтветственныеСобственникиНаниматели.ЭтоФизЛицо, ЛОЖЬ) КАК ЭтоФизЛицо
    |ИЗ
    |	ТаблицаОбъектов КАК ТаблицаОбъектов
    |		ЛЕВОЕ СОЕДИНЕНИЕ втОтветственныеСобственникиНаниматели КАК втОтветственныеСобственникиНаниматели
    |		ПО ТаблицаОбъектов.ЛицевойСчет = втОтветственныеСобственникиНаниматели.ЛицевойСчет";

    Запрос.УстановитьПараметр("втТаблицаОплат", ТаблицаОплат);
    Запрос.УстановитьПараметр("ТекущаяДата",    ТекущаяДата());

    Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

&ИзменениеИКонтроль("ПолучитьРасшифровкуОплатДляЧеков")
Функция ГП_ПолучитьРасшифровкуОплатДляЧеков(ТаблицаОплатСДопДанными, СтруктураПараметров)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Организация КАК Организация,
	|	ТаблицаОбъектов.Документ КАК Документ,
	|	ТаблицаОбъектов.ЛицевойСчет КАК ЛицевойСчет,
	|	ТаблицаОбъектов.ВариантРаспределенияОплатКапРемонт КАК ВариантРаспределенияОплатКапРемонт
	|ПОМЕСТИТЬ ТаблицаОбъектов
	|ИЗ
	|	&ТаблицаОбъектов КАК ТаблицаОбъектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КВП_УчетнаяПолитикаТСЖСрезПоследних.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА КВП_УчетнаяПолитикаТСЖСрезПоследних.СтавкаНДСДляОтраженияПени = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_СтавкиНДСДляПениПриОтраженииВРеглУчете.БезНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОтражатьПениПоСтавкеБезНДС
	|ПОМЕСТИТЬ врОтражатьПениПоСтавкеБезНДС
	|ИЗ
	|	РегистрСведений.КВП_УчетнаяПолитикаТСЖ.СрезПоследних(
	|			&ТекущаяДата,
	|			Организация В
	|				(ВЫБРАТЬ
	|					ТаблицаОбъектов.Организация КАК ДокументОрганизация
	|				ИЗ
	|					ТаблицаОбъектов КАК ТаблицаОбъектов)) КАК КВП_УчетнаяПолитикаТСЖСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаОбъектов.Документ КАК Документ,
	|	ТаблицаОбъектов.Организация КАК Организация,
	|	ТаблицаОбъектов.ЛицевойСчет КАК ЛицевойСчет,
	|	КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга КАК Услуга,
	|	КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги КАК ВидУслуги,
	|	ПРЕДСТАВЛЕНИЕ(КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги) КАК ВидУслугиПредставление,
	|	КВП_РегистрацияОплатыРасшифровкаПлатежа.МесяцНачисления КАК МесяцНачисления,
	|	ВЫБОР
	|		КОГДА НЕ КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги = ЗНАЧЕНИЕ(Справочник.КВП_ВидыУслуг.ПустаяСсылка)
	|				И КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги.СпособВыводаВКвитанциях = ""Тариф сворачивать, количество суммировать""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СуммироватьКоличество,
	|	ВЫБОР
	|		КОГДА НЕ КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги = ЗНАЧЕНИЕ(Справочник.КВП_ВидыУслуг.ПустаяСсылка)
	|				И КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги.СпособВыводаВКвитанциях = ""Количество сворачивать, тариф суммировать""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СуммироватьТариф,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма = 0
	|					И КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма > КВП_РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма
	|				ТОГДА КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма - КВП_РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПереплатаПоНачислениям,
	|	СУММА(ВЫБОР
	|			КОГДА КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма = 0
	|				ТОГДА 0
	|			КОГДА КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма <= КВП_РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма
	|				ТОГДА КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма
	|			КОГДА КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма > КВП_РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма
	|				ТОГДА КВП_РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма
	|			ИНАЧЕ 0
	|		КОНЕЦ + КВП_РегистрацияОплатыРасшифровкаПлатежа.Рассрочка) КАК Сумма,
	|	СУММА(КВП_РегистрацияОплатыРасшифровкаПлатежа.Пени) КАК Пени,
	|	ЕСТЬNULL(КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.Услуга.ВидСтавкиНДС, ВЫБОР
	|			КОГДА ТаблицаОбъектов.ВариантРаспределенияОплатКапРемонт = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВариантыРаспределенияОплатыПриРаздельномУчетеКР.УслугиКапРемонт)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
	|			ИНАЧЕ &ВидСтавкиНДСИзПерсональныхНастроек
	|		КОНЕЦ) КАК ВидСтавкиНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.Услуга.Услуга, ИСТИНА) = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.Товар)
	|	КОНЕЦ КАК ПризнакПредметаРасчета,
	|	ВЫБОР
	|		КОГДА &ВестиУчетНачисленийПоДобровольномуСтрахованию
	|				И КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга = &УслугаДобровольногоСтрахования
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоДобровольноеСтрахование
	|ПОМЕСТИТЬ втТаблицаРасшифровка
	|ИЗ
	|	ТаблицаОбъектов КАК ТаблицаОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КВП_РегистрацияОплаты.РасшифровкаПлатежа КАК КВП_РегистрацияОплатыРасшифровкаПлатежа
	|		ПО ТаблицаОбъектов.Документ = КВП_РегистрацияОплатыРасшифровкаПлатежа.Ссылка
	|			И ТаблицаОбъектов.ЛицевойСчет = КВП_РегистрацияОплатыРасшифровкаПлатежа.Объект
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОбъектов.Документ,
	|	ТаблицаОбъектов.Организация,
	|	ТаблицаОбъектов.ЛицевойСчет,
	|	КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга,
	|	КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги,
	|	КВП_РегистрацияОплатыРасшифровкаПлатежа.МесяцНачисления,
	|	ВЫБОР
	|		КОГДА НЕ КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги = ЗНАЧЕНИЕ(Справочник.КВП_ВидыУслуг.ПустаяСсылка)
	|				И (КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги.СпособВыводаВКвитанциях = ""Тариф сворачивать, количество суммировать""
	|					ИЛИ КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги.СпособВыводаВКвитанциях = ""Количество сворачивать, тариф суммировать"")
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЕСТЬNULL(КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.Услуга.ВидСтавкиНДС, ВЫБОР
	|			КОГДА ТаблицаОбъектов.ВариантРаспределенияОплатКапРемонт = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВариантыРаспределенияОплатыПриРаздельномУчетеКР.УслугиКапРемонт)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
	|			ИНАЧЕ &ВидСтавкиНДСИзПерсональныхНастроек
	|		КОНЕЦ),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.Услуга.Услуга, ИСТИНА) = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.Товар)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги = ЗНАЧЕНИЕ(Справочник.КВП_ВидыУслуг.ПустаяСсылка)
	|				И КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги.СпособВыводаВКвитанциях = ""Тариф сворачивать, количество суммировать""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги = ЗНАЧЕНИЕ(Справочник.КВП_ВидыУслуг.ПустаяСсылка)
	|				И КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги.СпособВыводаВКвитанциях = ""Количество сворачивать, тариф суммировать""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВестиУчетНачисленийПоДобровольномуСтрахованию
	|				И КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга = &УслугаДобровольногоСтрахования
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаРасшифровка.Документ КАК Документ,
	|	втТаблицаРасшифровка.ЛицевойСчет КАК ЛицевойСчет,
	|	втТаблицаРасшифровка.Услуга КАК Услуга,
	|	втТаблицаРасшифровка.ВидУслуги КАК ВидУслуги,
	|	втТаблицаРасшифровка.ВидУслугиПредставление КАК ВидУслугиПредставление,
	|	втТаблицаРасшифровка.МесяцНачисления КАК МесяцНачисления,
	|	втТаблицаРасшифровка.СуммироватьКоличество КАК СуммироватьКоличество,
	|	втТаблицаРасшифровка.СуммироватьТариф КАК СуммироватьТариф,
	|	втТаблицаРасшифровка.ВидСтавкиНДС КАК ВидСтавкиНДС,
	|	втТаблицаРасшифровка.ПереплатаПоНачислениям КАК Сумма,
	|	ЛОЖЬ КАК ЭтоПени,
	|	ИСТИНА КАК ЭтоАванс,
	|	втТаблицаРасшифровка.ПризнакПредметаРасчета КАК ПризнакПредметаРасчета,
	|	ЗНАЧЕНИЕ(Перечисление.ПризнакиСпособаРасчета.Аванс) КАК ПризнакСпособаРасчета,
	|	втТаблицаРасшифровка.ЭтоДобровольноеСтрахование КАК ЭтоДобровольноеСтрахование
	|ПОМЕСТИТЬ втДанныеПоВидамОплатБезТарифа
	|ИЗ
	|	втТаблицаРасшифровка КАК втТаблицаРасшифровка
	|ГДЕ
	|	втТаблицаРасшифровка.ПереплатаПоНачислениям > 0
	|	И НЕ втТаблицаРасшифровка.ЭтоДобровольноеСтрахование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втТаблицаРасшифровка.Документ,
	|	втТаблицаРасшифровка.ЛицевойСчет,
	|	втТаблицаРасшифровка.Услуга,
	|	втТаблицаРасшифровка.ВидУслуги,
	|	втТаблицаРасшифровка.ВидУслугиПредставление,
	|	втТаблицаРасшифровка.МесяцНачисления,
	|	втТаблицаРасшифровка.СуммироватьКоличество,
	|	втТаблицаРасшифровка.СуммироватьТариф,
	|	втТаблицаРасшифровка.ВидСтавкиНДС,
	|	втТаблицаРасшифровка.Сумма,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	втТаблицаРасшифровка.ПризнакПредметаРасчета,
	|	&ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО,
	|	втТаблицаРасшифровка.ЭтоДобровольноеСтрахование
	|ИЗ
	|	втТаблицаРасшифровка КАК втТаблицаРасшифровка
	|ГДЕ
	|	втТаблицаРасшифровка.Сумма > 0
	|	И НЕ втТаблицаРасшифровка.ЭтоДобровольноеСтрахование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втТаблицаРасшифровка.Документ,
	|	втТаблицаРасшифровка.ЛицевойСчет,
	|	втТаблицаРасшифровка.Услуга,
	|	втТаблицаРасшифровка.ВидУслуги,
	|	втТаблицаРасшифровка.ВидУслугиПредставление,
	|	втТаблицаРасшифровка.МесяцНачисления,
	|	втТаблицаРасшифровка.СуммироватьКоличество,
	|	втТаблицаРасшифровка.СуммироватьТариф,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(врОтражатьПениПоСтавкеБезНДС.ОтражатьПениПоСтавкеБезНДС, ИСТИНА) = ИСТИНА
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
	|		ИНАЧЕ втТаблицаРасшифровка.ВидСтавкиНДС
	|	КОНЕЦ,
	|	втТаблицаРасшифровка.Пени,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	втТаблицаРасшифровка.ПризнакПредметаРасчета,
	|	&ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО,
	|	втТаблицаРасшифровка.ЭтоДобровольноеСтрахование
	|ИЗ
	|	втТаблицаРасшифровка КАК втТаблицаРасшифровка
	|		ЛЕВОЕ СОЕДИНЕНИЕ врОтражатьПениПоСтавкеБезНДС КАК врОтражатьПениПоСтавкеБезНДС
	|		ПО втТаблицаРасшифровка.Организация = врОтражатьПениПоСтавкеБезНДС.Организация
	|ГДЕ
	|	втТаблицаРасшифровка.Пени > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втТаблицаРасшифровка.Документ,
	|	втТаблицаРасшифровка.ЛицевойСчет,
	|	втТаблицаРасшифровка.Услуга,
	|	втТаблицаРасшифровка.ВидУслуги,
	|	втТаблицаРасшифровка.ВидУслугиПредставление,
	|	втТаблицаРасшифровка.МесяцНачисления,
	|	втТаблицаРасшифровка.СуммироватьКоличество,
	|	втТаблицаРасшифровка.СуммироватьТариф,
	|	втТаблицаРасшифровка.ВидСтавкиНДС,
	|	ВЫБОР
	|		КОГДА втТаблицаРасшифровка.ПереплатаПоНачислениям > 0
	|			ТОГДА втТаблицаРасшифровка.ПереплатаПоНачислениям
	|		ИНАЧЕ втТаблицаРасшифровка.Сумма
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.ПлатежВыплата),
	|	ЗНАЧЕНИЕ(Перечисление.ПризнакиСпособаРасчета.ПредоплатаПолная),
	|	втТаблицаРасшифровка.ЭтоДобровольноеСтрахование
	|ИЗ
	|	втТаблицаРасшифровка КАК втТаблицаРасшифровка
	|ГДЕ
	|	(втТаблицаРасшифровка.ПереплатаПоНачислениям > 0
	|			ИЛИ втТаблицаРасшифровка.Сумма > 0)
	|	И втТаблицаРасшифровка.ЭтоДобровольноеСтрахование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втТаблицаРасшифровка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ врОтражатьПениПоСтавкеБезНДС";

	// Если чек печатается с расшифровкой, то получим:
	//  1. Суммы в разрезе услуг и ставок НДС;
	//  2. Информацию об агентских услугах (услуги, который оказываются сторонней организацией, а не самой УК).
	//     Агентские услуги в чеке выводятся по особенному: дополнительно выводятся реквизиты поставщика услуги.
	//  3. Если ведется учет по добровольному страхованию, информацию об услугах добровольного страхования.
	//     Услуги добровольного страхования в чеке выводятся по особенному: дополнительно выводятся реквизиты поставщика услуги.
	//     Услуга по добровольному страхованию не считается агентской услугой,
	//     но по ней собирается информация похожим образом:
	//      - Если нашли поставщика услуги, используем его реквизиты
	//      - Иначе используем реквизиты организации (УК).
	// Если без расшифровки, то получим суммы только в разрезе ставок НДС.

	Если СтруктураПараметров.ПечататьЧекиСРасшифровкойПоУслугам Тогда

		Запрос.Текст = Запрос.Текст + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";

		Если СтруктураПараметров.РассчитыватьКоличествоИЦенуВПлатежах Тогда
			Запрос.Текст = Запрос.Текст + "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	втДанныеПоВидамОплатБезТарифа.Документ КАК Документ,
			|	КВП_РегистрацияОплаты.Дата КАК Дата,
			|	втДанныеПоВидамОплатБезТарифа.ЛицевойСчет КАК ЛицевойСчет,
			|	втДанныеПоВидамОплатБезТарифа.Услуга КАК Услуга,
			|	втДанныеПоВидамОплатБезТарифа.МесяцНачисления КАК МесяцНачисления,
			|	втДанныеПоВидамОплатБезТарифа.ЭтоПени КАК ЭтоПени
			|ПОМЕСТИТЬ втТаблицаРасшифровкаДляТарифаИОбъема
			|ИЗ
			|	втДанныеПоВидамОплатБезТарифа КАК втДанныеПоВидамОплатБезТарифа
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КВП_РегистрацияОплаты КАК КВП_РегистрацияОплаты
			|		ПО втДанныеПоВидамОплатБезТарифа.Документ = КВП_РегистрацияОплаты.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|" + УПЖКХ_ОбщегоНазначенияСервер.ИнформацияОТарифахПоПлатежамЧека_ТекстЗапроса() + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ втТаблицаРасшифровкаДляТарифаИОбъема
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	втДанныеПоВидамОплатБезТарифа.Документ КАК Документ,
			|	втДанныеПоВидамОплатБезТарифа.ЛицевойСчет КАК ЛицевойСчет,
			|	втДанныеПоВидамОплатБезТарифа.Услуга КАК Услуга,
			|	втДанныеПоВидамОплатБезТарифа.ВидУслуги КАК ВидУслуги,
			|	втДанныеПоВидамОплатБезТарифа.ВидУслугиПредставление КАК ВидУслугиПредставление,
			|	втДанныеПоВидамОплатБезТарифа.СуммироватьКоличество КАК СуммироватьКоличество,
			|	втДанныеПоВидамОплатБезТарифа.СуммироватьТариф КАК СуммироватьТариф,
			|	втДанныеПоВидамОплатБезТарифа.ВидСтавкиНДС КАК ВидСтавкиНДС,
			|	втДанныеПоВидамОплатБезТарифа.Сумма КАК Сумма,
			|	ЕСТЬNULL(втТариф.Тариф, 0) КАК Тариф,
			|	втДанныеПоВидамОплатБезТарифа.ЭтоПени КАК ЭтоПени,
			|	втДанныеПоВидамОплатБезТарифа.ЭтоАванс КАК ЭтоАванс,
			|	втДанныеПоВидамОплатБезТарифа.ПризнакПредметаРасчета КАК ПризнакПредметаРасчета,
			|	втДанныеПоВидамОплатБезТарифа.ПризнакСпособаРасчета КАК ПризнакСпособаРасчета,
			|	втДанныеПоВидамОплатБезТарифа.МесяцНачисления КАК МесяцНачисления,
			|	втДанныеПоВидамОплатБезТарифа.ЭтоДобровольноеСтрахование КАК ЭтоДобровольноеСтрахование
			|ПОМЕСТИТЬ втДанныеПоВидамОплат
			|ИЗ
			|	втДанныеПоВидамОплатБезТарифа КАК втДанныеПоВидамОплатБезТарифа
			|		ЛЕВОЕ СОЕДИНЕНИЕ втТариф КАК втТариф
			|		ПО втДанныеПоВидамОплатБезТарифа.Документ = втТариф.Документ
			|			И втДанныеПоВидамОплатБезТарифа.ЛицевойСчет = втТариф.ЛицевойСчет
			|			И втДанныеПоВидамОплатБезТарифа.Услуга = втТариф.Услуга
			|			И втДанныеПоВидамОплатБезТарифа.МесяцНачисления = втТариф.МесяцНачисления
			|;";
		Иначе
			Запрос.Текст = Запрос.Текст + "
			|ВЫБРАТЬ
			|	втДанныеПоВидамОплатБезТарифа.Документ КАК Документ,
			|	втДанныеПоВидамОплатБезТарифа.ЛицевойСчет КАК ЛицевойСчет,
			|	втДанныеПоВидамОплатБезТарифа.Услуга КАК Услуга,
			|	втДанныеПоВидамОплатБезТарифа.ВидУслуги КАК ВидУслуги,
			|	втДанныеПоВидамОплатБезТарифа.ВидУслугиПредставление КАК ВидУслугиПредставление,
			|	втДанныеПоВидамОплатБезТарифа.СуммироватьКоличество КАК СуммироватьКоличество,
			|	втДанныеПоВидамОплатБезТарифа.СуммироватьТариф КАК СуммироватьТариф,
			|	втДанныеПоВидамОплатБезТарифа.ВидСтавкиНДС КАК ВидСтавкиНДС,
			|	втДанныеПоВидамОплатБезТарифа.Сумма КАК Сумма,
			|	втДанныеПоВидамОплатБезТарифа.Сумма КАК Тариф,
			|	втДанныеПоВидамОплатБезТарифа.ЭтоПени КАК ЭтоПени,
			|	втДанныеПоВидамОплатБезТарифа.ЭтоАванс КАК ЭтоАванс,
			|	втДанныеПоВидамОплатБезТарифа.ПризнакПредметаРасчета КАК ПризнакПредметаРасчета,
			|	втДанныеПоВидамОплатБезТарифа.ПризнакСпособаРасчета КАК ПризнакСпособаРасчета,
			|	втДанныеПоВидамОплатБезТарифа.МесяцНачисления КАК МесяцНачисления,
			|	втДанныеПоВидамОплатБезТарифа.ЭтоДобровольноеСтрахование КАК ЭтоДобровольноеСтрахование
			|ПОМЕСТИТЬ втДанныеПоВидамОплат
			|ИЗ
			|	втДанныеПоВидамОплатБезТарифа КАК втДанныеПоВидамОплатБезТарифа
			|;";
		КонецЕсли;

		Запрос.Текст = Запрос.Текст + "
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ втДанныеПоВидамОплатБезТарифа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДанныеПоВидамОплат.Документ КАК Документ,
		|	втДанныеПоВидамОплат.ЛицевойСчет КАК ЛицевойСчет,
		|	втДанныеПоВидамОплат.ВидУслуги КАК ВидУслуги,
		|	втДанныеПоВидамОплат.ВидУслугиПредставление КАК ВидУслугиПредставление,
		|	втДанныеПоВидамОплат.ВидСтавкиНДС КАК ВидСтавкиНДС,
		|	СУММА(втДанныеПоВидамОплат.Сумма) КАК Сумма,
		|	МАКСИМУМ(втДанныеПоВидамОплат.Тариф) КАК Тариф,
		|	втДанныеПоВидамОплат.ЭтоПени КАК ЭтоПени,
		|	втДанныеПоВидамОплат.ЭтоАванс КАК ЭтоАванс,
		|	втДанныеПоВидамОплат.ПризнакПредметаРасчета КАК ПризнакПредметаРасчета,
		|	втДанныеПоВидамОплат.ПризнакСпособаРасчета КАК ПризнакСпособаРасчета,
		|	втДанныеПоВидамОплат.МесяцНачисления КАК МесяцНачисления,
		|	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование КАК ЭтоДобровольноеСтрахование
		|ПОМЕСТИТЬ врРасшифровкаОплатДляЧеков
		|ИЗ
		|	втДанныеПоВидамОплат КАК втДанныеПоВидамОплат
		|ГДЕ
		|	втДанныеПоВидамОплат.СуммироватьКоличество
		|
		|СГРУППИРОВАТЬ ПО
		|	втДанныеПоВидамОплат.Документ,
		|	втДанныеПоВидамОплат.ЛицевойСчет,
		|	втДанныеПоВидамОплат.ВидУслуги,
		|	втДанныеПоВидамОплат.ВидУслугиПредставление,
		|	втДанныеПоВидамОплат.ВидСтавкиНДС,
		|	втДанныеПоВидамОплат.ЭтоПени,
		|	втДанныеПоВидамОплат.ЭтоАванс,
		|	втДанныеПоВидамОплат.ПризнакПредметаРасчета,
		|	втДанныеПоВидамОплат.ПризнакСпособаРасчета,
		|	втДанныеПоВидамОплат.МесяцНачисления,
		|	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втДанныеПоВидамОплат.Документ,
		|	втДанныеПоВидамОплат.ЛицевойСчет,
		|	втДанныеПоВидамОплат.ВидУслуги,
		|	втДанныеПоВидамОплат.ВидУслугиПредставление,
		|	втДанныеПоВидамОплат.ВидСтавкиНДС,
		|	СУММА(втДанныеПоВидамОплат.Сумма),
		|	СУММА(втДанныеПоВидамОплат.Тариф),
		|	втДанныеПоВидамОплат.ЭтоПени,
		|	втДанныеПоВидамОплат.ЭтоАванс,
		|	втДанныеПоВидамОплат.ПризнакПредметаРасчета,
		|	втДанныеПоВидамОплат.ПризнакСпособаРасчета,
		|	втДанныеПоВидамОплат.МесяцНачисления,
		|	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование
		|ИЗ
		|	втДанныеПоВидамОплат КАК втДанныеПоВидамОплат
		|ГДЕ
		|	втДанныеПоВидамОплат.СуммироватьТариф
		|
		|СГРУППИРОВАТЬ ПО
		|	втДанныеПоВидамОплат.Документ,
		|	втДанныеПоВидамОплат.ЛицевойСчет,
		|	втДанныеПоВидамОплат.ВидУслуги,
		|	втДанныеПоВидамОплат.ВидСтавкиНДС,
		|	втДанныеПоВидамОплат.ЭтоПени,
		|	втДанныеПоВидамОплат.ЭтоАванс,
		|	втДанныеПоВидамОплат.ПризнакПредметаРасчета,
		|	втДанныеПоВидамОплат.ПризнакСпособаРасчета,
		|	втДанныеПоВидамОплат.ВидУслугиПредставление,
		|	втДанныеПоВидамОплат.МесяцНачисления,
		|	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втДанныеПоВидамОплат.Документ,
		|	втДанныеПоВидамОплат.ЛицевойСчет,
		|	втДанныеПоВидамОплат.ВидУслуги,
		|	втДанныеПоВидамОплат.ВидУслугиПредставление,
		|	втДанныеПоВидамОплат.ВидСтавкиНДС,
		|	СУММА(втДанныеПоВидамОплат.Сумма),
		|	МАКСИМУМ(втДанныеПоВидамОплат.Тариф),
		|	втДанныеПоВидамОплат.ЭтоПени,
		|	втДанныеПоВидамОплат.ЭтоАванс,
		|	втДанныеПоВидамОплат.ПризнакПредметаРасчета,
		|	втДанныеПоВидамОплат.ПризнакСпособаРасчета,
		|	втДанныеПоВидамОплат.МесяцНачисления,
		|	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование
		|ИЗ
		|	втДанныеПоВидамОплат КАК втДанныеПоВидамОплат
		|ГДЕ
		|	НЕ втДанныеПоВидамОплат.СуммироватьКоличество
		|	И НЕ втДанныеПоВидамОплат.СуммироватьТариф
		|
		|СГРУППИРОВАТЬ ПО
		|	втДанныеПоВидамОплат.Документ,
		|	втДанныеПоВидамОплат.ЛицевойСчет,
		|	втДанныеПоВидамОплат.Услуга,
		|	втДанныеПоВидамОплат.ВидУслуги,
		|	втДанныеПоВидамОплат.ВидСтавкиНДС,
		|	втДанныеПоВидамОплат.ЭтоПени,
		|	втДанныеПоВидамОплат.ЭтоАванс,
		|	втДанныеПоВидамОплат.ПризнакПредметаРасчета,
		|	втДанныеПоВидамОплат.ПризнакСпособаРасчета,
		|	втДанныеПоВидамОплат.ВидУслугиПредставление,
		|	втДанныеПоВидамОплат.МесяцНачисления,
		|	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование";

		Если СтруктураПараметров.УказыватьВЧекеПризнакАгентаВПлатежах Тогда

			Запрос.Текст = Запрос.Текст + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|" +
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	втДанныеПоВидамОплат.Документ КАК Документ,
			|	КВП_РегистрацияОплаты.Дата КАК Дата,
			|	КВП_РегистрацияОплаты.Организация КАК Организация,
			|	втДанныеПоВидамОплат.ЛицевойСчет КАК ЛицевойСчет,
			|	КВП_ЛицевыеСчета.Адрес.Подъезд КАК Подъезд,
			|	КВП_ЛицевыеСчета.Адрес.Владелец КАК Здание,
			|	втДанныеПоВидамОплат.ВидУслуги КАК ВидУслуги,
			|	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование КАК ЭтоДобровольноеСтрахование
			|ПОМЕСТИТЬ врИнформацияОбУслугах
			|ИЗ
			|	втДанныеПоВидамОплат КАК втДанныеПоВидамОплат
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КВП_РегистрацияОплаты КАК КВП_РегистрацияОплаты
			|		ПО втДанныеПоВидамОплат.Документ = КВП_РегистрацияОплаты.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КВП_ЛицевыеСчета КАК КВП_ЛицевыеСчета
			|		ПО втДанныеПоВидамОплат.ЛицевойСчет = КВП_ЛицевыеСчета.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ втДанныеПоВидамОплат" + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|" + УПЖКХ_ОбщегоНазначенияСервер.ИнформацияОбАгентскихУслугахДляЧека_ТекстЗапроса() + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|" +
			"УНИЧТОЖИТЬ врИнформацияОбУслугах
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	врРасшифровкаОплатДляЧеков.Документ КАК Документ,
			|	врРасшифровкаОплатДляЧеков.ЛицевойСчет КАК ЛицевойСчет,
			|	врРасшифровкаОплатДляЧеков.ВидУслугиПредставление КАК ВидУслугиПредставление,
			|	врРасшифровкаОплатДляЧеков.ВидСтавкиНДС КАК ВидСтавкиНДС,
			|	врРасшифровкаОплатДляЧеков.Сумма КАК Сумма,
			|	врРасшифровкаОплатДляЧеков.ЭтоПени КАК ЭтоПени,
			|	врРасшифровкаОплатДляЧеков.ЭтоАванс КАК ЭтоАванс,
			|	врРасшифровкаОплатДляЧеков.ПризнакПредметаРасчета КАК ПризнакПредметаРасчета,
			|	врРасшифровкаОплатДляЧеков.ПризнакСпособаРасчета КАК ПризнакСпособаРасчета,
			|	врРасшифровкаОплатДляЧеков.Тариф КАК Тариф,
			|	врРасшифровкаОплатДляЧеков.ЭтоДобровольноеСтрахование КАК ЭтоДобровольноеСтрахование,
			|	ВЫБОР
			|		КОГДА врПоставщикиАгентскихУслуг.ЭтоАгентскаяУслуга
			|				ИЛИ врРасшифровкаОплатДляЧеков.ЭтоДобровольноеСтрахование
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК УказыватьВЧекеПризнакАгентаВПлатежах,
			|	ПРЕДСТАВЛЕНИЕ(врПоставщикиАгентскихУслуг.ПоставщикУслуги) КАК ПоставщикУслугиПредставление,
			|	врПоставщикиАгентскихУслуг.ИННПоставщикаУслуги КАК ИННПоставщикаУслуги,
			|	врРасшифровкаОплатДляЧеков.МесяцНачисления КАК МесяцНачисления,
			|	врПоставщикиАгентскихУслуг.ТелефонПоставщикаУслуги КАК ТелефонПоставщикаУслуги
			|ИЗ
			|	врРасшифровкаОплатДляЧеков КАК врРасшифровкаОплатДляЧеков
			|		ЛЕВОЕ СОЕДИНЕНИЕ врПоставщикиАгентскихУслуг КАК врПоставщикиАгентскихУслуг
			|		ПО врРасшифровкаОплатДляЧеков.Документ = врПоставщикиАгентскихУслуг.Документ
			|			И врРасшифровкаОплатДляЧеков.ЛицевойСчет = врПоставщикиАгентскихУслуг.ЛицевойСчет
			|			И врРасшифровкаОплатДляЧеков.ВидУслуги = врПоставщикиАгентскихУслуг.ВидУслуги";

		Иначе

			Запрос.Текст = Запрос.Текст + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|" +
			"ВЫБРАТЬ
			|	врРасшифровкаОплатДляЧеков.Документ КАК Документ,
			|	врРасшифровкаОплатДляЧеков.ЛицевойСчет КАК ЛицевойСчет,
			|	врРасшифровкаОплатДляЧеков.ВидУслугиПредставление КАК ВидУслугиПредставление,
			|	врРасшифровкаОплатДляЧеков.ВидСтавкиНДС КАК ВидСтавкиНДС,
			|	врРасшифровкаОплатДляЧеков.Сумма КАК Сумма,
			|	врРасшифровкаОплатДляЧеков.ЭтоПени КАК ЭтоПени,
			|	врРасшифровкаОплатДляЧеков.ЭтоАванс КАК ЭтоАванс,
			|	врРасшифровкаОплатДляЧеков.ПризнакПредметаРасчета КАК ПризнакПредметаРасчета,
			|	врРасшифровкаОплатДляЧеков.ПризнакСпособаРасчета КАК ПризнакСпособаРасчета,
			|	врРасшифровкаОплатДляЧеков.Тариф КАК Тариф,
			|	врРасшифровкаОплатДляЧеков.ЭтоДобровольноеСтрахование КАК ЭтоДобровольноеСтрахование,
			|	врРасшифровкаОплатДляЧеков.МесяцНачисления,
			|	ЛОЖЬ КАК УказыватьВЧекеПризнакАгентаВПлатежах
			|ИЗ
			|	врРасшифровкаОплатДляЧеков КАК врРасшифровкаОплатДляЧеков";

		КонецЕсли;

	Иначе

		Запрос.Текст = Запрос.Текст + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|" +
		"ВЫБРАТЬ
		|	втДанныеПоВидамОплатБезТарифа.Документ КАК Документ,
		|	втДанныеПоВидамОплатБезТарифа.ЛицевойСчет КАК ЛицевойСчет,
		|	втДанныеПоВидамОплатБезТарифа.ВидСтавкиНДС КАК ВидСтавкиНДС,
		|	СУММА(втДанныеПоВидамОплатБезТарифа.Сумма) КАК Сумма,
		|	втДанныеПоВидамОплатБезТарифа.ЭтоПени КАК ЭтоПени,
		|	втДанныеПоВидамОплатБезТарифа.ЭтоАванс КАК ЭтоАванс,
		|	втДанныеПоВидамОплатБезТарифа.ПризнакПредметаРасчета КАК ПризнакПредметаРасчета,
		|	втДанныеПоВидамОплатБезТарифа.ПризнакСпособаРасчета КАК ПризнакСпособаРасчета,
		|	втДанныеПоВидамОплатБезТарифа.МесяцНачисления КАК МесяцНачисления,
		|	втДанныеПоВидамОплатБезТарифа.ЭтоДобровольноеСтрахование КАК ЭтоДобровольноеСтрахование
		|ИЗ
		|	втДанныеПоВидамОплатБезТарифа КАК втДанныеПоВидамОплатБезТарифа
		|
		|СГРУППИРОВАТЬ ПО
		|	втДанныеПоВидамОплатБезТарифа.Документ,
		|	втДанныеПоВидамОплатБезТарифа.ЛицевойСчет,
		|	втДанныеПоВидамОплатБезТарифа.ВидСтавкиНДС,
		|	втДанныеПоВидамОплатБезТарифа.ЭтоПени,
		|	втДанныеПоВидамОплатБезТарифа.ЭтоАванс,
		|	втДанныеПоВидамОплатБезТарифа.ПризнакПредметаРасчета,
		|	втДанныеПоВидамОплатБезТарифа.ПризнакСпособаРасчета,
		|	втДанныеПоВидамОплатБезТарифа.МесяцНачисления,
		|	втДанныеПоВидамОплатБезТарифа.ЭтоДобровольноеСтрахование";

	КонецЕсли;

	ТекущаяДата = ТекущаяДата();
	СтавкаНДСПеречисление = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеОсновнойСтавкиНДСПоУмолчанию(ТекущаяДата);
	НастройкаДобровольногоСтрахования = УПЖКХ_ПараметрыУчетаСервер.ПолучитьНастройкиУчетаНачисленийПоДобровольномуСтрахованию();

	Запрос.УстановитьПараметр("ТекущаяДата",
																						ТекущаяДата);
	Запрос.УстановитьПараметр("ТаблицаОбъектов",
																						ТаблицаОплатСДопДанными);
	Запрос.УстановитьПараметр("УслугаДобровольногоСтрахования",
																						НастройкаДобровольногоСтрахования.УслугаДобровольногоСтрахования);
	Запрос.УстановитьПараметр("ВидСтавкиНДСИзПерсональныхНастроек",
																						Перечисления.ВидыСтавокНДС.ВидСтавки(СтавкаНДСПеречисление));
	Запрос.УстановитьПараметр("ВестиУчетНачисленийПоДобровольномуСтрахованию",
																						НастройкаДобровольногоСтрахования.ВестиУчетНачисленийПоДобровольномуСтрахованию);
	Запрос.УстановитьПараметр("ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО",
																						СтруктураПараметров.ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО);
    #Вставка // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа ++

    Если СтруктураПараметров.ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента = Истина Тогда
        ТаблицаОплатСДопДаннымиИЛицевымиСчетами = ТаблицаОплатСДопДанными.Скопировать();
        ТаблицаОплатСДопДаннымиИЛицевымиСчетами.Очистить();

        // Заполнение л/с временной таблицы оплат (используется только в запросе)
        Для Каждого ТекущаяСтрокаОплат Из ТаблицаОплатСДопДанными Цикл
            // Контроль типа документа оплаты
            Если ТипЗнч(ТекущаяСтрокаОплат.Документ) <> Тип("ДокументСсылка.КВП_РегистрацияОплаты") Тогда
                ВызватьИсключение(СтрШаблон("Тип документа ""%1"" не поддерживается для формирования чеков по контрагентам.",
                    ТипЗнч(ТекущаяСтрокаОплат.Документ)));
            КонецЕсли;

            ДанныеДокументаРаспределения =
                ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущаяСтрокаОплат.Документ, Новый Структура("ЛицевыеСчета"));
            ДанныеДокументаРаспределения.ЛицевыеСчета =
                ОбщегоНазначения.ВыгрузитьКолонку(ДанныеДокументаРаспределения.ЛицевыеСчета.Выгрузить(), "Объект", Истина);
            Для Каждого ТекущийЛицевойСчет Из ДанныеДокументаРаспределения.ЛицевыеСчета Цикл
                НоваяСтрокаОплаты = ТаблицаОплатСДопДаннымиИЛицевымиСчетами.Добавить();
                ЗаполнитьЗначенияСвойств(НоваяСтрокаОплаты, ТекущаяСтрокаОплат);
                НоваяСтрокаОплаты.ЛицевойСчет = ТекущийЛицевойСчет;
            КонецЦикла;
        КонецЦикла;

        Запрос.УстановитьПараметр("ТаблицаОбъектов", ТаблицаОплатСДопДаннымиИЛицевымиСчетами);
    КонецЕсли;

    #КонецВставки // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа --

	РасшифровкаОплатДляЧеков = Запрос.Выполнить().Выгрузить();

	// Определяем, что версия ФФД больше или равна 1.0.5.
	// Пример определения признака см. в типовом ОМ ПечатьФискальныхДокументов.ПараметрыОперацииФискализацииЧека.
	ВерсияФормата = СтруктураПараметров.ВерсииФорматовФД.ВерсияФД;

	ЭтоВерсия105 = ЗначениеЗаполнено(ВерсияФормата)
					И НЕ (УПЖКХ_ТиповыеМетодыКлиентСервер.СравнитьВерсии("1.0.5.0", ВерсияФормата) > 0);

	РасшифровкаОплатДляЧеков.Колонки.Добавить("СтавкаНДС");
    #Вставка // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа ++

    КэшКонтрагентыДокументов = Новый Соответствие;
    Если СтруктураПараметров.ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента = Истина Тогда
        ГП_РегистрацияОплатыСлужебный.ДополнитьТаблицуКолонкойКонтрагентДокументаОплаты(РасшифровкаОплатДляЧеков);
    КонецЕсли;

    #КонецВставки // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа --

	Для Каждого ТекущаяСтрока Из РасшифровкаОплатДляЧеков Цикл

		Если ТекущаяСтрока.ЭтоПени И СтруктураПараметров.ПечататьЧекиСРасшифровкойПоУслугам Тогда
			ТекущаяСтрока.ВидУслугиПредставление = "" + ТекущаяСтрока.ВидУслугиПредставление + " (пени)";
		КонецЕсли;

		// Расчетные ставки НДС применяются только на версиях ФФД 1.0.5 и выше,
		// для платежей по авансу за услуги, не относящимся к услугам добровольного страхования.
		ПрименяютсяРасчетныеСтавкиНДС = ЭтоВерсия105
											И ТекущаяСтрока.ЭтоАванс
											И Не ТекущаяСтрока.ЭтоДобровольноеСтрахование;

		СтавкаНДССУчетомУСН = УПЖКХ_НалоговыйУчетУСН.СтавкаНДС(ТекущаяСтрока.МесяцНачисления,
																ТекущаяСтрока.Документ.Организация,
																ТекущаяСтрока.ВидСтавкиНДС);
		ТекущаяСтрока.СтавкаНДС = УПЖКХ_ОбщегоНазначенияСервер.ОпределитьСтавкуНДСВСтрокеОплатЧека(ТекущаяСтрока.ВидСтавкиНДС,
																									ТекущаяДата,
																									ПрименяютсяРасчетныеСтавкиНДС,
																									СтавкаНДССУчетомУСН);
        #Вставка // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа ++

        Если СтруктураПараметров.ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента = Истина Тогда
            Если ТипЗнч(ТекущаяСтрока.Документ) = Тип("ДокументСсылка.КВП_РегистрацияОплаты") Тогда
                Если КэшКонтрагентыДокументов.Получить(ТекущаяСтрока.Документ) = Неопределено Тогда
                    ТекущийКонтрагентДокументаОплаты = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущаяСтрока.Документ, "Контрагент");
                    КэшКонтрагентыДокументов.Вставить(ТекущаяСтрока.Документ, ТекущийКонтрагентДокументаОплаты);
                КонецЕсли;

                ТекущийКонтрагентДокументаОплаты = КэшКонтрагентыДокументов.Получить(ТекущаяСтрока.Документ);
                ТекущаяСтрока.ГП_КонтрагентДокументаОплаты = ТекущийКонтрагентДокументаОплаты;
            КонецЕсли;
        КонецЕсли;

        #КонецВставки // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа --

	КонецЦикла;

	// Колонка не используется в дальнейших операциях печати чека.
	РасшифровкаОплатДляЧеков.Колонки.Удалить("ВидСтавкиНДС");

	// Если выполняется сбор данных без разреза по услугам, то после
	// определения ставки НДС таблицу нужно повторно группировать,
	// чтобы исключить разрез по признакам ЭтоАванс и ЭтоДобровольноеСтрахование.
	Если Не СтруктураПараметров.ПечататьЧекиСРасшифровкойПоУслугам Тогда
		КолонкиГруппировки = "Документ, ЛицевойСчет, ЭтоПени,"
								+ " ПризнакПредметаРасчета, ПризнакСпособаРасчета, СтавкаНДС";
        #Вставка // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа ++

        Если СтруктураПараметров.ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента = Истина Тогда
            КолонкиГруппировки = КолонкиГруппировки + "ГП_КонтрагентДокументаОплаты";
        КонецЕсли;

        #КонецВставки // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа --
		РасшифровкаОплатДляЧеков.Свернуть(КолонкиГруппировки, "Сумма");
	КонецЕсли;
    #Вставка // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа ++

    Если СтруктураПараметров.ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента = Истина Тогда
        ГП_РегистрацияОплатыСлужебный.СвернутьТаблицуРасшифровкаОплатДляЧековПоТарифамУслуг(
            РасшифровкаОплатДляЧеков, СтруктураПараметров);
    КонецЕсли;

    #КонецВставки // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа --

	Возврат РасшифровкаОплатДляЧеков;

КонецФункции

&ИзменениеИКонтроль("СобратьДанныеЧеков")
Функция ГП_СобратьДанныеЧеков(ТаблицаОплат, ПараметрыПодключения)

    МассивЧеков = Новый Массив;

    ТаблицаОплатСДопДанными = ПолучитьДопДанныеПоОплатам(ТаблицаОплат);

    ИдентификаторУстройства = ПараметрыПодключения.ИдентификаторУстройства;

    ПараметрыПробитияЧеков = УПЖКХ_МеханизмыПечатиЧеков.ПараметрыПробитияЧеков();

    СтруктураПараметров = Новый Структура;
    СтруктураПараметров.Вставить("ШиринаСтрокиЧека",                                      ПараметрыПодключения.ШиринаСтроки);
    СтруктураПараметров.Вставить("ВерсииФорматовФД",                                      ПараметрыПодключения.ВерсииФорматовФД);
    СтруктураПараметров.Вставить("ПечататьЧекиИзРегистрацииОплаты",                       Константы.УПЖКХ_ПечататьЧекиИзРегистрацииОплаты.Получить());
    СтруктураПараметров.Вставить("ПечататьЧекиСРасшифровкойПоУслугам",                    Константы.УПЖКХ_ПечататьЧекиСРасшифровкойПоУслугам.Получить());
    СтруктураПараметров.Вставить("ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО", ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО());
    СтруктураПараметров.Вставить("УказыватьВЧекеПризнакАгентаВПлатежах",                  ПараметрыПробитияЧеков.УказыватьВЧекеПризнакАгентаВПлатежах);
    СтруктураПараметров.Вставить("РассчитыватьКоличествоИЦенуВПлатежах",                  ПараметрыПробитияЧеков.РассчитыватьКоличествоИЦенуВПлатежах);
    #Вставка // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа ++

    СтруктураПараметров.Вставить("ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента",
        ГП_ИспользуетсяФормированиеЧековПоКонтрагентуДокумента(Неопределено));

    // Проверка возможности применения механизма формирования чеков по контрагенту
    Если СтруктураПараметров.ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента Тогда
        МассивДокументовРасшифровки = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаОплатСДопДанными, "Документ", Истина);
        Для каждого ТекущийЭлементЦикла Из МассивДокументовРасшифровки Цикл
            Если ТипЗнч(ТекущийЭлементЦикла) <> Тип("ДокументСсылка.КВП_РегистрацияОплаты") Тогда
                ОбщегоНазначения.СообщитьПользователю(
                    "ВНИМАНИЕ! Формирование чека по контрагенту документа возможен только для документов ""Регистрация оплаты"".
                    |Формирование чека будет выполнено без использования механизма расшифровки по контрагенту документа
                    |(Значение константы ""ФормироватьЧекиЖКХПоКонтрагентуДокумента"" игнорируется)");

                СтруктураПараметров.ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента = Ложь;
                Прервать;
            КонецЕсли;
        КонецЦикла;
    КонецЕсли;

    #КонецВставки // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа --

    // В таблице расшифровок оплат использована свёртка по видам услуг, размерам НДС.
    РасшифровкаОплатДляЧеков = ПолучитьРасшифровкуОплатДляЧеков(ТаблицаОплатСДопДанными, СтруктураПараметров);

    Отбор = Новый Структура("Документ, ЛицевойСчет");
    #Вставка // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа ++

    Если СтруктураПараметров.ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента = Истина Тогда
        Отбор = Новый Структура("Документ, ГП_КонтрагентДокументаОплаты");
    КонецЕсли;

    #КонецВставки // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа --

    Для Каждого ТекущаяОплата Из ТаблицаОплатСДопДанными Цикл

        ЗаполнитьЗначенияСвойств(Отбор, ТекущаяОплата);

        РасшифровкаТекущейОплаты = РасшифровкаОплатДляЧеков.Скопировать(Отбор);

        Если НЕ РасшифровкаТекущейОплаты.Количество() = 0 Тогда

            ДобавитьСведенияОбОплатеВЧек(МассивЧеков, ТекущаяОплата, РасшифровкаТекущейОплаты, СтруктураПараметров);

        КонецЕсли;

    КонецЦикла;

    Возврат МассивЧеков;

КонецФункции

&ИзменениеИКонтроль("ДобавитьСведенияОбОплатеВЧек")
Процедура ГП_ДобавитьСведенияОбОплатеВЧек(МассивЧеков, ТекущаяОплата, РасшифровкаТекущейОплаты, СтруктураПараметров)

	НомерСекции      = 2;
	ИсточникОплаты   = ТекущаяОплата.ИсточникОплаты;
	ШиринаСтрокиЧека = СтруктураПараметров.ШиринаСтрокиЧека;

	СуммаЧека = РасшифровкаТекущейОплаты.Итог("Сумма");

	ПараметрыЧека = УПЖКХ_ТиповыеМетодыКлиентСервер.ПараметрыОперацииФискализацииЧека();

	// По аналогии с типовым механизмом добавляем параметр
	// см. процедуру ПечатьФискальныхДокументов.ПараметрыОперацииФискализацииЧека()
	ПараметрыЧека.ИндивидуальныйРежимПодготовкиДанныхКПередачеВОФД = Истина;

	// ОБЩИЕ РЕКВИЗИТЫ ДЛЯ ВСЕХ ТИПОВ ОБОРУДОВАНИЯ.

	ПараметрыЧека.Организация       = ТекущаяОплата.Организация;
	ПараметрыЧека.ДокументОснование = ТекущаяОплата.Документ;

	// ТИП РАСЧЕТА, Обязательно.

	Если ТекущаяОплата.ВидОперации = Перечисления.КВП_ВидыОперацийРегистрацииОплаты.ВозвратОплатыИзКассы
	 ИЛИ ТекущаяОплата.ВидОперации = Перечисления.КВП_ВидыОперацийРегистрацииОплаты.ВозвратОплатыСРасчетногоСчета Тогда
		ПараметрыЧека.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств;
	Иначе
		ПараметрыЧека.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств;
	КонецЕсли;

	// ПАРАМЕТРЫ ДЛЯ ККТ ПО ФЗ-54.

	// Реквизиты начиная с ФФД 1.1 (Введены приказом от 9 апреля 2018 г. N ММВ-7-20/207@)
	Если НЕ ТекущаяОплата.ЭтоФизЛицо ИЛИ ЗначениеЗаполнено(ТекущаяОплата.ИННОтветственного) Тогда
		ПараметрыЧека.Получатель    = ТекущаяОплата.ОтветственныйВладелецПредставление;  // Строка,Необязательно - Получатель (покупатель)
		ПараметрыЧека.ПолучательИНН = ТекущаяОплата.ИННОтветственного;  // Строка,Необязательно - ИНН получателя (ИНН покупателя)
	КонецЕсли;

	// Два первых параметра заполняются автоматически. Можно задать программно.
	Кассир = "";
	СтандартнаяОбработка = Истина;
	МенеджерОборудованияКлиентСерверПереопределяемый.ОбработкаЗаполненияИмяКассира(Кассир, СтандартнаяОбработка);
	ПараметрыЧека.Кассир = ?(Не СтандартнаяОбработка, Кассир, НСтр("ru='Администратор'"));  // Строка,Обязательно - ФИО лица, осуществившего расчет с покупателем (клиентом), оформившего кассовый чек.

	// СИСТЕМА НАЛОГООБЛОЖЕНИЯ.
	УПЖКХ_ОбщегоНазначенияСервер.ЗаполнитьВЧекеПараметрыСистемыНалогообложения(ПараметрыЧека, ТекущаяОплата);

	// ПАРАМЕТРЫ НЕОБХОДИМЫЕ ДЛЯ ЧЕКА ЕНВД НА ПРИНТЕРЕ ЧЕКОВ.
	УПЖКХ_ОбщегоНазначенияСервер.ЗаполнитьВЧекеПараметрыОрганизации(ПараметрыЧека, ТекущаяОплата);

	ЛицевойСчет = ТекущаяОплата.ЛицевойСчет;

	ПараметрыТекущегоЛицевогоСчета = УПЖКХ_ТиповыеМетодыКлиентСервер.ПараметрыОперацииФискализацииЧека();
	ЗаполнитьЗначенияСвойств(ПараметрыТекущегоЛицевогоСчета, ПараметрыЧека, , "ТаблицаОплат, ПозицииЧека");

	// Далее будет необходимо соотнести структуры данных из массива чеков со строками таблицы оплат.
	// Делать это будем по документу и лицевому счету.
	ПараметрыТекущегоЛицевогоСчета.Вставить("ЛицевойСчет", ЛицевойСчет);
    #Вставка // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа ++

    // Механизм заполнения чека по контрагенту
    Если СтруктураПараметров.ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента Тогда
        ПараметрыТекущегоЛицевогоСчета.Вставить("ГП_КонтрагентДокументаОплаты", ТекущаяОплата.ГП_КонтрагентДокументаОплаты);
    КонецЕсли;

    #КонецВставки // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа --

	// ПОЗИЦИИ ЧЕКА ДЛЯ ФИСКАЛИЗАЦИИ.

	ПозицииЧека = Новый Массив;

	// Cтроку плательщика выводим как текст.

	ЭтоОперацииВозврата = ТекущаяОплата.ВидОперации = Перечисления.КВП_ВидыОперацийРегистрацииОплаты.ВозвратОплатыИзКассы
					  ИЛИ ТекущаяОплата.ВидОперации = Перечисления.КВП_ВидыОперацийРегистрацииОплаты.ВозвратОплатыСРасчетногоСчета;

	НаименованиеПлательщика =
		?(ЭтоОперацииВозврата, "Выдать: ", "Принято от: ")                                      // Префикс строки - вид операции возврата или прихода.
		+ УПЖКХ_ОбщегоНазначенияСервер.ПолучитьОтветственногоСобственникаЛицевогоСчета(ЛицевойСчет, ТекущаяОплата.ДатаДокумента) // Ответственный собственник л/с.
		+ " (" + УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ЛицевойСчет, "Наименование") + ")";       // Наименование л/с.
    #Вставка // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа ++

    // Механизм заполнения чека по контрагенту (заполнение НаименованиеПлательщика)
    Если СтруктураПараметров.ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента Тогда
        СтруктуруПредставленияПлательщикаЧека =
            ГП_РегистрацияОплатыСлужебный.ПолучитьСтруктуруПредставленияПлательщикаЧека(ТекущаяОплата.Документ, Истина);
        Если СтруктуруПредставленияПлательщикаЧека.Успех = Ложь Тогда
            ВызватьИсключение(СтруктуруПредставленияПлательщикаЧека.ТекстСообщения);
        КонецЕсли;

        НаименованиеПлательщика = ?(ЭтоОперацииВозврата, "Выдать: ", "Принято от: ");
        НаименованиеПлательщика = НаименованиеПлательщика + СтруктуруПредставленияПлательщикаЧека.ПредставлениеПлательщика;
    КонецЕсли;

    #КонецВставки // Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа --

	ТекстОснование = ?(ИсточникОплаты.Пустая(), "", "Основание: " + ИсточникОплаты); // Основание.

	СтрокаНаименованиеПлательщикаИОснования = НаименованиеПлательщика + " " + ТекстОснование;

	Если СтруктураПараметров.ПечататьЧекиСРасшифровкойПоУслугам Тогда

		УПЖКХ_ОбщегоНазначенияСервер.ДополнитьПозицииЧекаОснованиемИСуммой(ПозицииЧека,
																		   СтрокаНаименованиеПлательщикаИОснования,
																		   ШиринаСтрокиЧека,
																		   СуммаЧека);

	Иначе

		Для Каждого ТекущаяСтрокаОплаты Из РасшифровкаТекущейОплаты Цикл

			НаименованиеПлательщикаИОснование = СтрокаНаименованиеПлательщикаИОснования;
			Основание                         = ТекстОснование;

			Если ТекущаяСтрокаОплаты.ЭтоПени И Не ИсточникОплаты.Пустая() Тогда
				НаименованиеПлательщикаИОснование = НаименованиеПлательщикаИОснование + " (пени)";
				Основание = Основание + " (пени)";
			КонецЕсли;

			ВыводитьОснованиеРаздельно = СтрДлина(НаименованиеПлательщикаИОснование) > 64;

			ФискальнаяСтрокаПозицииЧека = УПЖКХ_ТиповыеМетодыКлиентСервер.ПараметрыФискальнойСтрокиЧека();
			ФискальнаяСтрокаПозицииЧека.Наименование           = ?(ВыводитьОснованиеРаздельно, НаименованиеПлательщика, НаименованиеПлательщикаИОснование);
			ФискальнаяСтрокаПозицииЧека.Количество             = 1;
			ФискальнаяСтрокаПозицииЧека.Цена                   = ТекущаяСтрокаОплаты.Сумма;
			ФискальнаяСтрокаПозицииЧека.ЦенаСоСкидками         = ФискальнаяСтрокаПозицииЧека.Цена;
			ФискальнаяСтрокаПозицииЧека.Сумма                  = ФискальнаяСтрокаПозицииЧека.Цена;
			ФискальнаяСтрокаПозицииЧека.СтавкаНДС              = ТекущаяСтрокаОплаты.СтавкаНДС;
			ФискальнаяСтрокаПозицииЧека.НомерСекции            = НомерСекции;

			ФискальнаяСтрокаПозицииЧека.ПризнакПредметаРасчета = ТекущаяСтрокаОплаты.ПризнакПредметаРасчета;
			ФискальнаяСтрокаПозицииЧека.ПризнакСпособаРасчета  = ТекущаяСтрокаОплаты.ПризнакСпособаРасчета;

			ПозицииЧека.Добавить(ФискальнаяСтрокаПозицииЧека);

			Если ВыводитьОснованиеРаздельно И Не ИсточникОплаты.Пустая() Тогда
				ТекстоваяСтрокаПозицииЧека = УПЖКХ_ТиповыеМетодыКлиентСервер.ПараметрыТекстовойСтрокиЧека(Основание);
				ТекстоваяСтрокаПозицииЧека.ПереносСтроки = Истина;
				ПозицииЧека.Добавить(ТекстоваяСтрокаПозицииЧека);
			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

	// Расшифровка по услугам.
	Если СтруктураПараметров.ПечататьЧекиСРасшифровкойПоУслугам Тогда
		УПЖКХ_ОбщегоНазначенияСервер.ДополнитьПозицииЧекаСтрокамиСРасшифровкойПоУслугам(ПозицииЧека,
																						РасшифровкаТекущейОплаты,
																						НомерСекции,
																						СтруктураПараметров);
	КонецЕсли;

	ПараметрыТекущегоЛицевогоСчета.ПозицииЧека = ПозицииЧека; // Массив элементов "Структура". Обязательно.

	// ТАБЛИЦА ОПЛАТЫ ЧЕКА.
	ТаблицаОплат = ПараметрыТекущегоЛицевогоСчета.ТаблицаОплат; // Массив элементов "Структура". Обязательно.

	ЭтоПоступлениеВКассу = (ТекущаяОплата.ВидОперации = Перечисления.КВП_ВидыОперацийРегистрацииОплаты.ПоступлениеВКассу);
	ЭтоВозвратОплатыИзКассы = (ТекущаяОплата.ВидОперации = Перечисления.КВП_ВидыОперацийРегистрацииОплаты.ВозвратОплатыИзКассы);

	Если ЭтоПоступлениеВКассу Или ЭтоВозвратОплатыИзКассы Тогда
		ТипОплаты = Перечисления.ТипыОплатыККТ.Наличные;
	Иначе
		ТипОплаты = Перечисления.ТипыОплатыККТ.Электронно;
	КонецЕсли;

	Сумма = РасшифровкаТекущейОплаты.Итог("Сумма");

	Если Сумма > 0 Тогда
		ТаблицаОплат.Добавить(Новый Структура("ТипОплаты, Сумма", ТипОплаты, Сумма));
	КонецЕсли;

	МассивЧеков.Добавить(ПараметрыТекущегоЛицевогоСчета);

КонецПроцедуры

#КонецОбласти // ПереопределениеСтандартныхФункций
// Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа --

// Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа ++
#Область ПрограммныйИнтерфейс

// Параметры:
//  Документ - ДокументОбъект, ДокументСсылка, Неопределено
// Возвращаемое значение:
//  - Булево
Функция ГП_ИспользуетсяФормированиеЧековПоКонтрагентуДокумента(Знач Документ = Неопределено) Экспорт
    Если Документ = Неопределено Тогда
        Возврат Константы.ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента.Получить();
    КонецЕсли;

    Если ТипЗнч(Документ) = Тип("ДокументСсылка.КВП_РегистрацияОплаты")
            ИЛИ ТипЗнч(Документ) = Тип("ДокументОбъект.КВП_РегистрацияОплаты") Тогда
        Возврат Константы.ГП_ФормироватьЧекиЖКХПоКонтрагентуДокумента.Получить();
    КонецЕсли;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 24.02.2025 [F00235125] Печать чеков по контрагенту документа --
