// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления ++
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ГП_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
    ГП_СоздатьДополнительныеЭлементыНаСервере();

    Если ЗначениеЗаполнено(ЭтотОбъект.Объект.Ссылка) = Ложь И ЭтотОбъект.Параметры.Свойство("ГП_ДанныеЗаполнения") = Истина Тогда
        // ЗаполнитьЗначенияСвойств(ЭтотОбъект.Объект, ЭтотОбъект.Параметры.ГП_ДанныеЗаполнения);
        ДокументОбъект = ЭтотОбъект.РеквизитФормыВЗначение("Объект");

        ДокументОбъект.Заполнить(ЭтотОбъект.Параметры.ГП_ДанныеЗаполнения);

        ДокументОбъект.Дата = ЭтотОбъект.Параметры.ГП_ДанныеЗаполнения.Дата;
        // ДокументОбъект.УстановитьВремя(РежимАвтоВремя.Последним);

        ДокументОбъект.Контрагент = ЭтотОбъект.Параметры.ГП_ДанныеЗаполнения.Контрагент;

        ДокументОбъект.ДокументыПоступленияДенежныхСредств.Очистить();
        НоваяСтрокаДокументов = ДокументОбъект.ДокументыПоступленияДенежныхСредств.Добавить();
        НоваяСтрокаДокументов.Документ = ЭтотОбъект.Параметры.ГП_ДанныеЗаполнения.ДокументОплаты;

        ЭтотОбъект.ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");

        ГП_ЗаполнитьТаблицуЛицевыхСчетовПоКонтрагентуНаСервере(
            ЭтотОбъект.Параметры.ГП_ДанныеЗаполнения.СуммаДокументаОплаты,
            ЭтотОбъект.Параметры.ГП_ДанныеЗаполнения.ДокументОплаты);
    КонецЕсли;

    ГП_НастроитьВидимостьЭлементовФормыНаСервере();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы
// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления --

// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления ++
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ГП_ЗаполнитьТаблицуЛицевыхСчетовПоКонтрагентуНаСервере(Знач СуммаРаспределенияПоЛС, Знач ДокументОплаты)
    // Получение таблицы л/с контрагента
    ТаблицаЛСКонтрагента = ГП_РаботаСЛицевымиСчетами.ПолучитьЛицевыеСчетаКонтрагента(
            ЭтотОбъект.Объект.Контрагент, ЭтотОбъект.Объект.Организация, ЭтотОбъект.Объект.Дата);

    // Получение списка л/с
    СписокЛицевыхСчетов = ТаблицаЛСКонтрагента.ВыгрузитьКолонку("ЛицевойСчет");

    // Получение данные взаиморасчетов по л/с
    ТаблицаНачисленийНаЛС = ГП_ПолучитьНачисленияДляСпискаЛицевыхСчетовНаСервере(СписокЛицевыхСчетов);

    // Формирования таблицы данных распределения оплаты по л/с
    ДанныеЗаполнения = ГП_СформироватьТаблицуОплатДляСпискаЛСНаСервере(
            ТаблицаНачисленийНаЛС, СуммаРаспределенияПоЛС, ДокументОплаты, ЭтотОбъект.Объект.Контрагент);

    // Заполнение ТЧ ЛицевыеСчета
    ЭтотОбъект.Объект.ЛицевыеСчета.Очистить();
    Для Каждого СтрокаДанных Из ДанныеЗаполнения Цикл
        НоваяСтрокаЛС = ЭтотОбъект.Объект.ЛицевыеСчета.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрокаЛС, СтрокаДанных);

        // По умолчанию - Настройка распределения: "Автоматически"
        НоваяСтрокаЛС.РаспределятьПоУказаннымУслугам = Ложь;
        НоваяСтрокаЛС.ФлагРедактирования = Ложь;
        НоваяСтрокаЛС.ФлагРедактированияНастроек = 1;
        НоваяСтрокаЛС.ВариантРаспределения = "";
    КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ГП_СформироватьТаблицуОплатДляСпискаЛСНаСервере(
        Знач ТаблицаНачисленийНаЛС, Знач СуммаРаспределения, Знач ДокументОплаты, Знач Контрагент)

    СтруктураДанныхДляРаспределения = ГП_ПодготовитьСтруктуруДанныхДляРаспределенияОплатыНаСервере(ТаблицаНачисленийНаЛС);
    ДанныеДляПропорциональногоРаспределения = СтруктураДанныхДляРаспределения.ДанныеДляПропорциональногоРаспределения;
    ДанныеДляРавномерногоРаспределения = СтруктураДанныхДляРаспределения.ДанныеДляРавномерногоРаспределения;

    СуммаНачисленияНаВсеЛС = ДанныеДляПропорциональногоРаспределения.Итог("СуммаНачисленияОстаток");
    СуммаДляПропорциональногоРаспределения = Мин(Макс(СуммаНачисленияНаВсеЛС, 0), СуммаРаспределения);
    СуммаДляРавномерногоРаспределения = СуммаРаспределения - СуммаДляПропорциональногоРаспределения;

    #Область Отладка
    ГП_ДиагностикаКлиентСервер.Утверждение(СуммаДляПропорциональногоРаспределения >= 0 И СуммаДляРавномерногоРаспределения >= 0,
        "Сумма распределения не может быть меньше 0");
    #КонецОбласти // Отладка

    СтруктураПараметровЗаполнения = Новый Структура;
    СтруктураПараметровЗаполнения.Вставить("СуммаРаспределения", СуммаДляПропорциональногоРаспределения);
    СтруктураПараметровЗаполнения.Вставить("ОбщаяСуммаНачислений", СуммаНачисленияНаВсеЛС);
    СтруктураПараметровЗаполнения.Вставить("ДокументОплаты", ДокументОплаты);
    СтруктураПараметровЗаполнения.Вставить("Контрагент", Контрагент);
    СтруктураПараметровЗаполнения.Вставить("РаспределятьРавномерно", Ложь);

    // Основной цикл распределения по л/с где есть суммы на оплату (долг)
    РезультатФункции = ГП_ВыполнитьРаспределениеОплатыНаСервере(
            ДанныеДляПропорциональногоРаспределения, СтруктураПараметровЗаполнения);

    // Распределение аванса
    Если СуммаДляРавномерногоРаспределения > 0 Тогда
        #Область Отладка
        ГП_ДиагностикаКлиентСервер.Утверждение(ДанныеДляРавномерногоРаспределения.Количество(),
            "Нет данных л/с для равномерного распределения");
        #КонецОбласти // Отладка

        СтруктураПараметровЗаполнения.РаспределятьРавномерно = Истина;
        СтруктураПараметровЗаполнения.СуммаРаспределения = СуммаДляРавномерногоРаспределения;

        ДанныеЗаполненияРавномерно = ГП_ВыполнитьРаспределениеОплатыНаСервере(
                ДанныеДляРавномерногоРаспределения, СтруктураПараметровЗаполнения);

        ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеЗаполненияРавномерно, РезультатФункции);
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

&НаСервере
Функция ГП_ВыполнитьРаспределениеОплатыНаСервере(Знач ДанныеДляРаспределения, Знач ПараметрыРаспределения)
    Возврат ГП_РегистрацияОплатыСлужебный.СформироватьТаблицуРаспределенияОплаты(
        ПараметрыРаспределения.СуммаРаспределения,
        ПараметрыРаспределения.ОбщаяСуммаНачислений,
        ДанныеДляРаспределения,
        ПараметрыРаспределения.ДокументОплаты,
        ПараметрыРаспределения.Контрагент,
        ?(ПараметрыРаспределения.Свойство("РаспределятьРавномерно"), ПараметрыРаспределения.РаспределятьРавномерно, Ложь));
КонецФункции

&НаСервереБезКонтекста
Функция ГП_РассчитатьКоэффициентРаспределенияНаСервере(
        Знач СуммаНачисления, Знач СуммаРаспределения, Знач КоличествоСтрокРаспределения = Неопределено)

    Возврат ГП_РегистрацияОплатыСлужебный.РассчитатьКоэффициентРаспределения(
        СуммаНачисления, СуммаРаспределения, КоличествоСтрокРаспределения);
КонецФункции

&НаСервереБезКонтекста
Функция ГП_ПодготовитьСтруктуруДанныхДляРаспределенияОплатыНаСервере(Знач ТаблицаНачисленийНаЛС)
    Возврат ГП_РегистрацияОплатыСлужебный.ПодготовитьСтруктуруДанныхДляРаспределенияОплаты(ТаблицаНачисленийНаЛС);
КонецФункции

&НаСервереБезКонтекста
Функция ГП_ПолучитьНачисленияДляСпискаЛицевыхСчетовНаСервере(
        Знач СписокЛицевыхСчетов, Знач ОрганизацияСсылка = Неопределено, Знач Период = Неопределено)

    Возврат ГП_РегистрацияОплатыСлужебный.ПолучитьНачисленияДляСпискаЛицевыхСчетов(СписокЛицевыхСчетов, ОрганизацияСсылка, Период);
КонецФункции

#Область НастройкиФормы

&НаСервере
Функция ГП_СоздатьПолеКонтрагентНаСервере()
    Результат = Новый Структура("Элемент");

    // Создание элемента формы
    ИмяСоздаваемогоЭлемента = "ГП_Контрагент";
    ПараметрыЭлемента = Новый Структура("Заголовок, ПутьКДанным, Видимость");
    ПараметрыЭлемента.Заголовок = "Контрагент";
    ПараметрыЭлемента.ПутьКДанным = "Объект.Контрагент";
    ПараметрыЭлемента.Видимость = Истина;

    Результат.Элемент = ГП_РаботаСФормамиКлиентСервер.СоздатьПолеФормы(ИмяСоздаваемогоЭлемента, ПараметрыЭлемента, ЭтотОбъект,
            "ГруппаСлева", "ВидОплаты");

    Возврат Результат;
КонецФункции

&НаСервере
Процедура ГП_СоздатьДополнительныеЭлементыНаСервере()
    ГП_СоздатьПолеКонтрагентНаСервере();
КонецПроцедуры

&НаСервере
Процедура ГП_НастроитьВидимостьЭлементовФормыНаСервере()
    ЭтотОбъект.Элементы.ВидОплаты.Видимость = Ложь;
КонецПроцедуры

#КонецОбласти // НастройкиФормы

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления --
