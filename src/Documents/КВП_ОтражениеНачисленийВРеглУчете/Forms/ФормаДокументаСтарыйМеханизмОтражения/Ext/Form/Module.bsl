// Гарант+ Килипенко 19.09.2024 [F00228718] Доработка заполнения отражения начислений в рег. учете ++
#Область ПереопределениеСтандартныхФункций

&НаСервере
&ИзменениеИКонтроль("ЗаполнитьТабличнуюЧастьОтражениеНачисленийНаСервере")
Процедура ГП_ЗаполнитьТабличнуюЧастьОтражениеНачисленийНаСервере(ОбновитьСодержаниеТабличнойЧасти)

    ДокументОбъект = РеквизитФормыВЗначение("Объект", Тип("ДокументОбъект.КВП_ОтражениеНачисленийВРеглУчете"));
    #Вставка
    // Гарант+ Килипенко 18.09.2024 [F00228484] Доработка отражения в рег учете ++
    ДокументОбъект.ДополнительныеСвойства.Вставить("ГП_ЭтоЗаполнениеПоЛицевымСчетам",
        ЭтотОбъект.ГП_ДополнительныеСвойстваФормы.ГП_ЭтоЗаполнениеПоЛицевымСчетам);
    // Гарант+ Килипенко 18.09.2024 [F00228484] Доработка отражения в рег учете --
    #КонецВставки
    ДокументОбъект.ЗаполнитьТабличнуюЧастьОтражениеНачислений(ОбновитьСодержаниеТабличнойЧасти);
    #Вставка
    // Гарант+ Килипенко 18.09.2024 [F00228484] Доработка отражения в рег учете ++
    ДокументОбъект.ДополнительныеСвойства.ГП_ЭтоЗаполнениеПоЛицевымСчетам = Ложь;
    // Гарант+ Килипенко 18.09.2024 [F00228484] Доработка отражения в рег учете --
    #КонецВставки
    ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");

КонецПроцедуры

// Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп ++
//
&НаКлиенте
&ИзменениеИКонтроль("ОбновитьОтборРасшифровкиНачислений")
Процедура ГП_ОбновитьОтборРасшифровкиНачислений()

    Упрощенный = (Объект.ВидОперации =
    ПредопределенноеЗначение("Перечисление.КВП_ВидыОперацийОтраженияНачисленийВРеглУчете.ОтражениеУпрощенное"));

    Если Упрощенный Тогда
        ТекСтрока = Элементы.КонтрагентыУпр.ТекущиеДанные;
    Иначе
        ТекСтрока = Элементы.Контрагенты.ТекущиеДанные;
    КонецЕсли;

    Если Не ТекСтрока = Неопределено Тогда

        // Установим отбор в таблице расшифровки.
        СтруктураОтбора = Новый ФиксированнаяСтруктура("ДоговорКонтрагента, НоменклатурнаяГруппа, ЭтоКапРемонт, ЭтоЛьгота,
        |ЭтоПени, ВариантПоставкиУслуг, ЭтоРеализация",
        ТекСтрока.ДоговорКонтрагента,
        ТекСтрока.НоменклатурнаяГруппа,
        ТекСтрока.ЭтоКапРемонт,
        ТекСтрока.ЭтоЛьгота,
        ТекСтрока.ЭтоПени,
        ТекСтрока.ВариантПоставкиУслуг,
        ТекСтрока.ЭтоРеализация);
        #Вставка // Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп ++

        Если ЗначениеЗаполнено(ТекСтрока.НоменклатурнаяГруппа) = Ложь Тогда
            // Исключение Номенклатурной группы из отбора строк расшифровки
            СтруктураОтбора = Новый Структура(СтруктураОтбора);
            СтруктураОтбора.Удалить("НоменклатурнаяГруппа");
            СтруктураОтбора = Новый ФиксированнаяСтруктура(СтруктураОтбора);
        КонецЕсли;

        #КонецВставки // Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп --
        Если Упрощенный Тогда
            Элементы.РасшифровкаНачисленийУпр.ОтборСтрок = СтруктураОтбора;
        Иначе
            Элементы.РасшифровкаНачислений.ОтборСтрок = СтруктураОтбора;
        КонецЕсли;

        // Обновим итоги в подвале таблицы
        СуммаРасшифровки = 0;

        СтруктураОтбора = Новый Структура;
        СтруктураОтбора.Вставить("ДоговорКонтрагента",   ТекСтрока.ДоговорКонтрагента);
        СтруктураОтбора.Вставить("НоменклатурнаяГруппа", ТекСтрока.НоменклатурнаяГруппа);
        СтруктураОтбора.Вставить("ЭтоКапРемонт",         ТекСтрока.ЭтоКапРемонт);
        СтруктураОтбора.Вставить("ЭтоЛьгота",            ТекСтрока.ЭтоЛьгота);
        СтруктураОтбора.Вставить("ЭтоПени",              ТекСтрока.ЭтоПени);
        СтруктураОтбора.Вставить("ВариантПоставкиУслуг", ТекСтрока.ВариантПоставкиУслуг);
        СтруктураОтбора.Вставить("ЭтоРеализация",        ТекСтрока.ЭтоРеализация);
        #Вставка // Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп ++

        Если ЗначениеЗаполнено(ТекСтрока.НоменклатурнаяГруппа) = Ложь Тогда
            // Исключение Номенклатурной группы из отбора строк расшифровки
            СтруктураОтбора.Удалить("НоменклатурнаяГруппа");
        КонецЕсли;

        #КонецВставки // Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп --

        СтрокиРасшифровки = Объект.РасшифровкаНачислений.НайтиСтроки(СтруктураОтбора);

        Для Каждого ТекСтрокаРасшифровки Из СтрокиРасшифровки Цикл
            СуммаРасшифровки = СуммаРасшифровки + ТекСтрокаРасшифровки.СуммаОтражения;
        КонецЦикла;

        СуммаИтогоСуммаОтраженияРасшифровки = СуммаРасшифровки;

    КонецЕсли;

КонецПроцедуры // Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп --

// Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп ++
//
&НаСервере
&ИзменениеИКонтроль("ЗаполнитьСуммуОтраженияВСтроке")
Процедура ГП_ЗаполнитьСуммуОтраженияВСтроке(ТекущаяСтрока)

    ДанныеСтроки = Объект.Контрагенты.НайтиПоИдентификатору(ТекущаяСтрока);

    СтруктураПоиска = Новый Структура;
    СтруктураПоиска.Вставить("ВариантПоставкиУслуг", ДанныеСтроки.ВариантПоставкиУслуг);
    СтруктураПоиска.Вставить("ДоговорКонтрагента",   ДанныеСтроки.ДоговорКонтрагента);
    СтруктураПоиска.Вставить("НоменклатурнаяГруппа", ДанныеСтроки.НоменклатурнаяГруппа);
    СтруктураПоиска.Вставить("ЭтоЛьгота",            ДанныеСтроки.ЭтоЛьгота);
    СтруктураПоиска.Вставить("ЭтоПени",              ДанныеСтроки.ЭтоПени);
    СтруктураПоиска.Вставить("ЭтоКапРемонт",         ДанныеСтроки.ЭтоКапРемонт);
    СтруктураПоиска.Вставить("ЭтоРеализация",        ДанныеСтроки.ЭтоРеализация);
    #Вставка // Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп ++

    Если ЗначениеЗаполнено(ДанныеСтроки.НоменклатурнаяГруппа) = Ложь Тогда
        // Исключение Номенклатурной группы из отбора строк расшифровки
        СтруктураПоиска.Удалить("НоменклатурнаяГруппа");
    КонецЕсли;

    #КонецВставки // Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп --

    СтрокиРасшифровки = Объект.РасшифровкаНачислений.НайтиСтроки(СтруктураПоиска);

    СуммаОтражения = 0;

    Для Каждого ТекСтрокаРасшифровки Из СтрокиРасшифровки Цикл
        СуммаОтражения = СуммаОтражения + ТекСтрокаРасшифровки.СуммаОтражения;
    КонецЦикла;

    ДанныеСтроки.СуммаОтражения = СуммаОтражения;

КонецПроцедуры // Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп --

#КонецОбласти // ПереопределениеСтандартныхФункций
// Гарант+ Килипенко 19.09.2024 [F00228718] Доработка заполнения отражения начислений в рег. учете --

// Гарант+ Килипенко 18.09.2024 [F00228484] Доработка отражения в рег учете ++
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ГП_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
    // Создание дополнительных реквизитов
    ГП_СоздатьРеквизитДополнительныеСвойстваФормыНаСервере();

    // Создание элементов формы
    ГП_СоздатьКомандуЗаполнитьПоЛицевымСчетамНаСервере();
    ГП_СоздатьЭлементФормыРасшифровкаНачисленийЛицевойСчетНаСервере();
    ГП_СоздатьКомандуПечатьКомплектаДокументовНаСервере();
    ГП_СоздатьЭлементФормыПериодНачисленияНаСервере();

    // Инициализация значений дополнительных реквизитов
    ГП_УстановитьЗначениеДополнительныхСвойствНаСервере("ГП_ЭтоЗаполнениеПоЛицевымСчетам", Ложь);

    ЭтоНовыйДокументКопирования = Объект.Ссылка.Пустая()
        И (ЭтотОбъект.Параметры.Свойство("ЗначениеКопирования") = Ложь
            ИЛИ ЗначениеЗаполнено(ЭтотОбъект.Параметры.ЗначениеКопирования));
    Если Отказ ИЛИ ЭтоНовыйДокументКопирования Тогда
        Возврат;
    КонецЕсли;

    // Настройка ограничений функциональности формы
    ГП_УстановитьОграниченияФункциональностиФормыНаСервере();

    // Заполнение шапки документа по данным документа Начисления услуг
    ГП_ЗаполнитьНаОснованииДокументаНачисленияУслугНаСервере("ВидОперации");
КонецПроцедуры

&НаСервере
Процедура ГП_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
    // Заполнение шапки документа по данным документа Начисления услуг
    ГП_ЗаполнитьНаОснованииДокументаНачисленияУслугНаСервере();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы
// Гарант+ Килипенко 18.09.2024 [F00228484] Доработка отражения в рег учете --

// Гарант+ Килипенко 19.09.2024 [F00228718] Доработка заполнения отражения начислений в рег. учете ++
#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ГП_ЗаполнитьПоЛицевымСчетамПриНажатии(Команда)
    ГП_УстановитьЗначениеДополнительныхСвойствНаСервере("ГП_ЭтоЗаполнениеПоЛицевымСчетам", Истина);
    Заполнить(Команда);
КонецПроцедуры

&НаКлиенте
&После("ЗаполнитьПродолжение")
Процедура ГП_ЗаполнитьПродолжение(ОбновитьСодержаниеТабличнойЧасти)
    ГП_УстановитьЗначениеДополнительныхСвойствНаСервере("ГП_ЭтоЗаполнениеПоЛицевымСчетам", Ложь);
КонецПроцедуры

&НаКлиенте
&Перед("ЗаполнитьЗавершение")
Процедура ГП_ЗаполнитьЗавершение(РезультатВопроса, ДополнительныеПараметры)
    Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		ГП_УстановитьЗначениеДополнительныхСвойствНаСервере("ГП_ЭтоЗаполнениеПоЛицевымСчетам", Ложь);
	КонецЕсли;
КонецПроцедуры

// Гарант+ Килипенко 29.10.2024 [F00230213] Печать комплекта документов реализации ++
&НаКлиенте
Асинх Процедура ГП_ПечатьКомплектаДокументовПриНажатии(Команда)
    ГП_ОткрытьФормуКомплектаДокументов();
КонецПроцедуры // Гарант+ Килипенко 29.10.2024 [F00230213] Печать комплекта документов реализации --

#КонецОбласти // ОбработчикиКомандФормы
// Гарант+ Килипенко 19.09.2024 [F00228718] Доработка заполнения отражения начислений в рег. учете --

// Гарант+ Килипенко 18.09.2024 [F00228484] Доработка отражения в рег учете ++
#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеДокумента

&НаСервере
Функция ГП_ЗаполнитьНаОснованииДокументаНачисленияУслугНаСервере(Знач ПоляЗаполнения = Неопределено)
    РезультатФункции = Новый Структура("Успех", Истина);

    Если ГП_ЭтоНовыйДокументНаОснованииНачисленияУслугНаСервере() = Ложь Тогда
        РезультатФункции.Успех = Ложь;
        Возврат РезультатФункции; // Нет данных для заполнения
    КонецЕсли;

    ЗаполнитьЗначенияСвойств(ЭтотОбъект.Объект, ЭтотОбъект.Параметры.ГП_ДанныеЗаполненияПоНачислениям, ПоляЗаполнения);

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ЗаполнениеДокумента

// Гарант+ Килипенко 19.09.2024 [F00228718] Доработка заполнения отражения начислений в рег. учете ++
#Область СозданиеЭлементовФормы

&НаСервере
Функция ГП_СоздатьКомандуЗаполнитьПоЛицевымСчетамНаСервере()
    РезультатФункции = Новый Структура("Кнопка, Команда");

    // Создание команды формы
    РезультатФункции.Команда = ЭтотОбъект.Команды.Добавить("ГП_ЗаполнитьПоЛицевымСчетам");
    РезультатФункции.Команда.Заголовок = "Заполнить по л/с";
    РезультатФункции.Команда.Действие = "ГП_ЗаполнитьПоЛицевымСчетамПриНажатии";

    // Создание элемента формы
    РезультатФункции.Кнопка = ЭтотОбъект.Элементы.Вставить(
            "ГП_ЗаполнитьПоЛицевымСчетам",
            Тип("КнопкаФормы"),
            ЭтотОбъект.Элементы.КонтрагентыКоманднаяПанель,
            ЭтотОбъект.Элементы.КонтрагентыУпрЗаполнить1);
    РезультатФункции.Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
    РезультатФункции.Кнопка.ИмяКоманды = РезультатФункции.Команда.Имя;
    РезультатФункции.Кнопка.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВКоманднойПанелиИВДополнительномПодменю;
    РезультатФункции.Кнопка.ЦветФона = ЦветаСтиля.ЦветАктивности;
    // РезультатФункции.Кнопка.Картинка = БиблиотекаКартинок.АктивныеПользователи;
    РезультатФункции.Кнопка.Картинка = БиблиотекаКартинок.ЗаполнитьФорму;
    РезультатФункции.Кнопка.Видимость = Истина;

    Возврат РезультатФункции;
КонецФункции

&НаСервере
Функция ГП_СоздатьРеквизитДополнительныеСвойстваФормыНаСервере()
    ДобавляемыеРеквизиты = Новый Массив;

    РеквизитДополнительныеСвойстваФормы = Новый РеквизитФормы(
            "ГП_ДополнительныеСвойстваФормы", Новый ОписаниеТипов(), "", "");
    ДобавляемыеРеквизиты.Добавить(РеквизитДополнительныеСвойстваФормы);

    ЭтотОбъект.ИзменитьРеквизиты(ДобавляемыеРеквизиты);

    Возврат РеквизитДополнительныеСвойстваФормы;
КонецФункции

&НаСервере
Функция ГП_СоздатьЭлементФормыРасшифровкаНачисленийЛицевойСчетНаСервере()
    РезультатФункции = ЭтотОбъект.Элементы.Вставить(
            "ГП_РасшифровкаНачисленийЛицевойСчет",
            Тип("ПолеФормы"),
            ЭтотОбъект.Элементы.РасшифровкаНачислений,
            ЭтотОбъект.Элементы.РасшифровкаНачисленийНоменклатура);
    РезультатФункции.Вид = ВидПоляФормы.ПолеВвода;
    РезультатФункции.ПутьКДанным = "Объект.РасшифровкаНачислений.lc_ЛицевойСчет";
    РезультатФункции.Видимость = Истина;

    Возврат РезультатФункции;
КонецФункции

&НаСервере
Функция ГП_СоздатьЭлементФормыПериодНачисленияНаСервере()
    РезультатФункции = Новый Структура("Элементы", Новый Массив);

    // Создание группы
    НовыйГруппаПериод = ЭтотОбъект.Элементы.Вставить(
            "ГП_ПериодНачисления",
            Тип("ГруппаФормы"),
            ЭтотОбъект.Элементы.ГруппаШапкаСлева,
            ЭтотОбъект.Элементы.ГруппаНомерДата);
    НовыйГруппаПериод.Вид = ВидГруппыФормы.ОбычнаяГруппа;
    НовыйГруппаПериод.ОтображатьЗаголовок = Ложь;
    НовыйГруппаПериод.Отображение = ОтображениеОбычнойГруппы.Нет;
    РезультатФункции.Элементы.Добавить(НовыйГруппаПериод);

    // Создание поля Начло периода
    НовыйПериодНачисленияНачало = ЭтотОбъект.Элементы.Добавить(
            "ГП_ПериодНачисленияНачало",
            Тип("ПолеФормы"),
            НовыйГруппаПериод);
    НовыйПериодНачисленияНачало.Вид = ВидПоляФормы.ПолеВвода;
    НовыйПериодНачисленияНачало.Заголовок = "с";
    НовыйПериодНачисленияНачало.ПутьКДанным = "Объект.ГП_ПериодНачисленияНачало";
    НовыйПериодНачисленияНачало.Видимость = Истина;
    РезультатФункции.Элементы.Добавить(НовыйПериодНачисленияНачало);

    // Создание поля Окончание периода
    НовыйПериодНачисленияОкончание = ЭтотОбъект.Элементы.Добавить(
            "ГП_ПериодНачисленияОкончание",
            Тип("ПолеФормы"),
            НовыйГруппаПериод);
    НовыйПериодНачисленияОкончание.Вид = ВидПоляФормы.ПолеВвода;
    НовыйПериодНачисленияОкончание.Заголовок = "по";
    НовыйПериодНачисленияОкончание.ПутьКДанным = "Объект.ГП_ПериодНачисленияОкончание";
    НовыйПериодНачисленияОкончание.Видимость = Истина;
    РезультатФункции.Элементы.Добавить(НовыйПериодНачисленияОкончание);

    Возврат РезультатФункции;
КонецФункции

// Гарант+ Килипенко 29.10.2024 [F00230213] Печать комплекта документов реализации ++
//
&НаСервере
Функция ГП_СоздатьКомандуПечатьКомплектаДокументовНаСервере()
    Результат = Новый Структура("Кнопка, Команда");

    // Создание команды формы
    Результат.Команда = ЭтотОбъект.Команды.Добавить("ГП_ПечатьКомплектаДокументов");
    Результат.Команда.Заголовок = "Печать комплекта";
    Результат.Команда.Действие = "ГП_ПечатьКомплектаДокументовПриНажатии";

    // Создание элемента формы
    Результат.Кнопка = ЭтотОбъект.Элементы.Добавить(
            "ГП_ПечатьКомплектаДокументов",
            Тип("КнопкаФормы"),
            ЭтотОбъект.Элементы.ФормаУПЖКХ_Печать);
    Результат.Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
    Результат.Кнопка.ИмяКоманды = Результат.Команда.Имя;
    Результат.Кнопка.Видимость = Истина;

    Возврат Результат;
КонецФункции // Гарант+ Килипенко 29.10.2024 [F00230213] Печать комплекта документов реализации --

#КонецОбласти // СозданиеЭлементовФормы
// Гарант+ Килипенко 19.09.2024 [F00228718] Доработка заполнения отражения начислений в рег. учете --

&НаСервере
Процедура ГП_УстановитьЗначениеДополнительныхСвойствНаСервере(Знач Ключ, Знач Значение)
    Если ЭтотОбъект.ГП_ДополнительныеСвойстваФормы = Неопределено Тогда
        ЭтотОбъект.ГП_ДополнительныеСвойстваФормы = Новый Структура("ГП_ЭтоЗаполнениеПоЛицевымСчетам", Ложь);
    КонецЕсли;

    ЭтотОбъект.ГП_ДополнительныеСвойстваФормы.Вставить(Ключ, Значение);
КонецПроцедуры

&НаСервере
Функция ГП_ЭтоНовыйДокументНаОснованииНачисленияУслугНаСервере()
    ЭтоНовыйДокументНаОснованииНачисленияУслуг = Объект.Ссылка.Пустая()
        И ЭтотОбъект.Параметры.Свойство("ГП_ДанныеЗаполненияПоНачислениям");

    Возврат ЭтоНовыйДокументНаОснованииНачисленияУслуг;
КонецФункции

&НаСервере
Процедура ГП_УстановитьОграниченияФункциональностиФормыНаСервере()
    ЭтотОбъект.Объект.ВидОперации =
        Перечисления.КВП_ВидыОперацийОтраженияНачисленийВРеглУчете.ОтражениеДокументамиРеализации;
    ЭтотОбъект.Элементы.ВидОперации.Доступность = Ложь;
    ЭтотОбъект.Объект.Взаиморасчеты = 1; // Только начисления
    ЭтотОбъект.Элементы.Взаиморасчеты.Доступность = Ложь;
КонецПроцедуры

// Гарант+ Килипенко 29.10.2024 [F00230213] Печать комплекта документов реализации ++
#Область ПечатьКомплектаДокументов

// Выполняет открытие формы печати комплекта документов
&НаКлиенте
Процедура ГП_ОткрытьФормуКомплектаДокументов()
    АдресДанныхОтчета = ГП_ПолучитьАдресСтруктурыКомплектаДокументов();

    ПараметрыФормы = Новый Структура;
    ПараметрыФормы.Вставить("АдресСтруктурыОтчета", АдресДанныхОтчета);
    ПараметрыФормы.Вставить("Закладки", Истина);
    ПараметрыФормы.Вставить("ЗаголовокОтчета", "Документы реализации");

    ОткрытьФорму("ОбщаяФорма.ГП_ФормаПечатнойФормыОтчета",
        ПараметрыФормы, ЭтотОбъект, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

// Создает структуру комплекта и возвращает адрес отчета во временном хранилище
// Возвращаемое значение:
//  - Строка - Адрес в хранилище
&НаСервере
Функция ГП_ПолучитьАдресСтруктурыКомплектаДокументов()
    МассивПечатныхФормы = Новый Массив;

    СтруктураКомплекта = Новый ДеревоЗначений;
    СтруктураКомплекта.Колонки.Добавить("ПорядковыйНомер");
    СтруктураКомплекта.Колонки.Добавить("ИмяСтруктуры");

    НомерОтчета = 0;
    ПечатныеФормыЛичногоДокументов = ГП_ПолучитьПечатныеФормыДокументовРеализацииНаСервере();
    Если ПечатныеФормыЛичногоДокументов <> Неопределено Тогда
        Для Каждого СтруктураПФ Из ПечатныеФормыЛичногоДокументов Цикл
            Если СтруктураПФ.ТабличныйДокумент.ВысотаТаблицы = 0 Тогда
                Продолжить;
            КонецЕсли;

            МассивПечатныхФормы.Добавить(СтруктураПФ.ТабличныйДокумент);
            ГП_ДобавитьСтруктуруКомплекта(СтруктураКомплекта, НомерОтчета, СтруктураПФ.Наименование);
            НомерОтчета = НомерОтчета + 1;
        КонецЦикла;
    КонецЕсли;

    ДанныеОтчета = Новый Структура;
    ДанныеОтчета.Вставить("СтруктураОтчета", СтруктураКомплекта);
    ДанныеОтчета.Вставить("МассивТабличныхДокументов", МассивПечатныхФормы);

    АдресДанныхОтчета = ПоместитьВоВременноеХранилище(ДанныеОтчета, "");

    РезультатФункции = АдресДанныхОтчета;
    Возврат РезультатФункции;
КонецФункции

// Аккумулирует все печатные формы документов реализации
// Возвращаемое значение:
//  Структура из КлючИЗначение
//      * Ключ - Строка - Служит заголовком при печати комплекта
//      * Значение - ТабличныйДокумент
&НаСервере
Функция ГП_ПолучитьПечатныеФормыДокументовРеализацииНаСервере()
    РезультатФункции = Новый Массив;

    ПоляРезультата = "Наименование, ТабличныйДокумент";

    // Акт реализации
    СтруктураПечатнойФормы = Документы.КВП_ОтражениеНачисленийВРеглУчете.ГП_СформироватьДокументАктаОбОказанииУслуг(
            ЭтотОбъект.Объект.Ссылка);
    Если СтруктураПечатнойФормы.Успех = Истина Тогда
        РезультатФункции.Добавить(Новый Структура(ПоляРезультата,
                СтруктураПечатнойФормы.Наименование,
                СтруктураПечатнойФормы.ТабличныйДокумент));
    КонецЕсли;

    // Счет-фактура
    СтруктураПечатнойФормы = Документы.КВП_ОтражениеНачисленийВРеглУчете.ГП_СформироватьДокументСчетФактураВыданный(
            ЭтотОбъект.Объект.Ссылка);
    Если СтруктураПечатнойФормы.Успех = Истина Тогда
        РезультатФункции.Добавить(Новый Структура(ПоляРезультата,
                СтруктураПечатнойФормы.Наименование,
                СтруктураПечатнойФормы.ТабличныйДокумент));
    КонецЕсли;

    // Счет на оплату
    СтруктураПечатнойФормы = Документы.КВП_ОтражениеНачисленийВРеглУчете.ГП_СформироватьДокументСчетаНаОплату(
            ЭтотОбъект.Объект.Ссылка);
    Если СтруктураПечатнойФормы.Успех = Истина Тогда
        РезультатФункции.Добавить(Новый Структура(ПоляРезультата,
                СтруктураПечатнойФормы.Наименование,
                СтруктураПечатнойФормы.ТабличныйДокумент));
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

// Добавляет новый элемент в структуру отчета
&НаСервере
Процедура ГП_ДобавитьСтруктуруКомплекта(СтруктураКомплекта, ПорядковыйНомер, ИмяСтруктуры)
    НоваяСтрока = СтруктураКомплекта.Строки.Добавить();
    НоваяСтрока.ПорядковыйНомер = ПорядковыйНомер;
    НоваяСтрока.ИмяСтруктуры = ИмяСтруктуры;
КонецПроцедуры

#КонецОбласти // ПечатьКомплектаДокументов
// Гарант+ Килипенко 29.10.2024 [F00230213] Печать комплекта документов реализации --

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 18.09.2024 [F00228484] Доработка отражения в рег учете --
