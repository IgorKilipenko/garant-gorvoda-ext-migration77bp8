// Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп ++
#Область ПереопределениеСтандартныхФункций

&ИзменениеИКонтроль("ПодготовитьПараметрыПроведенияСтарыйМеханизмОтражения")
Функция ГП_ПодготовитьПараметрыПроведенияСтарыйМеханизмОтражения(ДокументСсылка, Отказ, мВалютаРегламентированногоУчета, мНастройкиУчетнойПолитикиТСЖ)

    ПараметрыПроведения = Новый Структура;

    Запрос = Новый Запрос;

    Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
    Запрос.Текст =
    "ВЫБРАТЬ
    |	Реквизиты.Ссылка КАК Регистратор,
    |	Реквизиты.ВерсияДанных,
    |	Реквизиты.ПометкаУдаления,
    |	Реквизиты.Номер,
    |	Реквизиты.Дата КАК Период,
    |	Реквизиты.Проведен,
    |	Реквизиты.Организация,
    |	Реквизиты.Взаиморасчеты,
    |	Реквизиты.ВидОперации,
    |	Реквизиты.ТипДокументаОтражения,
    |	Реквизиты.УчитыватьНДС,
    |	Реквизиты.СуммаВключаетНДС,
    |	Реквизиты.Контрагент,
    |	Реквизиты.Номенклатура,
    |	Реквизиты.НоменклатурнаяГруппа,
    |	Реквизиты.Ответственный,
    |	Реквизиты.Комментарий,
    |	Реквизиты.ПодразделениеОрганизации,
    |	Реквизиты.КонтрагентКомпенсацииЛьгот,
    |	Реквизиты.ДоговорКонтрагентаКомпенсацииЛьгот,
    |	Реквизиты.Подразделение,
    |	Реквизиты.СпособЗачетаАвансов,
    |	""Выбытие"" КАК НаправлениеДвижения,
    |	ЛОЖЬ КАК ЭтоВозврат
    |ИЗ
    |	Документ.КВП_ОтражениеНачисленийВРеглУчете КАК Реквизиты
    |ГДЕ
    |	Реквизиты.Ссылка = &Ссылка";
    РезультатЗапроса = Запрос.Выполнить().Выгрузить();

    Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(РезультатЗапроса[0]);

    Реквизиты.Вставить("ВалютаРеглУчета", мВалютаРегламентированногоУчета);
    Реквизиты.Вставить("ПрименяетсяУСН",
    УчетнаяПолитика.ПрименяетсяУСН(Реквизиты.Организация, Реквизиты.Период));
    Реквизиты.Вставить("ПрименяетсяУСНПатент",
    УчетнаяПолитика.ПрименяетсяУСНПатент(Реквизиты.Организация, Реквизиты.Период));

    РезультатЗапроса.Колонки.Добавить("УчитыватьЗадолженностьУСН");
    РезультатЗапроса.Колонки.Добавить("УчитыватьЗадолженностьУСНПатент");
    СтрокаРезультата = РезультатЗапроса[0];
    СтрокаРезультата.УчитыватьЗадолженностьУСН = Реквизиты.ПрименяетсяУСН;
    СтрокаРезультата.УчитыватьЗадолженностьУСНПатент = Реквизиты.ПрименяетсяУСНПатент;

    ПараметрыПроведения.Вставить("Реквизиты", РезультатЗапроса);

    Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ
    |	Реквизиты.Регистратор,
    |	Реквизиты.Период,
    |	Реквизиты.ВидОперации,
    |	Реквизиты.Организация,
    |	Реквизиты.СпособЗачетаАвансов
    |ПОМЕСТИТЬ втРеквизиты
    |ИЗ
    |	&Реквизиты КАК Реквизиты
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	втРеквизиты.Регистратор,
    |	втРеквизиты.Период,
    |	втРеквизиты.ВидОперации,
    |	втРеквизиты.Организация,
    |	втРеквизиты.СпособЗачетаАвансов,
    |	&ВалютаРеглУчета КАК ВалютаДокумента,
    |	&ПрименяетсяУСН КАК УчитыватьЗадолженностьУСН,
    |	&ПрименяетсяУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
    |	""Выбытие"" КАК НаправлениеДвижения,
    |	ЛОЖЬ КАК ЭтоВозврат
    |ИЗ
    |	втРеквизиты КАК втРеквизиты";

    Запрос.УстановитьПараметр("ВалютаРеглУчета",   	  Реквизиты.ВалютаРеглУчета);
    Запрос.УстановитьПараметр("ПрименяетсяУСН",   	  Реквизиты.ПрименяетсяУСН);
    Запрос.УстановитьПараметр("ПрименяетсяУСНПатент", Реквизиты.ПрименяетсяУСНПатент);
    Запрос.УстановитьПараметр("Реквизиты",            РезультатЗапроса);

    ТаблицаРеквизитовЗачетАванса = Запрос.Выполнить().Выгрузить();

    ПараметрыПроведения.Вставить("РеквизитыЗачетаАвансов", ТаблицаРеквизитовЗачетАванса);

    // Получим таблицу начислений.
    Запрос.Текст =
    "ВЫБРАТЬ
    |	РасшифровкаНачислений.ДоговорКонтрагента,
    |	РасшифровкаНачислений.НоменклатурнаяГруппа,
    #Вставка // Гарант+ Килипенко 23.10.2024 [F00229783] Отражение начислений в разрезе л/с ++
    |   РасшифровкаНачислений.lc_ЛицевойСчет КАК ГП_ЛицевойСчет,
    #КонецВставки // Гарант+ Килипенко 23.10.2024 [F00229783] Отражение начислений в разрезе л/с --
    |	РасшифровкаНачислений.ЭтоКапРемонт КАК ЭтоКапРемонт,
    |	РасшифровкаНачислений.ЭтоЛьгота,
    |	РасшифровкаНачислений.ЭтоПени,
    |	РасшифровкаНачислений.ВариантПоставкиУслуг,
    |	РасшифровкаНачислений.ДоговорПоставщикаУслуг,
    |	РасшифровкаНачислений.Номенклатура,
    |	РасшифровкаНачислений.Тариф,
    |	РасшифровкаНачислений.Количество,
    |	РасшифровкаНачислений.СуммаОтражения,
    |	РасшифровкаНачислений.СчетУслуг,
    |	РасшифровкаНачислений.СубконтоСчетаУслуг1,
    |	РасшифровкаНачислений.СубконтоСчетаУслуг2,
    |	РасшифровкаНачислений.СубконтоСчетаУслуг3
    |ПОМЕСТИТЬ врРасшифровка
    |ИЗ
    |	Документ.КВП_ОтражениеНачисленийВРеглУчете.РасшифровкаНачислений КАК РасшифровкаНачислений
    |ГДЕ
    |	РасшифровкаНачислений.Ссылка = &Ссылка
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
    |	КВП_ОтражениеНачисленийВРеглУчетеКонтрагенты.Контрагент,
    |	КВП_ОтражениеНачисленийВРеглУчетеКонтрагенты.ДоговорКонтрагента,
    |	КВП_ОтражениеНачисленийВРеглУчетеКонтрагенты.НоменклатурнаяГруппа,
    |	КВП_ОтражениеНачисленийВРеглУчетеКонтрагенты.ЭтоКапРемонт КАК ЭтоКапРемонт,
    |	КВП_ОтражениеНачисленийВРеглУчетеКонтрагенты.ЭтоЛьгота,
    |	КВП_ОтражениеНачисленийВРеглУчетеКонтрагенты.ЭтоПени,
    |	КВП_ОтражениеНачисленийВРеглУчетеКонтрагенты.ВариантПоставкиУслуг,
    |	КВП_ОтражениеНачисленийВРеглУчетеКонтрагенты.СчетУчетаРасчетов,
    |	КВП_ОтражениеНачисленийВРеглУчетеКонтрагенты.СчетУчетаАвансов,
    |	КВП_ОтражениеНачисленийВРеглУчетеКонтрагенты.Отражать
    |ПОМЕСТИТЬ врКонтрагенты
    |ИЗ
    |	Документ.КВП_ОтражениеНачисленийВРеглУчете.Контрагенты КАК КВП_ОтражениеНачисленийВРеглУчетеКонтрагенты
    |ГДЕ
    |	КВП_ОтражениеНачисленийВРеглУчетеКонтрагенты.Ссылка = &Ссылка
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	врКонтрагенты.Контрагент,
    |	врРасшифровка.ДоговорКонтрагента,
    |	врРасшифровка.НоменклатурнаяГруппа,
    #Вставка // Гарант+ Килипенко 23.10.2024 [F00229783] Отражение начислений в разрезе л/с ++
    |   врРасшифровка.ГП_ЛицевойСчет КАК ГП_ЛицевойСчет,
    #КонецВставки // Гарант+ Килипенко 23.10.2024 [F00229783] Отражение начислений в разрезе л/с --
    |	врРасшифровка.ЭтоКапРемонт КАК ЭтоКапРемонт,
    |	врРасшифровка.ЭтоЛьгота,
    |	врРасшифровка.ЭтоПени,
    |	врРасшифровка.ВариантПоставкиУслуг,
    |	врРасшифровка.ДоговорПоставщикаУслуг,
    |	врРасшифровка.Номенклатура,
    |	врРасшифровка.Тариф,
    |	врРасшифровка.Количество,
    |	врРасшифровка.СуммаОтражения,
    |	врРасшифровка.СчетУслуг,
    |	врРасшифровка.СубконтоСчетаУслуг1,
    |	врРасшифровка.СубконтоСчетаУслуг2,
    |	врРасшифровка.СубконтоСчетаУслуг3,
    |	врКонтрагенты.СчетУчетаРасчетов КАК СчетУчетаРасчетов,
    |	врКонтрагенты.СчетУчетаАвансов КАК СчетУчетаАвансов,
    |	врКонтрагенты.Отражать
    |ИЗ
    |	врРасшифровка КАК врРасшифровка
    |		ЛЕВОЕ СОЕДИНЕНИЕ врКонтрагенты КАК врКонтрагенты
    |		ПО врРасшифровка.ДоговорКонтрагента = врКонтрагенты.ДоговорКонтрагента
    |			И врРасшифровка.НоменклатурнаяГруппа = врКонтрагенты.НоменклатурнаяГруппа
    |			И врРасшифровка.ЭтоКапРемонт = врКонтрагенты.ЭтоКапРемонт
    |			И врРасшифровка.ЭтоЛьгота = врКонтрагенты.ЭтоЛьгота
    |			И врРасшифровка.ЭтоПени = врКонтрагенты.ЭтоПени
    |			И врРасшифровка.ВариантПоставкиУслуг = врКонтрагенты.ВариантПоставкиУслуг";

    Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
    #Вставка // Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп ++

    // Для обработки ситуации когда начисления формируется без учета Номенклатурных Групп
    Запрос.Текст = СтрЗаменить(Запрос.Текст,
        "И врРасшифровка.НоменклатурнаяГруппа = врКонтрагенты.НоменклатурнаяГруппа",
        "И ВЫБОР
        |   КОГДА врКонтрагенты.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка) ТОГДА ИСТИНА
        |   ИНАЧЕ врРасшифровка.НоменклатурнаяГруппа = врКонтрагенты.НоменклатурнаяГруппа
        |КОНЕЦ");

    #КонецВставки // Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп --

    // Получим таблицу начислений и поместим ее в структуру параметров.
    ПараметрыПроведения.Вставить("ТаблицаНачислений", Запрос.Выполнить().Выгрузить());

    Возврат ПараметрыПроведения;

КонецФункции

#КонецОбласти // ПереопределениеСтандартныхФункций
// Гарант+ Килипенко 17.10.2024 [F00229783] Группировка отражения начислений в рег. учете без ном. групп ++

// Гарант+ Килипенко 29.10.2024 [F00230213] Печать комплекта документов реализации ++
#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  ДокументОтражение - ДокументСсылка.КВП_ОтражениеНачисленийВРеглУчете
Функция ГП_СформироватьДокументАктаОбОказанииУслуг(Знач ДокументОтражение) Экспорт
    РезультатФункции = Новый Структура(
            "Успех, Наименование, МассивДокументов, ТаблицаСведенийАктаОбОказанииУслуг"
            + ", ПараметрыПечати, ПараметрыВывода, ТабличныйДокумент", Истина, "Акт об оказании услуг");

    УстановитьПривилегированныйРежим(Истина);

    РезультатФункции.МассивДокументов = ГП_ПолучитьМассивДокументовРеализации(ДокументОтражение);

    РезультатФункции.ТаблицаСведенийАктаОбОказанииУслуг =
        Документы.РеализацияТоваровУслуг.ПолучитьТаблицуСведенийАктаОбОказанииУслуг(РезультатФункции.МассивДокументов);

    РезультатФункции.ПараметрыПечати = Новый Структура;
    РезультатФункции.ПараметрыПечати.Вставить("ВидДокументаПечати", "РеализацияТоваровУслуг");
    РезультатФункции.ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Акт");
    РезультатФункции.ПараметрыПечати.Вставить("ИмяМакетаПечати", "Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт");

    РезультатФункции.ПараметрыВывода = Новый Структура;
    РезультатФункции.ПараметрыВывода.Вставить("ФормироватьЭД", Истина);

    РезультатФункции.ТабличныйДокумент = ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(
            РезультатФункции.ТаблицаСведенийАктаОбОказанииУслуг,
            Новый СписокЗначений,
            РезультатФункции.ПараметрыПечати);

    УправлениеПечатью.УбратьПодписьИПечать(РезультатФункции.ТабличныйДокумент);

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  ДокументОтражение - ДокументСсылка.КВП_ОтражениеНачисленийВРеглУчете
Функция ГП_СформироватьДокументСчетаНаОплату(Знач ДокументОтражение) Экспорт
    РезультатФункции = Новый Структура(
            "Успех, Наименование, МассивДокументов, ТаблицаСведенийСчетНаОплату"
            + ", ПараметрыПечати, ПараметрыВывода, ТабличныйДокумент", Истина, "Счет на оплату");

    УстановитьПривилегированныйРежим(Истина);

    РезультатФункции.МассивДокументов = ГП_ПолучитьМассивСчетовНаОплату(ДокументОтражение);

    РезультатФункции.ТаблицаСведенийСчетНаОплату =
        Документы.СчетНаОплатуПокупателю.ПолучитьТаблицуСведенийСчетаНаОплату(РезультатФункции.МассивДокументов);

    РезультатФункции.ПараметрыПечати = Новый Структура;
    РезультатФункции.ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПокупателя_СчетЗаказ");
    РезультатФункции.ПараметрыПечати.Вставить("ИмяМакетаПечати", "ОбщийМакет.ПФ_MXL_СчетЗаказ");

    РезультатФункции.ПараметрыВывода = Новый Структура;
    РезультатФункции.ПараметрыВывода.Вставить("ФормироватьЭД", Истина);

    РезультатФункции.ТабличныйДокумент = ПечатьТорговыхДокументов.ПечатьСчетаНаОплату(
            РезультатФункции.ТаблицаСведенийСчетНаОплату,
            Новый СписокЗначений,
            РезультатФункции.ПараметрыПечати);

    УправлениеПечатью.УбратьПодписьИПечать(РезультатФункции.ТабличныйДокумент);

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  ДокументОтражение - ДокументСсылка.КВП_ОтражениеНачисленийВРеглУчете
//  ИмяМакета - Строка
Функция ГП_СформироватьДокументСчетФактураВыданный(Знач ДокументОтражение, Знач ИмяМакета = Неопределено) Экспорт
    РезультатФункции = Новый Структура(
            "Успех, Наименование, МассивДокументов, СчетаФактуры, СписокМакетов, ДокументыБезСчетовФактур"
            + ", ПараметрыПечати, ПараметрыВывода, ТабличныйДокумент", Истина, "Счет-фактура (выданный)");

    ИмяМакета = ?(ИмяМакета = Неопределено, "СчетФактура1096", ИмяМакета);

    УстановитьПривилегированныйРежим(Истина);

    РезультатФункции.МассивДокументов = ПолучитьМассивДокументовСчетФактураВыданный(ДокументОтражение);

    РезультатФункции.ПараметрыПечати = Новый Структура;

    // Получение стандартных настроек печати счетов-фактур.
    НастройкиПечати = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьНастройкиПечатиСчетовФактур(РезультатФункции.МассивДокументов);

    РезультатФункции.СчетаФактуры = НастройкиПечати.СчетаФактуры;
    РезультатФункции.ДокументыБезСчетовФактур = НастройкиПечати.ДокументыБезСчетовФактур;
    РезультатФункции.СписокМакетов = НастройкиПечати.СписокМакетов;

    РезультатФункции.ПараметрыПечати = Новый Структура;

    ПорядокПримененияФормСФ =
        УчетНДСПереопределяемый.СоответствиеВерсийПостановленияФормамСчетовФактур();
    ТекстЗапросаПечатьСчетовФактур = Документы.СчетФактураВыданный.ТекстЗапросаПечатьСчетовФактур(ПорядокПримененияФормСФ[ИмяМакета]);

    РезультатФункции.ПараметрыВывода = Новый Структура;
    // РезультатФункции.ПараметрыВывода.Вставить("ФормироватьЭД", Истина);

    Если ИмяМакета = "СчетФактура1096" ИЛИ РезультатФункции.СписокМакетов = "СчетФактура1096" Тогда
        РезультатФункции.ТабличныйДокумент = УчетНДС.ПечатьСчетовФактур1096(
                РезультатФункции.СчетаФактуры,
                Новый СписокЗначений,
                ТекстЗапросаПечатьСчетовФактур,
                РезультатФункции.ПараметрыПечати,
                РезультатФункции.ПараметрыВывода);  
    Иначе
        РезультатФункции.ТабличныйДокумент = УчетНДС.ПечатьСчетовФактур534(
                РезультатФункции.СчетаФактуры,
                Новый СписокЗначений,
                ТекстЗапросаПечатьСчетовФактур,
                РезультатФункции.ПараметрыПечати,
                РезультатФункции.ПараметрыВывода);   
    КонецЕсли;

    УправлениеПечатью.УбратьПодписьИПечать(РезультатФункции.ТабличныйДокумент);

    // По документам, которые не могут иметь счетов-фактур, сообщаем об ошибке.
    Для Каждого ДокументБезСчетаФактуры Из РезультатФункции.ДокументыБезСчетовФактур Цикл
        ТекстСообщения = НСтр("ru='По документу %1 счет-фактура не выписан.'");
        ТекстСообщения = УПЖКХ_ТиповыеМетодыКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ДокументБезСчетаФактуры);
        УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю(ТекстСообщения);
    КонецЦикла;

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
// Гарант+ Килипенко 29.10.2024 [F00230213] Печать комплекта документов реализации --

// Гарант+ Килипенко 23.09.2024 [F00228749] Формирование счета на оплату ++
#Область СлужебныеПроцедурыИФункции

&После ("ДобавитьКомандыПечати")
Процедура ГП_ДобавитьКомандыПечати(КомандыПечати)
    КомандаПечати = КомандыПечати.Добавить();
    КомандаПечати.МенеджерПечати = "ОбщийМодуль.ГП_ОтражениеВРегУчетеСлужебный";
    КомандаПечати.Идентификатор = "СчетЗаказ";
    КомандаПечати.Представление = НСтр("ru = 'Счет на оплату'");
    КомандаПечати.Обработчик = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
    КомандаПечати.Порядок = 10;
КонецПроцедуры

// Параметры:
//  ДокументОтражение - ДокументСсылка.КВП_ОтражениеНачисленийВРеглУчете
// Возвращаемое значение:
//  - Массив из ДокументСсылка.РеализацияТоваровУслуг
Функция ГП_ПолучитьМассивДокументовРеализации(Знач ДокументОтражение)
    Возврат Документы.КВП_ОтражениеНачисленийВРеглУчете.ПолучитьМассивДокументовРеализацияТоваровИУслуг(ДокументОтражение);
КонецФункции

// Параметры:
//  ДокументОтражение - ДокументСсылка.КВП_ОтражениеНачисленийВРеглУчете
// Возвращаемое значение:
//  - Массив
Функция ГП_ПолучитьМассивДокументовСчетФактурВыданный(Знач ДокументОтражение)
    Возврат Документы.КВП_ОтражениеНачисленийВРеглУчете.ПолучитьМассивДокументовСчетФактураВыданный(ДокументОтражение);
КонецФункции

// Параметры:
//  ДокументОтражение - ДокументСсылка.КВП_ОтражениеНачисленийВРеглУчете
// Возвращаемое значение:
//  - Массив
Функция ГП_ПолучитьМассивСчетовНаОплату(Знач ДокументОтражение)
    Возврат ГП_ОтражениеВРегУчетеСлужебный.ПолучитьМассивСчетовНаОплатуДокументаОтражения(ДокументОтражение);
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 23.09.2024 [F00228749] Формирование счета на оплату ++
