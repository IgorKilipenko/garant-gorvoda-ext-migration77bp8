#Область ОписаниеПеременных

&НаСервере
Перем ОбъектОтчета;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АдресСтруктурыОтчета") Тогда
		АдресСтруктурыОтчета = Параметры.АдресСтруктурыОтчета;
		ДанныеОСтруктуреОтчета = ПолучитьИзВременногоХранилища(АдресСтруктурыОтчета);
		ДеревоСтруктурыОтчета = ДанныеОСтруктуреОтчета.СтруктураОтчета;
		ДеревоСтруктурыОтчета.Колонки.Добавить("Выбран");
		ЗначениеВРеквизитФормы(ДеревоСтруктурыОтчета, "СтруктураОтчета");
		МассивТабличныхДокументов.ЗагрузитьЗначения(ДанныеОСтруктуреОтчета.МассивТабличныхДокументов);
	КонецЕсли;
	
	Если Параметры.Свойство("ОтчетТехнологияИлиНаука") Тогда
		Если Параметры.Свойство("ИмяОтчета") Тогда
			Элементы.ФормаСформировать.Видимость = Истина;
			ИмяОтчета = Параметры.ИмяОтчета;
			ДобавитьРеквизиты(ИмяОтчета);
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаголовокОтчета") Тогда
		ЭтотОбъект.Заголовок = Параметры.ЗаголовокОтчета;
	КонецЕсли;
	
	Если Параметры.Свойство("Закладки") Тогда
		РежимОтображения = "Закладки";
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
		Элементы.СтруктураОтчета.Видимость = Ложь;
		Элементы.ГруппаСтраница.Видимость = Ложь;
		Для каждого ТекЭлемент Из ДеревоСтруктурыОтчета.Строки Цикл
			ДобавитьСтраницу(Строка(ТекЭлемент.ПорядковыйНомер), ТекЭлемент.ИмяСтруктуры);		
		КонецЦикла;
		Если ДеревоСтруктурыОтчета.Строки.Количество() > 0 Тогда
			ТекТабличныйДокумент = МассивТабличныхДокументов[0].Значение;
		КонецЕсли;
		Элементы.ФормаПечатьВсе.Видимость = Истина;
	Иначе
		РежимОтображения = "Дерево";
		Элементы.ФормаПечатьВсе.Видимость = Ложь;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ИндСтруктуры = Число(СтрЗаменить(ТекущаяСтраница.Имя, "Страница", ""));
	ТекТабличныйДокумент = МассивТабличныхДокументов[ИндСтруктуры].Значение;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСтруктураОтчета

&НаКлиенте
Процедура СтруктураОтчетаПриАктивизацииСтроки(Элемент)
	АктивизироватьСтроку();
КонецПроцедуры

&НаКлиенте
Процедура СтруктураОтчетаВыбранПриИзменении(Элемент)
	ТекСтрока = СтруктураОтчета.НайтиПоИдентификатору(Элементы.СтруктураОтчета.ТекущаяСтрока);
	ОтметитьЭлементы(ТекСтрока, ТекСтрока.Выбран);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Печать(Команда)
	Если РежимОтображения = "Закладки" Тогда
		ТекТабличныйДокумент.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	Иначе
		ОбщаяПечатнаяФорма = ПолучитьОбщуюПечатнуюФорму();
		Если ОбщаяПечатнаяФорма = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран ни один лист для печати!");
		Иначе
			ОбщаяПечатнаяФорма.Показать();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПечататьВсе(Команда)
	Если РежимОтображения = "Закладки" Тогда
		Для Каждого ЭлементСпискаЗначений Из МассивТабличныхДокументов Цикл
			ТабличныйДокумент = ЭлементСпискаЗначений.Значение;
			ТабличныйДокумент.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьОтчет();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	ОтметитьЭлементы(СтруктураОтчета, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	ОтметитьЭлементы(СтруктураОтчета, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВозможностьРедактирования(Команда)
	ВключитьВозможностьРедактирования = Не Элементы.ФормаВключитьВозможностьРедактирования.Пометка;
	Элементы.ФормаВключитьВозможностьРедактирования.Пометка = ВключитьВозможностьРедактирования;
	ИзменитьДоступностьРедактированияПолейТабличногоДокумента(Элементы.ГруппаСтраницы, ВключитьВозможностьРедактирования);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьРеквизиты(ИмяОтчета)
	Реквизиты = Метаданные.Отчеты[ИмяОтчета].Реквизиты;
	Для Каждого Реквизит Из Реквизиты Цикл
		НовыйРеквизит = ЭтотОбъект.Элементы.Вставить(Реквизит.Имя, Тип("ПолеФормы"), ЭтотОбъект, Элементы.Группа1);
		НовыйРеквизит.ПутьКДанным = ИмяОтчета + "." + Реквизит.Имя;
		НовыйРеквизит.Вид = ВидПоляФормы.ПолеВвода;
		НовыйРеквизит.ВыделятьОтрицательные = Реквизит.ВыделятьОтрицательные;
		НовыйРеквизит.Подсказка = Реквизит.Подсказка;
		НовыйРеквизит.АвтоОтметкаНезаполненного = (Реквизит.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку);
		НовыйРеквизит.Формат = Реквизит.ФорматРедактирования; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура АктивизироватьСтроку()
	Если Элементы.СтруктураОтчета.ТекущиеДанные <> Неопределено Тогда
		ИндСтруктуры = Элементы.СтруктураОтчета.ТекущиеДанные.ПорядковыйНомер;
		ТекТабличныйДокумент = МассивТабличныхДокументов[ИндСтруктуры].Значение;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьЭлементы(КореньДерева, Значение)
	ЭлементыДерева = КореньДерева.ПолучитьЭлементы();
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
		ЭлементДерева.Выбран = Значение;	
		ОтметитьЭлементы(ЭлементДерева, Значение);
	КонецЦикла;				
КонецПроцедуры

&НаСервере
Функция ПолучитьОбщуюПечатнуюФорму()
	РезультатФункции = Неопределено;	
	СтруктураОтчетаЗначение = РеквизитФормыВЗначение("СтруктураОтчета");	
	ВыбранныеЛисты = ПолучитьВыбранныеЛисты(СтруктураОтчетаЗначение);
	Если ВыбранныеЛисты.Количество() > 0 Тогда
		РезультатФункции = Новый ТабличныйДокумент;
		Для Каждого ТабДок Из ВыбранныеЛисты Цикл   
			Отбор = Новый Структура();
			ПечатнаяФорма = МассивТабличныхДокументов[ТабДок.ПорядковыйНомер].Значение;
			Если ПечатнаяФорма <> Неопределено Тогда
				СоздатьФорматСтрокОбласти(ПечатнаяФорма);
				РезультатФункции.Вывести(ПечатнаяФорма);
				РезультатФункции.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
		КонецЦикла;
		РезультатФункции.ОтображатьСетку = Ложь;	
		РезультатФункции.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	КонецЕсли;
	Возврат РезультатФункции;	

КонецФункции

&НаСервере
Процедура СоздатьФорматСтрокОбласти(ТабличныйДокумент)
	Область = ТабличныйДокумент.Область(1, , ТабличныйДокумент.ВысотаТаблицы, );
	Область.СоздатьФорматСтрок();	
КонецПроцедуры

&НаСервере
Функция ПолучитьВыбранныеЛисты(Родитель)
	РезультатФункции = Новый Массив;
	Для Каждого ТекЭлемент Из Родитель.Строки Цикл 
		ВыбранныеЛистыПотомка = ПолучитьВыбранныеЛисты(ТекЭлемент);
		Если ВыбранныеЛистыПотомка.Количество() = 0 Тогда
			Если ТекЭлемент.Выбран Тогда
				РезультатФункции.Добавить(ТекЭлемент);	
			КонецЕсли;
		Иначе 
			Для Каждого ЛистПотомка Из ВыбранныеЛистыПотомка Цикл 
				РезультатФункции.Добавить(ЛистПотомка);
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;
	
	Возврат РезультатФункции;
КонецФункции

&НаСервере
Процедура СформироватьОтчет()
	Если ИмяОтчета <> "" И РеквизитыЗаполнены() Тогда
		Отчет = РеквизитФормыВЗначение(ИмяОтчета);
		ДанныеОСтруктуреОтчета = Отчет.ПолучитьПечатнуюФормуОтчета();
		ДеревоСтруктурыОтчета = ДанныеОСтруктуреОтчета.СтруктураОтчета;
		ДеревоСтруктурыОтчета.Колонки.Добавить("Выбран");
		ЗначениеВРеквизитФормы(ДеревоСтруктурыОтчета, "СтруктураОтчета");
		МассивТабличныхДокументов.ЗагрузитьЗначения(ДанныеОСтруктуреОтчета.МассивТабличныхДокументов);
		ЭлементыСтруктуры = СтруктураОтчета.ПолучитьЭлементы();
		Если ЭлементыСтруктуры.Количество() > 0 Тогда
			Элементы.СтруктураОтчета.ТекущаяСтрока = ЭлементыСтруктуры[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция РеквизитыЗаполнены()
	РезультатФункции = Истина;
	Отчет = РеквизитФормыВЗначение(ИмяОтчета);
	Реквизиты = Отчет.Метаданные().Реквизиты;
	Для Каждого Реквизит Из Реквизиты Цикл
		Если Реквизит.ПроверкаЗаполнения = ПроверкаЗаполнения.ВыдаватьОшибку И 
				Не ЗначениеЗаполнено(Отчет[Реквизит.Имя]) Тогда
			РезультатФункции = Ложь;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено значение """ + Реквизит.Синоним + """");
		КонецЕсли;
	КонецЦикла;	
	Возврат РезультатФункции;
КонецФункции

&НаСервере
Процедура ДобавитьСтраницу(Имя, Заголовок)
	ИмяСтраницы = "Страница" + Имя;
	ЭлементФормыСтраница = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Элементы.ГруппаСтраницы);
	ЭлементФормыСтраница.Вид = ВидГруппыФормы.Страница;
	ЭлементФормыСтраница.Заголовок = Заголовок;
	ЭлементФормыПолеТабДокумента = Элементы.Добавить("ТабДок" + ИмяСтраницы, Тип("ПолеФормы"), Элементы[ИмяСтраницы]);
	ЭлементФормыПолеТабДокумента.Вид = ВидПоляФормы.ПолеТабличногоДокумента;
	ЭлементФормыПолеТабДокумента.ПутьКДанным = "ТекТабличныйДокумент";
	ЭлементФормыПолеТабДокумента.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормыПолеТабДокумента.ОтображатьСетку = Ложь;
	ЭлементФормыПолеТабДокумента.Редактирование = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДоступностьРедактированияПолейТабличногоДокумента(Элемент, ВключитьВозможностьРедактирования)
	Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
		Для Каждого ТекЭлемент Из Элемент.ПодчиненныеЭлементы Цикл
			ИзменитьДоступностьРедактированияПолейТабличногоДокумента(ТекЭлемент, ВключитьВозможностьРедактирования);
		КонецЦикла;
	ИначеЕсли ТипЗнч(Элемент) = Тип("ПолеФормы") Тогда
		Если Элемент.Вид = ВидПоляФормы.ПолеТабличногоДокумента Тогда
			Элемент.Редактирование = ВключитьВозможностьРедактирования;
			Элемент.ОтображатьЗаголовки = ВключитьВозможностьРедактирования;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
