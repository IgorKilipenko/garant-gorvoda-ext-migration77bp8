
&НаСервере
&ИзменениеИКонтроль("ЗаполнениеТаблицы")
Процедура ГП_ЗаполнениеТаблицы()

    Запрос = Новый Запрос();

    Если Объект.ТипОбъекта = "Здания" Тогда

        ЗапросСОтбором = Новый Запрос;
        ЗапросСОтбором.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

        МассивВидовКонтактнойИнформации = Новый Массив;
        МассивВидовКонтактнойИнформации.Добавить(Справочники.ВидыКонтактнойИнформации.УПЖКХ_ПочтовыйАдресЗдания);

        МассивОбъектов = Неопределено;
        Если ЗначениеЗаполнено(ГруппаЗданий) Тогда
            Запрос = Новый Запрос;
            Запрос.Текст = 
            "ВЫБРАТЬ РАЗРЕШЕННЫЕ
            |	КВП_Здания.Ссылка
            |ИЗ
            |	Справочник.КВП_Здания КАК КВП_Здания
            |ГДЕ
            |	КВП_Здания.Ссылка В ИЕРАРХИИ(&ГруппаЗданий)";
            Запрос.УстановитьПараметр("ГруппаЗданий", ГруппаЗданий);
            ТЗЗданий = Запрос.Выполнить().Выгрузить();
            МассивОбъектов = ТЗЗданий.ВыгрузитьКолонку("Ссылка");
        КонецЕсли;

        // Помещает в менеджер временных таблиц запроса таблицу контактной информации "втКонтактнаяИнформация".
        УПЖКХ_ТиповыеМетодыСервер.СформироватьТаблицуКонтактнойИнформацииОбъектов(ЗапросСОтбором.МенеджерВременныхТаблиц, МассивВидовКонтактнойИнформации, МассивОбъектов);

        ЗапросСОтбором.Текст =
        "ВЫБРАТЬ
        |	втКонтактнаяИнформация.Объект,
        |	втКонтактнаяИнформация.Регион,
        |	втКонтактнаяИнформация.Город,
        |	втКонтактнаяИнформация.НаселенныйПункт,
        |	втКонтактнаяИнформация.Улица
        |ПОМЕСТИТЬ втКонтактнаяИнформацияСОтбором
        |ИЗ
        |	втКонтактнаяИнформация КАК втКонтактнаяИнформация";

        // Фильтр по адресу.
        ТекстФильтраАдреса = "";
        ЕстьЗаполненныеПоля = Не (ПустаяСтрока(Регион) И ПустаяСтрока(Город) И ПустаяСтрока(НаселенныйПункт) И ПустаяСтрока(Улица));

        Если ЕстьЗаполненныеПоля Тогда
            ТекстФильтраАдреса = Символы.ПС + "ГДЕ";

            Если Не ПустаяСтрока(Регион) Тогда
                ТекстФильтраАдреса = ТекстФильтраАдреса + " втКонтактнаяИнформация.Регион ПОДОБНО ""%" + СокрЛП(Регион) + "% "" И";
            КонецЕсли;
            Если Не ПустаяСтрока(Город) Тогда
                ТекстФильтраАдреса = ТекстФильтраАдреса + " втКонтактнаяИнформация.Город ПОДОБНО ""%" + СокрЛП(Город) + "%"" И";
            КонецЕсли;
            Если Не ПустаяСтрока(НаселенныйПункт) Тогда
                ТекстФильтраАдреса = ТекстФильтраАдреса + " втКонтактнаяИнформация.НаселенныйПункт ПОДОБНО ""%" + СокрЛП(НаселенныйПункт) + "%"" И";
            КонецЕсли;
            Если Не ПустаяСтрока(Улица) Тогда
                ТекстФильтраАдреса = ТекстФильтраАдреса + " втКонтактнаяИнформация.Улица ПОДОБНО ""%" + СокрЛП(Улица) + "%""";
            КонецЕсли;

            Если Прав(ТекстФильтраАдреса, 1) = "И" Тогда
                ТекстФильтраАдреса = Лев(ТекстФильтраАдреса, СтрДлина(ТекстФильтраАдреса) - 2);
            КонецЕсли;
        КонецЕсли;

        ЗапросСОтбором.Текст = ЗапросСОтбором.Текст + ТекстФильтраАдреса;

        ЗапросСОтбором.Выполнить();

        Запрос.МенеджерВременныхТаблиц = ЗапросСОтбором.МенеджерВременныхТаблиц;

        Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ИСТИНА КАК Использовать,
        |	втКонтактнаяИнформацияСОтбором.Объект КАК Объект
        |ИЗ
        |	Справочник.КВП_Здания КАК КВП_Здания
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКонтактнаяИнформацияСОтбором КАК втКонтактнаяИнформацияСОтбором
        |		ПО КВП_Здания.Ссылка = втКонтактнаяИнформацияСОтбором.Объект";

        // Фильтр по ответственным лицам.
        Если ЗначениеЗаполнено(ВидМастера) И ЗначениеЗаполнено(Мастер) Тогда
            Запрос.Текст = Запрос.Текст + "
            |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КВП_ОбслуживающиеМастера.СрезПоследних(
            |											, 
            |											ВидМастера = &ВидМастера И Мастер = &Мастер) КАК КВП_ОбслуживающиеМастераСрезПоследних
            |		ПО КВП_Здания.Ссылка = КВП_ОбслуживающиеМастераСрезПоследних.Объект";
            Запрос.УстановитьПараметр("ВидМастера", ВидМастера);
            Запрос.УстановитьПараметр("Мастер",     Мастер);
        КонецЕсли;

        // Фильтр по характеристикам.
        ТекСтрока = 1;
        Для Каждого СтрокаХарактеристики Из ТаблицаХарактеристик Цикл
            НомерСтроки = Формат(ТекСтрока, "ЧГ=0");
            Запрос.Текст = Запрос.Текст + "
            |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения" + НомерСтроки + "
            |		ПО КВП_Здания.Ссылка = ДополнительныеСведения" + НомерСтроки + ".Объект
            |			И ДополнительныеСведения" + НомерСтроки + ".Свойство = &Свойство" + НомерСтроки + "
            |			И ДополнительныеСведения" + НомерСтроки + ".Значение = &Значение" + НомерСтроки;
            Запрос.УстановитьПараметр("Свойство" + НомерСтроки, СтрокаХарактеристики.Свойство);
            Запрос.УстановитьПараметр("Значение" + НомерСтроки, СтрокаХарактеристики.Значение);
            ТекСтрока = ТекСтрока + 1;
        КонецЦикла;

        Запрос.Текст = Запрос.Текст + "
        |
        |ГДЕ
        |		НЕ КВП_Здания.ПометкаУдаления
        |		И НЕ КВП_Здания.ТипСооружения = &ТипСооружения
        |		И НЕ КВП_Здания.ЭтоГруппа" + ?(ГруппаЗданий.Пустая(), "", "
        |		И Ссылка В ИЕРАРХИИ (&ГруппаЗданий)");

        Запрос.УстановитьПараметр("ГруппаЗданий", ГруппаЗданий);
        Запрос.УстановитьПараметр("ТипСооружения", Перечисления.УПЖКХ_ТипСооружения.Паркинг);

    ИначеЕсли Объект.ТипОбъекта = "Подъезды" Тогда

        ПоискПервКв = НомерПервойКвартиры;
        ПоискПослКв = НомерПоследнейКвартиры;

        ТекстФильтра = "ИСТИНА";
        Если Не ЗданиеПодъезда.Пустая() Тогда
            ТекстФильтра = ТекстФильтра + " И Владелец В ИЕРАРХИИ (&Владелец)";
        КонецЕсли;
        Если ЗначениеЗаполнено(ПоискПервКв) Тогда
            ТекстФильтра = ТекстФильтра + " И НомерПервойКвартиры = &НомерПервКв";
        КонецЕсли;
        Если ЗначениеЗаполнено(ПоискПослКв) Тогда
            ТекстФильтра = ТекстФильтра + " И НомерПоследнейКвартиры = &НомерПослКв";
        КонецЕсли;

        Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ИСТИНА КАК Использовать,
        |	Ссылка КАК Объект
        |ИЗ
        |	Справочник.КВП_Подъезды
        |ГДЕ
        |	" + ТекстФильтра + "";

        Запрос.УстановитьПараметр("Владелец",    ПолучитьЭлементыСправочникаПоГруппе(ЗданиеПодъезда));
        Запрос.УстановитьПараметр("НомерПервКв", ПоискПервКв);
        Запрос.УстановитьПараметр("НомерПослКв", ПоискПослКв);

    ИначеЕсли Объект.ТипОбъекта = "Квартиры" Тогда

        ПоискКоличество = КоличествоКомнат;
        ПоискЭтаж       = Этаж;

        ТекстФильтра = "ИСТИНА";
        Если Не ЗданияКвартиры.Пустая() Тогда
            ТекстФильтра = ТекстФильтра + " И Квартиры.Владелец В ИЕРАРХИИ (&Владелец)";
        КонецЕсли;
        Если ЗначениеЗаполнено(ТипПомещенияКвартиры) Тогда
            ТекстФильтра = ТекстФильтра + " И Квартиры.ВидПомещения.ТипПомещения = &ТипПомещения";
        КонецЕсли;
        Если ЗначениеЗаполнено(ПоискКоличество) Тогда
            ТекстФильтра = ТекстФильтра + " И Квартиры.КоличествоКомнат = &КоличествоКомнат";
        КонецЕсли;
        Если ЗначениеЗаполнено(ПоискЭтаж) Тогда
            ТекстФильтра = ТекстФильтра + " И Квартиры.Этаж " + ?(ПустаяСтрока(ВидСравнения), "=", ВидСравнения) + " &Этаж";
        КонецЕсли;

        ФильтрПоПриватизации = Ложь;
        Если      Приватизация = 1 Тогда
            ФильтрПоПриватизации = Истина;
            ТекстФильтра = ТекстФильтра + " И УПЖКХ_СобственностьНаПомещенияСрезПоследних.ВидСобственности = &Приватизация";
        ИначеЕсли Приватизация = 2 Тогда
            ФильтрПоПриватизации = Истина;
            ТекстФильтра = ТекстФильтра + " И УПЖКХ_СобственностьНаПомещенияСрезПоследних.ВидСобственности <> &Приватизация";
        КонецЕсли;

        Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ИСТИНА КАК Использовать,
        |	Квартиры.Ссылка КАК Объект
        |ИЗ
        |	Справочник.УПЖКХ_Помещения КАК Квартиры" + ?(ФильтрПоПриватизации, "
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УПЖКХ_СобственностьНаПомещения.СрезПоследних(&Дата,) 
        |			КАК УПЖКХ_СобственностьНаПомещенияСрезПоследних
        |		ПО Квартиры.Ссылка = УПЖКХ_СобственностьНаПомещенияСрезПоследних.Помещение", "") + "
        |ГДЕ
        |	" + ТекстФильтра + "";

        Запрос.УстановитьПараметр("Дата",             УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату());
        Запрос.УстановитьПараметр("Владелец",         ПолучитьЭлементыСправочникаПоГруппе(ЗданияКвартиры));
        Запрос.УстановитьПараметр("ТипПомещения",     ТипПомещенияКвартиры);
        Запрос.УстановитьПараметр("КоличествоКомнат", ПоискКоличество);
        Запрос.УстановитьПараметр("Этаж",             ПоискЭтаж);
        Запрос.УстановитьПараметр("Приватизация",     Перечисления.УПЖКХ_ВидыСобственности.Частная);

    ИначеЕсли Объект.ТипОбъекта = "ЛицевыеСчета" Тогда

        ФильтрЛС1 = "ИСТИНА";
        Если ЗначениеЗаполнено(ОбъектЛС) Тогда
            Если ТипЗнч(ОбъектЛС) = Тип("СправочникСсылка.КВП_Здания") Тогда
                ФильтрЛС1 = ФильтрЛС1 + " И ЛицевойСчет.Адрес.Владелец В ИЕРАРХИИ (&Здание)";
            ИначеЕсли ТипЗнч(ОбъектЛС) = Тип("СправочникСсылка.КВП_Подъезды") Тогда
                ФильтрЛС1 = ФильтрЛС1 + " И ЛицевойСчет.Адрес.Владелец = &Здание 
                | И ЛицевойСчет.Адрес.Код МЕЖДУ &НомерПервКв И &НомерПослКв";
            ИначеЕсли ТипЗнч(ОбъектЛС) = Тип("СправочникСсылка.КВП_ЛицевыеСчета") Тогда
                ФильтрЛС1 = ФильтрЛС1 + " И ЛицевойСчет В ИЕРАРХИИ (&ГрупаЛС)";
            КонецЕсли;
        КонецЕсли;

        ФильтрЛС2 = "ИСТИНА";
        Если ЗначениеЗаполнено(ОбъектЛС) Тогда
            Если ТипЗнч(ОбъектЛС) = Тип("СправочникСсылка.КВП_Здания") Тогда
                ФильтрЛС2 = ФильтрЛС2 + " И КВП_ЛицевыеСчета.ЛицевойСчет.Адрес.Владелец В ИЕРАРХИИ (&Здание)";
            ИначеЕсли ТипЗнч(ОбъектЛС) = Тип("СправочникСсылка.КВП_Подъезды") Тогда
                ФильтрЛС2 = ФильтрЛС2 + " И КВП_ЛицевыеСчета.ЛицевойСчет.Адрес.Владелец = &Здание 
                | И КВП_ЛицевыеСчета.ЛицевойСчет.Адрес.Код МЕЖДУ &НомерПервКв И &НомерПослКв";
            ИначеЕсли ТипЗнч(ОбъектЛС) = Тип("СправочникСсылка.КВП_ЛицевыеСчета") Тогда
                ФильтрЛС2 = ФильтрЛС2 + " И КВП_ЛицевыеСчета.ЛицевойСчет В ИЕРАРХИИ (&ГрупаЛС)";
            КонецЕсли;
        КонецЕсли;

        // 1. Определение основного запроса.
        // Отбираем список действующих лицевых счетов на период и помещаем его во временную таблицу.
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	ТаблицаДействующихЛС.ЛицевойСчет КАК ЛицевойСчет,
        |	ТаблицаДействующихЛС.ЛицевойСчет.Адрес КАК Квартира
        |ПОМЕСТИТЬ врТаблицаДействующихЛС
        |ИЗ
        |	(ВЫБРАТЬ
        |		КВП_ЛицевыеСчетаСрезПоследних.ЛицевойСчет КАК ЛицевойСчет
        |	ИЗ
        |		РегистрСведений.КВП_ЛицевыеСчета.СрезПоследних(&ДатаНач, &ФильтрЛС1) КАК КВП_ЛицевыеСчетаСрезПоследних
        |	ГДЕ
        |		КВП_ЛицевыеСчетаСрезПоследних.Действует = ИСТИНА
        |	
        |	ОБЪЕДИНИТЬ ВСЕ
        |	
        |	ВЫБРАТЬ
        |		КВП_ЛицевыеСчета.ЛицевойСчет
        |	ИЗ
        |		РегистрСведений.КВП_ЛицевыеСчета КАК КВП_ЛицевыеСчета
        |	ГДЕ
        |		&ФильтрЛС2
        |		И КВП_ЛицевыеСчета.Период > &ДатаНач
        |		И КВП_ЛицевыеСчета.Период < &ДатаКон
        |		И КВП_ЛицевыеСчета.Действует = ИСТИНА) КАК ТаблицаДействующихЛС
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ИСТИНА КАК Использовать,
        |	ТаблицаДействующихЛС.ЛицевойСчет КАК Объект,
        |	УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ОтветственныйВладелец КАК Владелец,
        |	ТаблицаДействующихЛС.Квартира
        |ИЗ
        |	врТаблицаДействующихЛС КАК ТаблицаДействующихЛС
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчета.СрезПоследних(
        |				,
        |				ЛицевойСчет В
        |					(ВЫБРАТЬ
        |						врТаблицаДействующихЛС.ЛицевойСчет
        |					ИЗ
        |						врТаблицаДействующихЛС КАК врТаблицаДействующихЛС)) КАК УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних
        |		ПО (УПЖКХ_ОтветственныйСобственникНанимательЛицевогоСчетаСрезПоследних.ЛицевойСчет = ТаблицаДействующихЛС.ЛицевойСчет)";

        // 2. В случае, если заполнена таблица "КонтрагентыЛС", добавляем отбор по контрагентам:
        // соединяем полученные данные со срезом регистра сведений УПЖКХ_СведенияДляВзаиморасчетовПоЛС по лицевому счету.
        Если КонтрагентыЛС.Количество() > 0 Тогда

            Запрос.Текст = Запрос.Текст + "
            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УПЖКХ_СведенияДляВзаиморасчетовПоЛС.СрезПоследних(
            |				&ДатаКон,
            |				ЛицевойСчет В
            |						(ВЫБРАТЬ
            |							ТаблицаДействующихЛС.ЛицевойСчет
            |						ИЗ
            |							врТаблицаДействующихЛС КАК ТаблицаДействующихЛС)
            |					И Контрагент В ИЕРАРХИИ (&СпКонтрагентов) И Организация = &Организация) КАК УПЖКХ_СведенияДляВзаиморасчетовПоЛС
            |		ПО ТаблицаДействующихЛС.ЛицевойСчет = УПЖКХ_СведенияДляВзаиморасчетовПоЛС.ЛицевойСчет";

        КонецЕсли;

        // 3. В случае, если заполнено поле "УслугаЛС", добавляем отбор по услуге:
        // соединяем полученные данные со срезом регистра сведений КВП_НазначенныеНачисления и,
        // в зависимости от выбора пользователя, выбираем лицевые счета, к которым привязана,
        // или не привязана указанная услуга.
        Если ЗначениеЗаполнено(УслугаЛС) Тогда

            Запрос.Текст = Запрос.Текст + 
            "		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
            |				врТаблицаДействующихЛС.ЛицевойСчет КАК Объект
            |			ИЗ
            |				врТаблицаДействующихЛС КАК врТаблицаДействующихЛС
            |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КВП_НазначенныеНачисления.СрезПоследних(
            |						&ДатаКон,
            |						Объект В
            |								(ВЫБРАТЬ
            |									ТаблицаДействующихЛС.ЛицевойСчет
            |								ИЗ
            |									врТаблицаДействующихЛС КАК ТаблицаДействующихЛС)
            |							И Услуга В (&УслугаЛС)) КАК КВП_НазначенныеНачисленияСрезПоследних
            |				ПО врТаблицаДействующихЛС.ЛицевойСчет = КВП_НазначенныеНачисленияСрезПоследних.Объект
            |			ГДЕ
            |				ВЫБОР
            |					КОГДА &ОтборПоДействующимУслугамДляЛС
            |						ТОГДА КВП_НазначенныеНачисленияСрезПоследних.Действует
            |					ИНАЧЕ НЕ КВП_НазначенныеНачисленияСрезПоследних.Действует
            |							ИЛИ КВП_НазначенныеНачисленияСрезПоследних.Действует ЕСТЬ NULL 
            |				КОНЕЦ) КАК КВП_НазначенныеНачисленияСрезПоследних
            |		ПО ТаблицаДействующихЛС.ЛицевойСчет = КВП_НазначенныеНачисленияСрезПоследних.Объект";

            Запрос.УстановитьПараметр("УслугаЛС",                       УслугаЛС);
            Запрос.УстановитьПараметр("ОтборПоДействующимУслугамДляЛС", ?(ОтбиратьЛСГдеУслугаДействует = 1, Истина, Ложь));

        КонецЕсли;

        Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ФильтрЛС1", ФильтрЛС1);
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ФильтрЛС2", ФильтрЛС2);

        Объект.ДатаКон = ?(ЗначениеЗаполнено(КонПериодЛС), КонПериодЛС, КонецДня(УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату()));
        Объект.ДатаНач = ?(ЗначениеЗаполнено(НачПериодЛС), НачПериодЛС, НачалоМесяца(Объект.ДатаКон));

        Запрос.УстановитьПараметр("ДатаНач",     Объект.ДатаНач);
        Запрос.УстановитьПараметр("ДатаКон",     Объект.ДатаКон);
        Запрос.УстановитьПараметр("Организация", Объект.Организация);

        Если ТипЗнч(ОбъектЛС) = Тип("СправочникСсылка.КВП_Здания") Тогда

            Запрос.УстановитьПараметр("Здание",      ОбъектЛС);

        ИначеЕсли ТипЗнч(ОбъектЛС) = Тип("СправочникСсылка.КВП_Подъезды") Тогда

            Запрос.УстановитьПараметр("Здание",      ОбъектЛС.Владелец);
            Запрос.УстановитьПараметр("НомерПервКв", ОбъектЛС.НомерПервойКвартиры);
            Запрос.УстановитьПараметр("НомерПослКв", ОбъектЛС.НомерПоследнейКвартиры);

        ИначеЕсли ТипЗнч(ОбъектЛС) = Тип("СправочникСсылка.КВП_ЛицевыеСчета") Тогда

            Запрос.УстановитьПараметр("ГрупаЛС",      ОбъектЛС);

        КонецЕсли;

        СпКонтрагентов = КонтрагентыЛС.Выгрузить().ВыгрузитьКолонку("Контрагент");
        Запрос.УстановитьПараметр("СпКонтрагентов", СпКонтрагентов);

    ИначеЕсли Объект.ТипОбъекта = "Паркинги" Тогда

        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ИСТИНА КАК Использовать,
        |	Паркинг.Ссылка КАК Объект
        |ИЗ
        |	Справочник.КВП_Здания КАК Паркинг
        |ГДЕ
        |	Паркинг.ЭтоГруппа = ЛОЖЬ
        |	И Паркинг.ТипСооружения = &ТипСооружения
        |	И Паркинг.ПометкаУдаления = ЛОЖЬ" + ?(ГруппаПаркингов.Пустая(), "", "
        |	И Ссылка В ИЕРАРХИИ (&ГруппаПаркингов)");

        Запрос.УстановитьПараметр("ГруппаПаркингов", ГруппаПаркингов);
        Запрос.УстановитьПараметр("ТипСооружения", Перечисления.УПЖКХ_ТипСооружения.Паркинг);

    ИначеЕсли Объект.ТипОбъекта = "ПарковочныеМеста" Тогда

        ТекстФильтра = "ИСТИНА";
        ТекстФильтраКонтрагент = "ИСТИНА";
        Если ЗначениеЗаполнено(ВладелецПарковочногоМеста) Тогда
            ТекстФильтра = ТекстФильтра + " И ПарковочныеМеста.Владелец В ИЕРАРХИИ (&Владелец)";
        КонецЕсли;
        Если КонтрагентыПарковочныхМест.Количество() > 0 Тогда
            ТекстФильтраКонтрагент = ТекстФильтраКонтрагент
            + " И УПЖКХ_СведенияДляВзаиморасчетовПоЛС.Контрагент В ИЕРАРХИИ (&СпКонтрагентов)";
        КонецЕсли;

        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ПарковочныеМеста.Ссылка КАК Ссылка
        |ПОМЕСТИТЬ втПарковочныхМест
        |ИЗ
        |	Справочник.УПЖКХ_Помещения КАК ПарковочныеМеста
        |ГДЕ
        |	" + ТекстФильтра + "
        |	И (НЕ ПарковочныеМеста.ПометкаУдаления)
        |	И ПарковочныеМеста.ВидПомещения.ТипПомещения = &ТипПомещения
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ИСТИНА КАК Использовать,
        |	ПарковочныеМеста.Ссылка КАК Объект,
        |	УПЖКХ_СведенияДляВзаиморасчетовПоЛС.Контрагент
        |ИЗ
        |	втПарковочныхМест КАК ПарковочныеМеста
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КВП_ЛицевыеСчета.СрезПоследних(&ДатаКон, ) КАК ЛицевыеСчетаСрезПоследних
        |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УПЖКХ_СведенияДляВзаиморасчетовПоЛС.СрезПоследних(&ДатаКон, Организация = &Организация) 
        |				КАК УПЖКХ_СведенияДляВзаиморасчетовПоЛС
        |			ПО ЛицевыеСчетаСрезПоследних.ЛицевойСчет = УПЖКХ_СведенияДляВзаиморасчетовПоЛС.ЛицевойСчет
        |		ПО (ЛицевыеСчетаСрезПоследних.Объект = ПарковочныеМеста.Ссылка)
        |ГДЕ " + ТекстФильтраКонтрагент;

        Запрос.УстановитьПараметр("ДатаКон", ?(ЗначениеЗаполнено(Объект.ДатаКон),
        Объект.ДатаКон, 
        КонецДня(УПЖКХ_ТиповыеМетодыКлиентСервер.ПолучитьРабочуюДату())));
        Запрос.УстановитьПараметр("Владелец", ВладелецПарковочногоМеста);
        Запрос.УстановитьПараметр("Организация", Объект.Организация);
        Запрос.УстановитьПараметр("ТипПомещения", Перечисления.КВП_ТипыПомещений.Автоместо);
        СпКонтрагентов = КонтрагентыПарковочныхМест.Выгрузить().ВыгрузитьКолонку("Контрагент");
        Запрос.УстановитьПараметр("СпКонтрагентов", СпКонтрагентов);

    Иначе

        Запрос.Текст = "";

    КонецЕсли;

    Если ПустаяСтрока(Запрос.Текст) Тогда
        Возврат;
    КонецЕсли;

    РезультатЗапроса = Запрос.Выполнить();
    ПредварительныйОтбор = РезультатЗапроса.Выгрузить();
    #Вставка
    // ++ Гарант+ Килипенко 29.07.2024 [F00226463] Заполнение документа ввод показаний счетчика ++
    Если ТипЗнч(ОбъектЛС) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
        ПредварительныйОтбор = ГП_ОтфильтроватьЛичныеСчетаПоДоговоруНаСервере(
            ОбъектЛС, ПредварительныйОтбор, Объект.ДатаКон, Объект.Организация);
    КонецЕсли;
    // -- Гарант+ Килипенко 29.07.2024 [F00226463] Заполнение документа ввод показаний счетчика --
    #КонецВставки

    Если НЕ Объект.ПриостановкаДействияУслуги Тогда
        Объект.Отбор.Загрузить(ПредварительныйОтбор);
    Иначе
        Для Каждого ТекОбъект Из ПредварительныйОтбор Цикл

            ФлагНаличияУслуги = Ложь;
            Для Каждого ТекСтрока Из Объект.Услуга Цикл
                Если УслугаДействуетДляОбъекта(ТекОбъект.Объект, ТекСтрока.Значение, Объект.Организация, Объект.ДатаНач,
                    Объект.ДатаКон) Тогда
                    ФлагНаличияУслуги = Истина;
                    Прервать;
                КонецЕсли;
            КонецЦикла;

            Если НЕ ФлагНаличияУслуги Тогда
                Продолжить;
            КонецЕсли;

            НоваяСтрока = Объект.Отбор.Добавить();
            ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекОбъект);

        КонецЦикла;
    КонецЕсли;

КонецПроцедуры

// ++ Гарант+ Килипенко 29.07.2024 [F00226463] Заполнение документа ввод показаний счетчика ++
#Область СлужебныеПроцедурыИФункции

// Параметры:
//  ДоговорСсылка - СправочникСсылка.ДоговорыКонтрагентов
//  ТаблицаЛС - ТаблицаЗначений
//      * Использовать - Булево
//      * Объект - СправочникСсылка.КВП_ЛицевыеСчета
//      * Владелец - СправочникСсылка.Контрагенты
//      * Квартира - СправочникСсылка.УПЖКХ_Помещения
//  ДатаАктуальности - Дата
//  ОрганизацияСсылка - СправочникСсылка.Организации
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Использовать - Булево
//      * Объект - СправочникСсылка.КВП_ЛицевыеСчета
//      * Владелец - СправочникСсылка.Контрагенты
//      * Квартира - СправочникСсылка.УПЖКХ_Помещения
&НаСервереБезКонтекста
Функция ГП_ОтфильтроватьЛичныеСчетаПоДоговоруНаСервере(Знач ДоговорСсылка, Знач ТаблицаЛС, Знач ДатаАктуальности, Знач ОрганизацияСсылка)
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |   ТаблицаЛицевыхСчетов.Использовать КАК Использовать,
        |   ТаблицаЛицевыхСчетов.Объект КАК Объект,
        |   ТаблицаЛицевыхСчетов.Владелец КАК Владелец,
        |   ТаблицаЛицевыхСчетов.Квартира КАК Квартира
        |ПОМЕСТИТЬ ВТ_ТаблицаЛицевыхСчетов
        |ИЗ
        |   &ТаблицаЛицевыхСчетов КАК ТаблицаЛицевыхСчетов
        |;
        |
        |//////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   СведенияДляВзаиморасчетовПоЛССрезПоследних.ЛицевойСчет КАК ЛицевойСчет,
        |   СведенияДляВзаиморасчетовПоЛССрезПоследних.Договор КАК Договор
        |ПОМЕСТИТЬ ВТ_ДоговорыЛицевыхСчетов
        |ИЗ
        |   РегистрСведений.УПЖКХ_СведенияДляВзаиморасчетовПоЛС.СрезПоследних(&ДатаАктуальности,
        |       ЛицевойСчет В (ВЫБРАТЬ ТаблицаЛицевыхСчетов.Объект КАК ЛицевойСчет ИЗ ВТ_ТаблицаЛицевыхСчетов КАК ТаблицаЛицевыхСчетов)
        |           И Договор = &Договор И Организация = &Организация) КАК СведенияДляВзаиморасчетовПоЛССрезПоследних
        |;
        |
        |//////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ВТ_ТаблицаЛицевыхСчетов.Использовать КАК Использовать,
        |   ВТ_ТаблицаЛицевыхСчетов.Объект КАК Объект,
        |   ВТ_ТаблицаЛицевыхСчетов.Владелец КАК Владелец,
        |   ВТ_ТаблицаЛицевыхСчетов.Квартира КАК Квартира
        |ИЗ
        |   ВТ_ТаблицаЛицевыхСчетов КАК ВТ_ТаблицаЛицевыхСчетов
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДоговорыЛицевыхСчетов КАК ВТ_ДоговорыЛицевыхСчетов
        |       ПО ВТ_ТаблицаЛицевыхСчетов.Объект = ВТ_ДоговорыЛицевыхСчетов.ЛицевойСчет
        |";

    Запрос.УстановитьПараметр("ТаблицаЛицевыхСчетов", ТаблицаЛС);
    Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
    Запрос.УстановитьПараметр("Договор", ДоговорСсылка);
    Запрос.УстановитьПараметр("Организация", ОрганизацияСсылка);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// -- Гарант+ Килипенко 29.07.2024 [F00226463] Заполнение документа ввод показаний счетчика --
