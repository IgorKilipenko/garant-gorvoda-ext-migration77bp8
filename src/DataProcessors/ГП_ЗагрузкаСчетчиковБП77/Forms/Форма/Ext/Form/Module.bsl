// Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики ++
#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

&НаКлиенте
Перем СписокДоступныхВидовУслуг;

#КонецОбласти // ОписаниеПеременных
// Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики --

// Гарант+ Килипенко 22.07.2024 [F00226285] заполнение назначения услуг ++
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // Установка значений по умолчанию настроек формы
    ИнициализацияЭлементовНастроекФормы();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы
// Гарант+ Килипенко 22.07.2024 [F00226285] заполнение назначения услуг --

// Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики ++
#Область ОбработчикиКомандФормы

// Выполняет открытие файла для загрузки данных БП77
&НаКлиенте
Процедура ОткрытьФайлДляЧтения(Команда)
    ПараметрыЗагрузкиФайла = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
    ПараметрыЗагрузкиФайла.Диалог.Заголовок = НСтр("ru = 'Выберите файл XML для загрузки счетчиков'");
    ПараметрыЗагрузкиФайла.Диалог.Фильтр = НСтр("ru = 'Файлы XML (*.xml)|*.xml'");
    ПараметрыЗагрузкиФайла.ИдентификаторФормы = ЭтотОбъект.УникальныйИдентификатор;
    ФайловаяСистемаКлиент.ЗагрузитьФайлы(Новый ОписаниеОповещения("ЗагрузкаФайлаЗавершение", ЭтотОбъект), ПараметрыЗагрузкиФайла);
КонецПроцедуры

// Выполняет загрузку данных счетчиков в регистр ГП_СчетчикиБП77
&НаКлиенте
Асинх Процедура ЗагрузитьСчетчики(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Данные счетчиков будут загружены (обновлены) в регистр Счетчики БП 7.7.
            |Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    ВыполнитьОперациюЗагрузкиДанныхСчетчиков(ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение);
КонецПроцедуры

// Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика ++
//
// Выполняет загрузку показаний счетчиков из файла xml в регистр сведений Показания счетчиков БП 7.7
&НаКлиенте
Асинх Процедура ЗагрузитьПоказанияСчетчиков(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Команда выполнит запись значений показаний счетчиков в регистр ""Показания счетчиков БП 7.7"".
            |Существующие записи регистра будут перезаписаны. Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    ВыполнитьОперациюЗагрузкиДанныхПоказанийСчетчиков(ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение);
КонецПроцедуры // Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика --

// Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика ++
//
// Устарела. Требует рефакторинг. В перспективе следует объединить с командой ЗагрузитьПоказанияСчетчиков
//
// Выполняет загрузку значений переодических реквизитов: [Использовать, ЗначенияПоказаний] счетчиков
&НаКлиенте
Асинх Процедура ЗагрузитьИсториюСостоянийСчетчиков(Команда)
    РезультатСогласия = Ждать СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(
            "Данные счетчиков будут загружены (обновлены) в регистр Счетчики БП 7.7.");
    Если РезультатСогласия = Ложь Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    ВыполнитьОперациюЗагрузкиИсториДанныхСчетчиков(ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение);
КонецПроцедуры // Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика --

// Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг ++
//
// Выполняет загрузку данных услуг (объектов абонентов) в регистр ГП_УслугиБП77
&НаКлиенте
Асинх Процедура ЗагрузитьУслуги(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Данные услуг будут загружены (обновлены) в регистр Услуги БП 7.7.
            |Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    РезультатЗагрузки = ЗагрузитьДанныеУслугБП77ВРегистрНаСервере(ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение, Истина);

    ТекстСообщенияРезультатОперации = "";
    Если РезультатЗагрузки.Успех = Ложь Тогда
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных услуг не выполнена.
                |Подробная информация: %1", РезультатЗагрузки.ТекстСообщения);
    Иначе
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных услуг выполнена успешно.
                |Записано (обновлено) %1 записей регистра", РезультатЗагрузки.КоличествоЗаписанныхУслуг);
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщенияРезультатОперации);
КонецПроцедуры // Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг --

// Гарант+ Килипенко 02.08.2024 [F00226689] перенос зданий из БП77 ++
//
// Выполняет загрузку данных зданий (объектов абонентов) в регистр ГП_ЗданияБП77
&НаКлиенте
Асинх Процедура ЗагрузитьЗдания(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Данные зданий будут загружены (обновлены) в регистр Здания БП 7.7.
            |Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    РезультатЗагрузки = ЗагрузитьДанныеЗданийБП77ВРегистрНаСервере(ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение);

    ТекстСообщенияРезультатОперации = "";
    Если РезультатЗагрузки.Успех = Ложь Тогда
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных зданий не выполнена.
                |Подробная информация: %1", РезультатЗагрузки.ТекстСообщения);
    Иначе
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных зданий выполнена успешно.
                |Записано (обновлено) %1 записей регистра", РезультатЗагрузки.КоличествоЗаписанныхЗданий);
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщенияРезультатОперации);
КонецПроцедуры // Гарант+ Килипенко 02.08.2024 [F00226689] перенос зданий из БП77 --

// Гарант+ Килипенко 05.08.2024 [F00226996] перенос лицевых счетов из БП77 ++
//
// Выполняет загрузку данных контрагентов в регистр ГП_КонтрагентыБП77
&НаКлиенте
Асинх Процедура ЗагрузитьКонтрагентов(Команда)
    РезультатДиалога = Ждать ГП_ОбщегоНазначенияКлиент.СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(
            "Данные контрагентов будут загружены (обновлены) в регистр Контрагенты БП 7.7.");
    Если РезультатДиалога = Ложь Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    РезультатЗагрузки = ЗагрузитьДанныеКонтрагентовБП77ВРегистрНаСервере(
            ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение);

    ТекстСообщенияРезультатОперации = "";
    Если РезультатЗагрузки.Успех = Ложь Тогда
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных контрагентов не выполнена.
                |Подробная информация: %1", РезультатЗагрузки.ТекстСообщения);
    Иначе
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных контрагентов выполнена успешно.
                |Записано (обновлено) %1 записей регистра", РезультатЗагрузки.КоличествоЗаписанныхКонтрагентов);
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщенияРезультатОперации);
КонецПроцедуры // Гарант+ Килипенко 05.08.2024 [F00226996] перенос лицевых счетов из БП77 --

// Гарант+ Килипенко 08.08.2024 [F00227208] перенос контрагентов из БП77 ++
//
// Выполняет загрузку данных договоров в регистр ГП_ДоговорыБП77
&НаКлиенте
Асинх Процедура ЗагрузитьДоговоры(Команда)
    РезультатДиалога = Ждать ГП_ОбщегоНазначенияКлиент.СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(
            "Данные договоров будут загружены (обновлены) в регистр Договоры БП 7.7.");
    Если РезультатДиалога = Ложь Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    РезультатЗагрузки = ЗагрузитьДанныеДоговоровБП77ВРегистрНаСервере(
            ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение);

    ТекстСообщенияРезультатОперации = "";
    Если РезультатЗагрузки.Успех = Ложь Тогда
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных договоров не выполнена.
                |Подробная информация: %1", РезультатЗагрузки.ТекстСообщения);
    Иначе
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных договоров выполнена успешно.
                |Записано (обновлено) %1 записей регистра", РезультатЗагрузки.КоличествоЗаписанныхДоговоров);
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщенияРезультатОперации);
КонецПроцедуры // Гарант+ Килипенко 08.08.2024 [F00227208] перенос контрагентов из БП77 --

// Гарант+ Килипенко 08.08.2024 [F00227208] перенос контрагентов из БП77 ++
//
// Выполняет загрузку данных расчетных счетов в регистр ГП_РасчетныеСчетаБП77
&НаКлиенте
Асинх Процедура ЗагрузитьРасчетныеСчета(Команда)
    РезультатДиалога = Ждать ГП_ОбщегоНазначенияКлиент.СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(
            "Данные расчетных счетов будут загружены (обновлены) в регистр ""РасчетныеСчета БП 7.7"".");
    Если РезультатДиалога = Ложь Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    РезультатЗагрузки = ЗагрузитьДанныеРасчетныхСчетовБП77ВРегистрНаСервере(
            ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение);

    ТекстСообщенияРезультатОперации = "";
    Если РезультатЗагрузки.Успех = Ложь Тогда
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных расчетных счетов не выполнена.
                |Подробная информация: %1", РезультатЗагрузки.ТекстСообщения);
    Иначе
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных расчетных счетов выполнена успешно.
                |Записано (обновлено) %1 записей регистра", РезультатЗагрузки.КоличествоЗаписанных);
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщенияРезультатОперации);
КонецПроцедуры // Гарант+ Килипенко 08.08.2024 [F00227208] перенос контрагентов из БП77 --

// Гарант+ Килипенко 14.08.2024 [F00227047] перенос норм потребления из БП77 ++
//
// Выполняет загрузку норм потребления услуг из БП77 в регистр ГП_НормыПотребленияБП77
&НаКлиенте
Асинх Процедура ЗагрузитьНормыПотребления(Команда)
    РезультатДиалога = Ждать ГП_ОбщегоНазначенияКлиент.СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(
            "Данные норм потребления будут загружены (обновлены) в регистр ""Нормы потребления БП 7.7"".");
    Если РезультатДиалога = Ложь Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    РезультатЗагрузки = ЗагрузитьДанныеНормПотребленияБП77ВРегистрНаСервере(
            ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение);

    ТекстСообщенияРезультатОперации = "";
    Если РезультатЗагрузки.Успех = Ложь Тогда
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных норм потребления не выполнена.
                |Подробная информация: %1", РезультатЗагрузки.ТекстСообщения);
    Иначе
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных норм потребления выполнена успешно.
                |Записано (обновлено) %1 записей регистра", РезультатЗагрузки.КоличествоЗаписанных);
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщенияРезультатОперации);
КонецПроцедуры // Гарант+ Килипенко 14.08.2024 [F00227047] перенос норм потребления из БП77 --

// Гарант+ Килипенко 16.08.2024 [F00226620] назначение тарифов ++
//
// Выполняет загрузку арифов объектов абонентов (из БП 7.7) из файла в регистр `ГП_ТарифыОбъектовАбонентовБП77`
&НаКлиенте
Асинх Процедура ЗагрузитьТарифыОбъектовАбонентов(Команда)
    РезультатДиалога = Ждать ГП_ОбщегоНазначенияКлиент.СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(
            "Данные тарифов объектов абонентов будут загружены (обновлены) в регистр ""Тарифы объектов абонентов БП 7.7"".");
    Если РезультатДиалога = Ложь Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    РезультатЗагрузки = ЗагрузитьДанныеТарифовОбъектовАбонентовВРегистрНаСервере(
            ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение);

    ТекстСообщенияРезультатОперации = "";
    Если РезультатЗагрузки.Успех = Ложь Тогда
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных тарифов объектов абонентов не выполнена.
                |Подробная информация: %1", РезультатЗагрузки.ТекстСообщения);
    Иначе
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных тарифов объектов абонентов выполнена успешно.
                |Записано (обновлено) %1 записей регистра", РезультатЗагрузки.КоличествоЗаписанных);
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщенияРезультатОперации);
КонецПроцедуры // Гарант+ Килипенко 16.08.2024 [F00226620] назначение тарифов --

// Выполняет обновление всех данных записей счетчиков в регистре ГП_СчетчикиБП77
//  В случае включенной опции СоздаватьНовыеСчетчикиПриОбновлении (по умолчанию Истина)
//  для записей регистра где соответствия счетчиков не найдены, будут созданы новые счетчики и
//  записаны в поле регистра Счетчик
&НаКлиенте
Асинх Процедура ОбновитьСчетчикиИзРегистра(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Будет выполнено обновление значений всех счетчиков ИБ по данным из регистра Счетчики БП 7.7.
            |Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    ВыполнитьОперациюОбновленияСчетчиков(ЭтотОбъект.СоздаватьНовыеСчетчикиПриОбновлении);
КонецПроцедуры

// Удаляет все счетчики с заполненным значением реквизита ГП_ИдентификаторБП7
&НаКлиенте
Асинх Процедура УдалитьВсеСчетчикиБП77(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Все счетчики созданные из БП 7.7 будут помечены на удаление. Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    КоличествоУдаленныхСчетчиков = УдалитьВсеСчетчикиБП77НаСервере();
    ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон("Помечено на удаление %1 счетчиков", КоличествоУдаленныхСчетчиков));
КонецПроцедуры

// Выполняет сопоставление счетчиков и записей регистров, записывает ссылки на счетчик в регистр ГП_СчетчикиБП77
&НаКлиенте
Асинх Процедура СопоставитьСчетчики(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Значения поля Счетчик в регистре ГП_СчетчикиБП77 будут обновлены для всех записей.
            |Продолжить?",
            РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    РезультатСопоставления = СопоставитьСчетчикиНаСервере();
    Если РезультатСопоставления.Успех = Ложь Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю(
            СтрШаблон("Сопоставление счетчиков не выполнено.
                |Сообщение о причине: %1", РезультатСопоставления.ТекстСообщения));
    Иначе
        ОбщегоНазначенияКлиент.СообщитьПользователю(
            СтрШаблон("Сопоставление выполнено успешно.
                |Обновлено ""%1"" записей регистра", РезультатСопоставления.ОбновленныеСчетчики.Количество()));
    КонецЕсли;
КонецПроцедуры

// Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг ++
//
// Выполняет сопоставление записей в регистре ГП_УслугиБП77 с лицевыми счетами ИБ.
//  Для каждого найденного сопоставления устанавливается значение поля регистра ЛицевойСчет
&НаКлиенте
Асинх Процедура СопоставитьУслугиСЛицевымиСчетами(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Значения поля ЛицевойСчет в регистре ГП_УслугиБП77 будут обновлены для всех записей.
            |Продолжить?",
            РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    РезультатСопоставления = СопоставитьУслугиСЛицевымиСчетамиНаСервере();

    ТекстСообщенияРезультатОперации = "";
    Если РезультатСопоставления.Успех = Ложь Тогда
        ТекстСообщенияРезультатОперации = СтрШаблон("Сопоставление услуг не выполнено.
                |Сообщение о причине: %1", РезультатСопоставления.ТекстСообщения);
    Иначе
        ТекстСообщенияРезультатОперации = СтрШаблон("Сопоставление выполнено успешно.
                |Обновлено ""%1"" записей регистра", РезультатСопоставления.ОбновленныеУслуги.Количество());
    КонецЕсли;
    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщенияРезультатОперации);
КонецПроцедуры // Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг --

// Гарант+ Килипенко 02.08.2024 [F00226689] перенос зданий из БП77 ++
//
// Выполняет сопоставление записей в регистре ГП_ЗданияБП77 со Зданиями из ИБ.
//  Для каждого найденного сопоставления устанавливается значение поля регистра Здание
&НаКлиенте
Асинх Процедура СопоставитьЗдания(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Значения поля Здание в регистре ГП_ЗданияБП77 будут обновлены для всех записей.
            |Продолжить?",
            РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    РезультатСопоставления = СопоставитьЗданияНаСервере();

    ТекстСообщенияРезультатОперации = "";
    Если РезультатСопоставления.Успех = Ложь Тогда
        ТекстСообщенияРезультатОперации = СтрШаблон("Сопоставление зданий не выполнено.
                |Сообщение о причине: %1", РезультатСопоставления.ТекстСообщения);
    Иначе
        ТекстСообщенияРезультатОперации = СтрШаблон("Сопоставление выполнено успешно.
                |Обновлено ""%1"" записей регистра", РезультатСопоставления.ОбновленныеСвязи.Количество());
    КонецЕсли;
    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщенияРезультатОперации);
КонецПроцедуры // Гарант+ Килипенко 02.08.2024 [F00226689] перенос зданий из БП77 --

// Создает документ Управление услугами по данным из БП77
&НаКлиенте
Асинх Процедура СоздатьДокументыУправленияУслугами(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Будут созданы документы ""Назначение услуг"" по данным записей регистра Услуги БП 7.7.
            |Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.СписокВидовУслугДляУправленияУслугами.Количество() = 0 Тогда
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбраны услуги.");
        Возврат;
    КонецЕсли;

    МассивВидовУслугБП77 = Новый Массив;
    Для Каждого ЭлементУслуги Из ЭтотОбъект.СписокВидовУслугДляУправленияУслугами Цикл
        МассивВидовУслугБП77.Добавить(ЭлементУслуги.Значение);
    КонецЦикла;

    РезультатСозданияДокументов = СоздатьДокументыУправленияУслугамиНаСервере(МассивВидовУслугБП77);
    Для Каждого СообщениеОбОшибке Из РезультатСозданияДокументов.СообщенияОбОшибках Цикл
        ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке);
    КонецЦикла;

    СообщениеПользователю = "";
    Если РезультатСозданияДокументов.Успех = Ложь Тогда
        СообщениеПользователю = СтрШаблон("Создание документов не выполнено.
                |Информация о проблеме: %1", РезультатСозданияДокументов.ТекстСообщения);
    Иначе
        СообщениеПользователю = СтрШаблон("Создание документов выполнено %1.
                |Создано ""%2"" новых документов",
                ?(РезультатСозданияДокументов.СообщенияОбОшибках.Количество() > 0, "с ошибками", "успешно"),
                РезультатСозданияДокументов.СозданныеДокументыУправленияУслугами.Количество());
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеПользователю);
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы
// Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики --

// Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики ++
#Область СлужебныеПроцедурыИФункции

#Область ФоновыеОперацииВыполнение
// Выполняет операцию загрузки данных счетчиков в регистр
// Параметры:
//  АдресФайла - Строка
&НаКлиенте
Процедура ВыполнитьОперациюЗагрузкиДанныхСчетчиков(Знач АдресФайла)
    ЭтотОбъект.АдресХранилищаРезультатаОперации = "";

    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось получить данные для загрузки'"));
        Возврат;
    КонецЕсли;

    Результат = ЗагрузитьДанныеСчетчиковВФонеНаСервере(АдресФайла);

    Если НЕ Результат.ЗаданиеВыполнено Тогда
        ИдентификаторЗадания = Результат.ИдентификаторЗадания;
        ВыполнитьЗаданиеЗагрузкиДанных(ИдентификаторЗадания);
    КонецЕсли;
КонецПроцедуры

// Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика ++
//
// Выполняет операцию загрузки данных показаний счетчиков в регистр
// Параметры:
//  АдресФайла - Строка
&НаКлиенте
Процедура ВыполнитьОперациюЗагрузкиДанныхПоказанийСчетчиков(Знач АдресФайла)
    ЭтотОбъект.АдресХранилищаРезультатаОперации = "";

    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось получить данные для загрузки'"));
        Возврат;
    КонецЕсли;

    Результат = ЗагрузитьДанныеПоказанийСчетчиковВФонеНаСервере(АдресФайла);

    Если НЕ Результат.ЗаданиеВыполнено Тогда
        ИдентификаторЗадания = Результат.ИдентификаторЗадания;
        ВыполнитьЗаданиеЗагрузкиДанных(ИдентификаторЗадания);
    КонецЕсли;
КонецПроцедуры // Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика --

// Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика ++
//
// Устарела. Требует рефакторинг. Необходимо объединить с ВыполнитьОперациюЗагрузкиДанныхПоказанийСчетчиков
//
// Выполняет операцию загрузки периодических реквизитов счетчиков в регистр
// Параметры:
//  АдресФайла - Строка
&НаКлиенте
Процедура ВыполнитьОперациюЗагрузкиИсториДанныхСчетчиков(Знач АдресФайла)
    ЭтотОбъект.АдресХранилищаРезультатаОперации = "";

    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось получить данные для загрузки'"));
        Возврат;
    КонецЕсли;

    Результат = ЗагрузитьИсториюДанныхСчетчиковВФонеНаСервере(АдресФайла);

    Если НЕ Результат.ЗаданиеВыполнено Тогда
        ИдентификаторЗадания = Результат.ИдентификаторЗадания;
        ВыполнитьЗаданиеЗагрузкиДанных(ИдентификаторЗадания);
    КонецЕсли;
КонецПроцедуры // Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика --

// Выполняет операцию обновления и создания счетчиков (КВП_Счетчик) по данным счетчиков из БП77 (из регистра)
// Параметры:
//  СоздаватьНовыеЕслиНеНайдено - Булево
&НаКлиенте
Процедура ВыполнитьОперациюОбновленияСчетчиков(Знач СоздаватьНовыеЕслиНеНайдено = Истина)
    ЭтотОбъект.АдресХранилищаРезультатаОперации = "";

    ПараметрыОбновления = Новый Структура("СоздаватьНовые", СоздаватьНовыеЕслиНеНайдено);
    Результат = ОбновитьСчетчикиИзРегистраВФонеНаСервере(ПараметрыОбновления);

    Если НЕ Результат.ЗаданиеВыполнено Тогда
        ИдентификаторЗадания = Результат.ИдентификаторЗадания;
        ВыполнитьЗаданиеЗагрузкиДанных(ИдентификаторЗадания);
    КонецЕсли;
КонецПроцедуры
#КонецОбласти // ФоновыеОперацииВыполнение

#Область ФоновыеОперацииИнфраструктура
// Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика ++
//
// Запускает фоновое задание загрузки данных
// Параметры:
//  ИдентификаторЗадания - Строка
&НаКлиенте
Процедура ВыполнитьЗаданиеЗагрузкиДанных(Знач ИдентификаторЗадания)
    ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
    ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
    ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтотОбъект, ИдентификаторЗадания);
КонецПроцедуры // Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика --

// Выполняет фоновую операцию чтение данных счетчиков из файла с последующей загрузкой в регистр
// Параметры:
//  АдресФайла - Строка
// Возвращаемое значение:
//  - Структура
//      * ЗаданиеВыполнено - Булево
//      * ИдентификаторЗадания - Строка
//      * АдресХранилища - Строка
//      * Задание - Строка - Имя задания (Устарела. Не используется)
//      * НаименованиеЗадания - Строка - Наименование задания (Устарела. Не используется)
&НаСервере
Функция ЗагрузитьДанныеСчетчиковВФонеНаСервере(Знач АдресФайла)
    НаименованиеЗадания = НСтр("ru = 'Загрузка данных счетчиков'");
    РезультатВыполненияОперации = Новый Структура(
            "Задание, НаименованиеЗадания, ЗаданиеВыполнено, ИдентификаторЗадания, АдресХранилища",
            "ЗагрузкаДанныхСчетчиков", НаименованиеЗадания, Ложь);

    ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);

    ПараметрыВыгрузки = Новый Структура;
    ПараметрыВыгрузки.Вставить("ДвоичныеДанныеФайла", ДвоичныеДанныеФайла);

    Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
        ЭтотОбъект.АдресХранилищаРезультатаОперации = ПоместитьВоВременноеХранилище(Неопределено, ЭтотОбъект.УникальныйИдентификатор);
        Обработки.ГП_ЗагрузкаСчетчиковБП77.ЗагрузитьДанныеСчетчиковВРегистр(ПараметрыВыгрузки, ЭтотОбъект.АдресХранилищаРезультатаОперации);
        РезультатВыполненияОперации.ЗаданиеВыполнено = Истина;
    Иначе
        РезультатВыполненияОперации = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
                ЭтотОбъект.УникальныйИдентификатор,
                "Обработки.ГП_ЗагрузкаСчетчиковБП77.ЗагрузитьДанныеСчетчиковВРегистр",
                ПараметрыВыгрузки,
                НаименованиеЗадания);

        ЭтотОбъект.АдресХранилищаРезультатаОперации = РезультатВыполненияОперации.АдресХранилища;
    КонецЕсли;

    Если РезультатВыполненияОперации.ЗаданиеВыполнено Тогда
        ОповеститьОРезультатеВыполненияФоновогоЗаданияНаСервере();
    КонецЕсли;

    Возврат РезультатВыполненияОперации;
КонецФункции

// Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика ++
//
// Выполняет фоновую операцию чтение данных показаний счетчиков из файла с последующей загрузкой в регистр
// Параметры:
//  АдресФайла - Строка
// Возвращаемое значение:
//  - Структура
//      * ЗаданиеВыполнено - Булево
//      * ИдентификаторЗадания - Строка
//      * АдресХранилища - Строка
//      * Задание - Строка - Имя задания (Устарела. Не используется)
//      * НаименованиеЗадания - Строка - Наименование задания (Устарела. Не используется)
&НаСервере
Функция ЗагрузитьДанныеПоказанийСчетчиковВФонеНаСервере(Знач АдресФайла)
    НаименованиеЗадания = НСтр("ru = 'Загрузка данных показаний счетчиков'");
    РезультатВыполненияОперации = Новый Структура(
            "Задание, НаименованиеЗадания, ЗаданиеВыполнено, ИдентификаторЗадания, АдресХранилища",
            "ЗагрузкаПоказанийСчетчиков", НаименованиеЗадания, Ложь);

    ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);

    ПараметрыВыгрузки = Новый Структура;
    ПараметрыВыгрузки.Вставить("ДвоичныеДанныеФайла", ДвоичныеДанныеФайла);

    Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
        ЭтотОбъект.АдресХранилищаРезультатаОперации = ПоместитьВоВременноеХранилище(Неопределено, ЭтотОбъект.УникальныйИдентификатор);
        Обработки.ГП_ЗагрузкаСчетчиковБП77.ЗагрузитьПоказанияСчетчиковВРегистр(
            ПараметрыВыгрузки, ЭтотОбъект.АдресХранилищаРезультатаОперации);
        РезультатВыполненияОперации.ЗаданиеВыполнено = Истина;
    Иначе
        РезультатВыполненияОперации = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
                ЭтотОбъект.УникальныйИдентификатор,
                "Обработки.ГП_ЗагрузкаСчетчиковБП77.ЗагрузитьПоказанияСчетчиковВРегистр",
                ПараметрыВыгрузки,
                НаименованиеЗадания);

        ЭтотОбъект.АдресХранилищаРезультатаОперации = РезультатВыполненияОперации.АдресХранилища;
    КонецЕсли;

    Если РезультатВыполненияОперации.ЗаданиеВыполнено Тогда
        ОповеститьОРезультатеВыполненияФоновогоЗаданияНаСервере();
    КонецЕсли;

    Возврат РезультатВыполненияОперации;
КонецФункции // Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика --

// Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика ++
//
// Устарела. Требует рефакторинг. Необходимо объединить с ЗагрузитьДанныеПоказанийСчетчиковВФонеНаСервере
//
// Выполняет фоновую операцию чтение данных показаний счетчиков из файла с последующей загрузкой в регистр
// Параметры:
//  АдресФайла - Строка
// Возвращаемое значение:
//  - Структура
//      * ЗаданиеВыполнено - Булево
//      * ИдентификаторЗадания - Строка
//      * АдресХранилища - Строка
//      * Задание - Строка - Имя задания (Устарела. Не используется)
//      * НаименованиеЗадания - Строка - Наименование задания (Устарела. Не используется)
&НаСервере
Функция ЗагрузитьИсториюДанныхСчетчиковВФонеНаСервере(Знач АдресФайла)
    НаименованиеЗадания = НСтр("ru = 'Загрузка данных показаний счетчиков'");
    РезультатВыполненияОперации = Новый Структура(
            "Задание, НаименованиеЗадания, ЗаданиеВыполнено, ИдентификаторЗадания, АдресХранилища",
            "ЗагрузкаПоказанийСчетчиков", НаименованиеЗадания, Ложь);

    ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);

    ПараметрыВыгрузки = Новый Структура;
    ПараметрыВыгрузки.Вставить("ДвоичныеДанныеФайла", ДвоичныеДанныеФайла);

    Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
        ЭтотОбъект.АдресХранилищаРезультатаОперации = ПоместитьВоВременноеХранилище(Неопределено, ЭтотОбъект.УникальныйИдентификатор);
        Обработки.ГП_ЗагрузкаСчетчиковБП77.ЗагрузитьИсториюДанныхСчетчиковВРегистры(
            ПараметрыВыгрузки, ЭтотОбъект.АдресХранилищаРезультатаОперации);
        РезультатВыполненияОперации.ЗаданиеВыполнено = Истина;
    Иначе
        РезультатВыполненияОперации = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
                ЭтотОбъект.УникальныйИдентификатор,
                "Обработки.ГП_ЗагрузкаСчетчиковБП77.ЗагрузитьИсториюДанныхСчетчиковВРегистры",
                ПараметрыВыгрузки,
                НаименованиеЗадания);

        ЭтотОбъект.АдресХранилищаРезультатаОперации = РезультатВыполненияОперации.АдресХранилища;
    КонецЕсли;

    Если РезультатВыполненияОперации.ЗаданиеВыполнено Тогда
        ОповеститьОРезультатеВыполненияФоновогоЗаданияНаСервере();
    КонецЕсли;

    Возврат РезультатВыполненияОперации;
КонецФункции // Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика --

// Выполняет фоновую операцию обновления и создания счетчиков (КВП_Счетчик) по данным счетчиков из БП77 (из регистра)
// Параметры:
//  ПараметрыОбновления - Структура
//      * СоздаватьНовые - Булево - Если Истина, в случае отсутствия соответствий будут созданы новые счетчики
// Возвращаемое значение:
//  - Структура
//      * ЗаданиеВыполнено - Булево
//      * ИдентификаторЗадания - Строка
//      * АдресХранилища - Строка
//      * Задание - Строка - Имя задания (Устарела. Не используется)
//      * НаименованиеЗадания - Строка - Наименование задания (Устарела. Не используется)
&НаСервере
Функция ОбновитьСчетчикиИзРегистраВФонеНаСервере(Знач ПараметрыОбновления)
    НаименованиеЗадания = НСтр("ru = 'Обновление счетчиков'");
    РезультатВыполненияОперации = Новый Структура(
            "Задание, НаименованиеЗадания, ЗаданиеВыполнено, ИдентификаторЗадания, АдресХранилища",
            "ОбновлениеСчетчиков", НаименованиеЗадания, Ложь);

    Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
        ЭтотОбъект.АдресХранилищаРезультатаОперации = ПоместитьВоВременноеХранилище(Неопределено, ЭтотОбъект.УникальныйИдентификатор);
        Обработки.ГП_ЗагрузкаСчетчиковБП77.ОбновитьСчетчикиИзРегистра(ПараметрыОбновления, ЭтотОбъект.АдресХранилищаРезультатаОперации);
        РезультатВыполненияОперации.ЗаданиеВыполнено = Истина;
    Иначе
        РезультатВыполненияОперации = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
                ЭтотОбъект.УникальныйИдентификатор,
                "Обработки.ГП_ЗагрузкаСчетчиковБП77.ОбновитьСчетчикиИзРегистра",
                ПараметрыОбновления,
                НаименованиеЗадания);

        ЭтотОбъект.АдресХранилищаРезультатаОперации = РезультатВыполненияОперации.АдресХранилища;
    КонецЕсли;

    Если РезультатВыполненияОперации.ЗаданиеВыполнено Тогда
        ОповеститьОРезультатеВыполненияФоновогоЗаданияНаСервере();
    КонецЕсли;

    Возврат РезультатВыполненияОперации;
КонецФункции

// Выполняет интервальную проверку состояния выполнения фонового задания
&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
    Попытка
        Если ФормаДлительнойОперации.Открыта()
            И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
            Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
                ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
                ОповеститьОРезультатеВыполненияФоновогоЗаданияНаСервере();
            Иначе
                ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
                ПодключитьОбработчикОжидания(
                    "Подключаемый_ПроверитьВыполнениеЗадания",
                    ПараметрыОбработчикаОжидания.ТекущийИнтервал,
                    Истина);
            КонецЕсли;
        КонецЕсли;
    Исключение
        ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
        ВызватьИсключение;
    КонецПопытки;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(Знач ИдентификаторЗадания)
    Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
КонецФункции

// Выполняет загрузку данных результата выполнения фонового задания в реквизиты формы
&НаСервере
Процедура ОповеститьОРезультатеВыполненияФоновогоЗаданияНаСервере()
    ЗавершенаУспешно = Ложь;
    Результат = ПолучитьИзВременногоХранилища(ЭтотОбъект.АдресХранилищаРезультатаОперации);

    ТекстСообщенияПользователю = "";

    Если ТипЗнч(Результат) = Тип("Структура")
        И Результат.Свойство("ТекстСообщения") Тогда

        ТекстСообщенияПользователю = Результат.ТекстСообщения;

        Если Результат.Свойство("Успех") Тогда
            ЗавершенаУспешно = Результат.Успех;
        КонецЕсли;

        Если ЗавершенаУспешно Тогда
            Если Результат.Свойство("КоличествоЗаписанныхСчетчиков") Тогда
                ТекстСообщенияПользователю = СтрШаблон("Записано / обновлено %1 записей счетчиков.",
                        Результат.КоличествоЗаписанныхСчетчиков);
            ИначеЕсли Результат.Свойство("КоличествоЗаписанныхПоказаний") Тогда
                ТекстСообщенияПользователю = СтрШаблон("Создано %1 записей показаний счетчиков.",
                        Результат.КоличествоЗаписанныхПоказаний);
            ИначеЕсли Результат.Свойство("КоличествоЗаписанныхСпособовРегистрации")
                И Результат.Свойство("КоличествоЗаписанныхАктивностей") Тогда
                ТекстСообщенияПользователю = СтрШаблон(
                        "Создано %1 записей способов регистрации показаний счетчика.
                        |Создано %2 записей активностей счетчика.",
                        Результат.КоличествоЗаписанныхСпособовРегистрации,
                        Результат.КоличествоЗаписанныхАктивностей);
            ИначеЕсли Результат.Свойство("ОбновленныеСчетчики") И Результат.Свойство("НовыеСчетчики") Тогда
                ТекстСообщенияПользователю = СтрШаблон("Создано %1 счетчиков, обновлено %2 счетчиков.",
                        Результат.НовыеСчетчики.Количество(), Результат.ОбновленныеСчетчики.Количество());
            КонецЕсли;
        КонецЕсли;
    ИначеЕсли ТипЗнч(Результат) <> Тип("Булево") Тогда
        ТекстСообщенияПользователю = "Завершено.";
    Иначе
        ЗавершенаУспешно = Результат;
    КонецЕсли;

    Если ЗавершенаУспешно Тогда
        ТекстСообщенияПользователю = СтрШаблон(
                "Операция выполнена успешно.
                |Информация о результате выполнения: %1", ТекстСообщенияПользователю);
    КонецЕсли;

    ОбщегоНазначения.СообщитьПользователю(ТекстСообщенияПользователю);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаФайлаЗавершение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
    Если ТипЗнч(ПомещенныеФайлы) <> Тип("Массив") Тогда
        Возврат;
    КонецЕсли;

    ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Очистить();
    ЭтотОбъект.ИмяВыбранногоФайла = "";
    Для Каждого Файл Из ПомещенныеФайлы Цикл
        НоваяСтрокаИнформации = ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрокаИнформации, Файл);
    КонецЦикла;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() > 0 Тогда
        ЭтотОбъект.ИмяВыбранногоФайла = ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].ПолноеИмя;
    КонецЕсли;

    УстановитьДоступностьКомандДействий();
КонецПроцедуры
#КонецОбласти // ФоновыеОперацииИнфраструктура

// Удаляет все созданные пл данным БП77 счетчики из ИБ
// Возвращаемое значение:
//  - Число - Количество удаленных счетчиков
&НаСервереБезКонтекста
Функция УдалитьВсеСчетчикиБП77НаСервере()
    Возврат Обработки.ГП_ЗагрузкаСчетчиковБП77.УдалитьВсеСчетчикиБП77();
КонецФункции

// Параметры:
//  МассивВидовУслугБП77 - Массив из Строка
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * СообщенияОбОшибках - Массив из Строка
//      * ТекстСообщения - Строка - Текст сообщения об ошибке при выполнении транзакции записи документов
//      * СозданныеДокументыУправленияУслугами - Массив из ДокументСсылка.КВП_УправлениеУслугами
&НаСервереБезКонтекста
Функция СоздатьДокументыУправленияУслугамиНаСервере(Знач МассивВидовУслугБП77)
    Возврат ГП_МиграцияУслуг.СоздатьДокументыУправлениеУслугамиПоДаннымРегистраСчетчиковБП77(
        МассивВидовУслугБП77);
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * ОбновленныеСчетчики - Массив из СправочникСсылка.КВП_Счетчики
//      * ТекстСообщения - Строка
&НаСервереБезКонтекста
Функция СопоставитьСчетчикиНаСервере()
    // Получение данных счетчиков БП77 из регистра
    ТаблицаСчетчиковБП77 = Обработки.ГП_ЗагрузкаСчетчиковБП77.ПолучитьДанныеСчетчиковИзРегистра(Ложь);

    Возврат Обработки.ГП_ЗагрузкаСчетчиковБП77.УстановитьСоответствияСчетчиковРегистраСОбъектамиИБ(ТаблицаСчетчиковБП77, Истина);
КонецФункции

// Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг ++
//
// Выполняет загрузку данных услуг из файла в регистр
// Параметры:
//  АдресФайла - Строка
//  СохранятьСвязи - Булево
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанныхУслуг - Число
//      * ТекстСообщения - Строка
//  - Неопределено
&НаСервереБезКонтекста
Функция ЗагрузитьДанныеУслугБП77ВРегистрНаСервере(Знач АдресФайла, Знач СохранятьСвязи = Истина)
    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось получить данные для загрузки услуг'"));
        Возврат Неопределено;
    КонецЕсли;

    ПараметрыЗагрузки = Новый Структура("ДвоичныеДанныеФайла, СохранятьСвязи");
    ПараметрыЗагрузки.ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
    ПараметрыЗагрузки.СохранятьСвязи = СохранятьСвязи;

    Возврат ГП_МиграцияУслуг.ЗагрузитьДанныеУслугВРегистр(ПараметрыЗагрузки, Неопределено);
КонецФункции // Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг --

// Гарант+ Килипенко 02.08.2024 [F00226689] перенос зданий из БП77 ++
//
// Параметры:
//  АдресФайла - Строка
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанныхЗданий - Число
//      * ТекстСообщения - Строка
//  - Неопределено
&НаСервереБезКонтекста
Функция ЗагрузитьДанныеЗданийБП77ВРегистрНаСервере(Знач АдресФайла)
    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось получить данные для загрузки зданий'"));
        Возврат Неопределено;
    КонецЕсли;

    ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
    Возврат ГП_МиграцияЗданий.ЗагрузитьДанныеЗданийВРегистр(ДвоичныеДанныеФайла, Неопределено);
КонецФункции // Гарант+ Килипенко 02.08.2024 [F00226689] перенос зданий из БП77 --

// Гарант+ Килипенко 05.08.2024 [F00226996] перенос лицевых счетов из БП77 ++
//
// Параметры:
//  АдресФайла - Строка
//  СохранятьСвязи - Булево
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанныхКонтрагентов - Число
//      * ТекстСообщения - Строка
//  - Неопределено
&НаСервереБезКонтекста
Функция ЗагрузитьДанныеКонтрагентовБП77ВРегистрНаСервере(Знач АдресФайла, Знач СохранятьСвязи = Истина)
    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось получить данные для загрузки контрагентов'"));
        Возврат Неопределено;
    КонецЕсли;

    ПараметрыЗагрузки = Новый Структура("ДвоичныеДанныеФайла, СохранятьСвязи");
    ПараметрыЗагрузки.ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
    ПараметрыЗагрузки.СохранятьСвязи = СохранятьСвязи;
    Возврат ГП_МиграцияКонтрагентов.ЗагрузитьДанныеКонтрагентовВРегистр(ПараметрыЗагрузки, Неопределено);
КонецФункции // Гарант+ Килипенко 05.08.2024 [F00226996] перенос лицевых счетов из БП77 --

// Гарант+ Килипенко 08.08.2024 [F00227208] перенос контрагентов из БП77 ++
//
// Выполняет чтение данных договоров (из БП 7.7) из файла и записывает данные в регистр `ГП_ДоговорыБП77`
// Параметры:
//  АдресФайла - Строка
//  СохранятьСвязи - Булево
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанныхДоговоров - Число
//      * ТекстСообщения - Строка, Неопределено
//  - Неопределено
&НаСервереБезКонтекста
Функция ЗагрузитьДанныеДоговоровБП77ВРегистрНаСервере(Знач АдресФайла, Знач СохранятьСвязи = Истина)
    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось получить данные для загрузки договоров'"));
        Возврат Неопределено;
    КонецЕсли;

    ПараметрыЗагрузки = Новый Структура("ДвоичныеДанныеФайла, СохранятьСвязи");
    ПараметрыЗагрузки.ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
    ПараметрыЗагрузки.СохранятьСвязи = СохранятьСвязи;
    Возврат ГП_МиграцияДоговоров.ЗагрузитьДанныеДоговоровВРегистр(ПараметрыЗагрузки, Неопределено);
КонецФункции // Гарант+ Килипенко 08.08.2024 [F00227208] перенос контрагентов из БП77 --

// Гарант+ Килипенко 08.08.2024 [F00227208] перенос контрагентов из БП77 ++
//
// Выполняет чтение данных расчетных счетов (из БП 7.7) из файла и записывает данные в регистр `ГП_РасчетныеСчетаБП77`
// Параметры:
//  АдресФайла - Строка
//  СохранятьСвязи - Булево
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанных - Число
//      * ТекстСообщения - Строка, Неопределено
//  - Неопределено
&НаСервереБезКонтекста
Функция ЗагрузитьДанныеРасчетныхСчетовБП77ВРегистрНаСервере(Знач АдресФайла, Знач СохранятьСвязи = Истина)
    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось получить данные для загрузки расчетных счетов'"));
        Возврат Неопределено;
    КонецЕсли;

    ПараметрыЗагрузки = Новый Структура("ДвоичныеДанныеФайла, СохранятьСвязи");
    ПараметрыЗагрузки.ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
    ПараметрыЗагрузки.СохранятьСвязи = СохранятьСвязи;
    Возврат ГП_МиграцияРасчетныхСчетов.ЗагрузитьДанныеРасчетныхСчетовВРегистр(ПараметрыЗагрузки, Неопределено);
КонецФункции // Гарант+ Килипенко 08.08.2024 [F00227208] перенос контрагентов из БП77 --

// Гарант+ Килипенко 14.08.2024 [F00227047] перенос норм потребления из БП77 ++
//
// Выполняет чтение данных норм потребления (ГруппыПотребителей) (из БП 7.7) из файла и записывает
//  данные в регистр `ГП_НормыПотребленияБП77`
// Параметры:
//  АдресФайла - Строка
//  СохранятьСвязи - Булево
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанных - Число
//      * ТекстСообщения - Строка, Неопределено
//  - Неопределено
&НаСервереБезКонтекста
Функция ЗагрузитьДанныеНормПотребленияБП77ВРегистрНаСервере(Знач АдресФайла, Знач СохранятьСвязи = Истина)
    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось получить данные для загрузки норм потребления'"));
        Возврат Неопределено;
    КонецЕсли;

    ПараметрыЗагрузки = Новый Структура("ДвоичныеДанныеФайла, СохранятьСвязи");
    ПараметрыЗагрузки.ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
    ПараметрыЗагрузки.СохранятьСвязи = СохранятьСвязи;
    Возврат ГП_МиграцияНормПотребления.ЗагрузитьДанныеНормПотребленийВРегистр(ПараметрыЗагрузки, Неопределено);
КонецФункции // Гарант+ Килипенко 14.08.2024 [F00227047] перенос норм потребления из БП77 --

// Гарант+ Килипенко 16.08.2024 [F00226620] назначение тарифов ++
//
// Выполняет чтение данных тарифов объектов абонентов (из БП 7.7) из файла и записывает
//  данные в регистр `ГП_ТарифыОбъектовАбонентовБП77`
// Параметры:
//  АдресФайла - Строка
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанных - Число
//      * ТекстСообщения - Строка, Неопределено
//  - Неопределено
&НаСервереБезКонтекста
Функция ЗагрузитьДанныеТарифовОбъектовАбонентовВРегистрНаСервере(Знач АдресФайла)
    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось получить данные для загрузки тарифов объектов абонентов'"));
        Возврат Неопределено;
    КонецЕсли;

    ПараметрыЗагрузки = Новый Структура("ДвоичныеДанныеФайла");
    ПараметрыЗагрузки.ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
    Возврат ГП_МиграцияТарифовАбонентов.ЗагрузитьДанныеТарифовОбъектовАбонентовВРегистр(ПараметрыЗагрузки, Неопределено);
КонецФункции // Гарант+ Килипенко 16.08.2024 [F00226620] назначение тарифов --

// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * ОбновленныеСчетчики - Массив из СправочникСсылка.КВП_Счетчики
//      * ТекстСообщения - Строка
&НаСервереБезКонтекста
Функция СопоставитьУслугиСЛицевымиСчетамиНаСервере()
    Возврат ГП_МиграцияУслуг.УстановитьСоответствияУслугСЛицевымиСчетами(Истина);
КонецФункции

// Гарант+ Килипенко 02.08.2024 [F00226689] перенос зданий из БП77 ++
//
// Выполняет установку связей Зданий (объектов абонентов) БП77 и зданий в ИБ
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * ОбновленныеСчетчики - Массив из СправочникСсылка.КВП_Счетчики
//      * ТекстСообщения - Строка
&НаСервереБезКонтекста
Функция СопоставитьЗданияНаСервере()
    Возврат ГП_МиграцияЗданий.УстановитьСоответствияЗданий(Истина);
КонецФункции // Гарант+ Килипенко 02.08.2024 [F00226689] перенос зданий из БП77 --

// Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика ++
#Область УправлениеФормой
&НаКлиенте
Процедура УстановитьДоступностьКомандДействий()
    ФайлДанныхЗагружен = ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() > 0;
    ЭтотОбъект.Элементы.ЗагрузитьСчетчики.Доступность = ФайлДанныхЗагружен;
    ЭтотОбъект.Элементы.ЗагрузитьПоказанияСчетчиков.Доступность = ФайлДанныхЗагружен;
    ЭтотОбъект.Элементы.ЗагрузитьИсториюСостоянийСчетчиков.Доступность = ФайлДанныхЗагружен;

    // Загрузка услуг
    ЭтотОбъект.Элементы.ЗагрузитьУслуги.Доступность = ФайлДанныхЗагружен;

    // Загрузка зданий
    ЭтотОбъект.Элементы.ЗагрузитьЗдания.Доступность = ФайлДанныхЗагружен;

    // Загрузка контрагентов
    ЭтотОбъект.Элементы.ЗагрузитьКонтрагентов.Доступность = ФайлДанныхЗагружен;

    // Загрузка договоров
    ЭтотОбъект.Элементы.ЗагрузитьДоговоры.Доступность = ФайлДанныхЗагружен;

    // Загрузка расчетных счетов
    ЭтотОбъект.Элементы.ЗагрузитьРасчетныеСчета.Доступность = ФайлДанныхЗагружен;

    // Загрузка норм потребления
    ЭтотОбъект.Элементы.ЗагрузитьНормыПотребления.Доступность = ФайлДанныхЗагружен;

    // Загрузка тарифов объектов абонентов
    ЭтотОбъект.Элементы.ЗагрузитьТарифыОбъектовАбонентов.Доступность = ФайлДанныхЗагружен;
КонецПроцедуры

// Выполняет инициализацию значений по умолчанию для настроек формы
&НаКлиенте
Процедура ИнициализацияЭлементовНастроекФормы()
    // Список доступных услуг
    СписокДоступныхВидовУслуг = Новый Массив();
    СписокДоступныхВидовУслуг.Добавить("ХолоднаяВода");
    СписокДоступныхВидовУслуг.Добавить("ГорячаяВода");
    СписокДоступныхВидовУслуг.Добавить("Канализация");
    СписокДоступныхВидовУслуг.Добавить("ХолоднаяВодаВодоотвод");
    СписокДоступныхВидовУслуг.Добавить("ПодогревХВ");
    СписокДоступныхВидовУслуг.Добавить("НегативноеВоздействие");
    СписокДоступныхВидовУслуг = Новый ФиксированныйМассив(СписокДоступныхВидовУслуг);

    // Настройка создания услуг
    ЭтотОбъект.Элементы.СписокВидовУслугДляУправленияУслугами.СписокВыбора.Очистить();
    ЭтотОбъект.СписокВидовУслугДляУправленияУслугами.Очистить();
    ЭтотОбъект.Элементы.СписокВидовУслугДляУправленияУслугами.ОграничениеТипа =
        Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Тип("Строка")));
    Для Каждого ВидУслуги Из СписокДоступныхВидовУслуг Цикл
        НовыйЭлементСпискаВыбораУслуг = ЭтотОбъект.Элементы.СписокВидовУслугДляУправленияУслугами.СписокВыбора.Добавить();
        НовыйЭлементСпискаВыбораУслуг.Значение = ВидУслуги;
        НовыйЭлементСпискаВыбораУслуг.Представление = ВидУслуги;

        НовыйЭлементСпискаУслуг = ЭтотОбъект.СписокВидовУслугДляУправленияУслугами.Добавить();
        НовыйЭлементСпискаУслуг.Значение = ВидУслуги;
        НовыйЭлементСпискаУслуг.Представление = ВидУслуги;
    КонецЦикла;

    // Настройка обновления счетчиков
    ЭтотОбъект.СоздаватьНовыеСчетчикиПриОбновлении = Истина;
КонецПроцедуры
#КонецОбласти // УправлениеФормой
// Гарант+ Килипенко 25.07.2024 [F00226454] заполнение документов Установка счетчика --

// Параметры:
//  ТекстВопроса - Строка
// Возвращаемое значение:
//  - Обещание - (Булево) Если Истина, пользователь согласен выполнить операцию, иначе Ложь
&НаКлиенте
Асинх Функция СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(Знач ТекстВопроса)
    РезультатДиалога = Ждать ВопросАсинх(СтрШаблон(
                "%1
                |Продолжить?", ТекстВопроса), РежимДиалогаВопрос.ДаНет, , , "Внимание!");

    Возврат РезультатДиалога = КодВозвратаДиалога.Да;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики --
