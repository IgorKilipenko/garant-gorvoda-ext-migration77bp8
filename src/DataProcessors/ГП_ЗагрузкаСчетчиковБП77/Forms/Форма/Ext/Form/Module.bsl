#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#КонецОбласти

// ++ Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики ++
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьФайлДляЧтения(Команда)
    ПараметрыЗагрузкиФайлаJSON = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
    ПараметрыЗагрузкиФайлаJSON.Диалог.Заголовок = НСтр("ru = 'Выберите файл XML для загрузки счетчиков'");
    ПараметрыЗагрузкиФайлаJSON.Диалог.Фильтр = НСтр("ru = 'Файлы XML (*.xml)|*.xml'");
    ПараметрыЗагрузкиФайлаJSON.ИдентификаторФормы = ЭтотОбъект.УникальныйИдентификатор;
    ФайловаяСистемаКлиент.ЗагрузитьФайлы(Новый ОписаниеОповещения("ЗагрузкаФайлаЗавершение", ЭтотОбъект), ПараметрыЗагрузкиФайлаJSON);
КонецПроцедуры

// Выполняет загрузку данных счетчиков в регистр
&НаКлиенте
Процедура ЗагрузитьСчетчики(Команда)
    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОткрытьФайлДляЧтения(Неопределено);
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    ВыполнитьОперациюЗагрузкиДанныхСчетчиков(ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСчетчикиИзРегистра(Команда)
    // Вставить содержимое обработчика.
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы
// -- Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики --

// ++ Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики ++
#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьОперациюЗагрузкиДанныхСчетчиков(Знач АдресФайла)
    ЭтотОбъект.АдресХранилищаРезультатаОперации = "";
    ЭтотОбъект.ТекстСообщенияРезультатОперации = "";

    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр("ru = 'Не удалось получить данные для загрузки'"));
        Возврат;
    КонецЕсли;

    Результат = ЗагрузитьДанныеСчетчиковНаСервере(АдресФайла, ЭтотОбъект.УникальныйИдентификатор);

    Если НЕ Результат.ЗаданиеВыполнено Тогда
        ИдентификаторЗадания = Результат.ИдентификаторЗадания;
        АдресХранилища = Результат.АдресХранилища;

        ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
        ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
        ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтотОбъект, ИдентификаторЗадания);
    КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(Знач ИдентификаторЗадания)
    Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
    Попытка
        Если ФормаДлительнойОперации.Открыта()
            И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
            Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
                ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
                ЗагрузитьРезультатНаСервере();
            Иначе
                ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
                ПодключитьОбработчикОжидания(
                    "Подключаемый_ПроверитьВыполнениеЗадания",
                    ПараметрыОбработчикаОжидания.ТекущийИнтервал,
                    Истина);
            КонецЕсли;
        КонецЕсли;
    Исключение
        ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
        ВызватьИсключение;
    КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ЗагрузитьДанныеСчетчиковНаСервере(Знач АдресФайла, Знач УникальныйИдентификатор)
    ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);

    ПараметрыВыгрузки = Новый Структура;
    ПараметрыВыгрузки.Вставить("ДвоичныеДанныеФайла", ДвоичныеДанныеФайла);

    Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
        ЭтотОбъект.АдресХранилищаРезультатаОперации = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
        Обработки.ГП_ЗагрузкаСчетчиковБП77.ЗагрузитьДанныеВИБ(ПараметрыВыгрузки, ЭтотОбъект.АдресХранилищаРезультатаОперации);
        Результат = Новый Структура("ЗаданиеВыполнено", Истина);
    Иначе
        НаименованиеЗадания = НСтр("ru = 'Загрузка данных счетчиков'");

        Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
                УникальныйИдентификатор,
                "Обработки.ГП_ЗагрузкаСчетчиковБП77.ЗагрузитьДанныеВИБ",
                ПараметрыВыгрузки,
                НаименованиеЗадания);

        ЭтотОбъект.АдресХранилищаРезультатаОперации = Результат.АдресХранилища;
    КонецЕсли;

    Если Результат.ЗаданиеВыполнено Тогда
        ЗагрузитьРезультатНаСервере();
    КонецЕсли;

    Возврат Результат;
КонецФункции

&НаСервере
Процедура ЗагрузитьРезультатНаСервере()
    ЗавершенаУспешно = Ложь;
	Результат = ПолучитьИзВременногоХранилища(ЭтотОбъект.АдресХранилищаРезультатаОперации);

	Если ТипЗнч(Результат) = Тип("Структура")
		И Результат.Свойство("ТекстСообщения") Тогда
		ЭтотОбъект.ТекстСообщенияРезультатОперации = Результат.ТекстСообщения;

        Если Результат.Свойство("Успех") Тогда
            ЗавершенаУспешно = Результат.Успех;
        КонецЕсли;

        Если Результат.Свойство("КоличествоЗаписанныхСчетчиков") Тогда
            ЭтотОбъект.ТекстСообщенияРезультатОперации = СтрШаблон("Записано / обновлено %1 счетчиков.");
        КонецЕсли;
    Иначе
        ЭтотОбъект.ТекстСообщенияРезультатОперации = "Завершено.";
    КонецЕсли;

    Если ЗавершенаУспешно Тогда
        ЭтотОбъект.ТекстСообщенияРезультатОперации = СтрШаблон(
            "Загрузка выполнена успешно.
            |Дополнительная информация: %1", ЭтотОбъект.ТекстСообщенияРезультатОперации);
    КонецЕсли;
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
// -- Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики --

// ++ Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики ++
#Область СлужебныйПрограммныйИнтерфейс

&НаКлиенте
Процедура ЗагрузкаФайлаЗавершение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
    Если ТипЗнч(ПомещенныеФайлы) <> Тип("Массив") Тогда
        Возврат;
    КонецЕсли;

    ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Очистить();
    ЭтотОбъект.ИмяВыбранногоФайла = "";
    Для Каждого Файл Из ПомещенныеФайлы Цикл
        НоваяСтрокаИнформации = ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрокаИнформации, Файл);
    КонецЦикла;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() > 0 Тогда
        ЭтотОбъект.ИмяВыбранногоФайла = ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].ПолноеИмя;
    КонецЕсли;

КонецПроцедуры

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
// -- Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики --
