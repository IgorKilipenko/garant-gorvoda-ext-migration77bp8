// ++ Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики ++
#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

&НаКлиенте
Перем СписокДоступныхВидовУслуг;

#КонецОбласти // ОписаниеПеременных
// -- Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики --

// ++ Гарант+ Килипенко 22.07.2024 [F00226285] заполнение назначения услуг ++
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    СписокДоступныхВидовУслуг = Новый Массив();
    СписокДоступныхВидовУслуг.Добавить("ХолоднаяВода");
    СписокДоступныхВидовУслуг.Добавить("ГорячаяВода");
    СписокДоступныхВидовУслуг.Добавить("Канализация");
    СписокДоступныхВидовУслуг.Добавить("ХолоднаяВодаВодоотвод");
    СписокДоступныхВидовУслуг.Добавить("НегативноеВоздействие");
    СписокДоступныхВидовУслуг = Новый ФиксированныйМассив(СписокДоступныхВидовУслуг);

    ЭтотОбъект.Элементы.СписокВидовУслугДляУправленияУслугами.СписокВыбора.Очистить();
    ЭтотОбъект.СписокВидовУслугДляУправленияУслугами.Очистить();
    ЭтотОбъект.Элементы.СписокВидовУслугДляУправленияУслугами.ОграничениеТипа =
        Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Тип("Строка")));
    Для Каждого ВидУслуги Из СписокДоступныхВидовУслуг Цикл
        НовыйЭлементСпискаВыбораУслуг = ЭтотОбъект.Элементы.СписокВидовУслугДляУправленияУслугами.СписокВыбора.Добавить();
        НовыйЭлементСпискаВыбораУслуг.Значение = ВидУслуги;
        НовыйЭлементСпискаВыбораУслуг.Представление = ВидУслуги;

        НовыйЭлементСпискаУслуг = ЭтотОбъект.СписокВидовУслугДляУправленияУслугами.Добавить();
        НовыйЭлементСпискаУслуг.Значение = ВидУслуги;
        НовыйЭлементСпискаУслуг.Представление = ВидУслуги;
    КонецЦикла;
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы
// -- Гарант+ Килипенко 22.07.2024 [F00226285] заполнение назначения услуг --

// ++ Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики ++
#Область ОбработчикиКомандФормы

// Выполняет открытие файла для загрузки счетчиков БП77
&НаКлиенте
Процедура ОткрытьФайлДляЧтения(Команда)
    ПараметрыЗагрузкиФайла = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
    ПараметрыЗагрузкиФайла.Диалог.Заголовок = НСтр("ru = 'Выберите файл XML для загрузки счетчиков'");
    ПараметрыЗагрузкиФайла.Диалог.Фильтр = НСтр("ru = 'Файлы XML (*.xml)|*.xml'");
    ПараметрыЗагрузкиФайла.ИдентификаторФормы = ЭтотОбъект.УникальныйИдентификатор;
    ФайловаяСистемаКлиент.ЗагрузитьФайлы(Новый ОписаниеОповещения("ЗагрузкаФайлаЗавершение", ЭтотОбъект), ПараметрыЗагрузкиФайла);
КонецПроцедуры

// Выполняет загрузку данных счетчиков в регистр ГП_СчетчикиБП77
&НаКлиенте
Асинх Процедура ЗагрузитьСчетчики(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Данные счетчиков будут загружены (обновлены) в регистр Счетчики БП 7.7.
            |Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    ВыполнитьОперациюЗагрузкиДанныхСчетчиков(ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение);
КонецПроцедуры

// ++ Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг ++
//
// Выполняет загрузку данных услуг (объектов абонентов) в регистр ГП_УслугиБП77
&НаКлиенте
Асинх Процедура ЗагрузитьУслуги(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Данные счетчиков будут загружены (обновлены) в регистр Услуги БП 7.7.
            |Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Не выбран файл для загрузки.");
        Возврат;
    КонецЕсли;

    РезультатЗагрузки = ЗагрузитьДанныеУслугБП77ВРегистрНаСервере(ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].Хранение);

    ТекстСообщенияРезультатОперации = "";
    Если РезультатЗагрузки.Успех = Ложь Тогда
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных услуг не выполнена.
                |Подробная информация: %1", РезультатЗагрузки.ТекстСообщения);
    Иначе
        ТекстСообщенияРезультатОперации = СтрШаблон("Загрузка данных услуг выполнена успешно.
                |Записано (обновлено) %1 записей регистра", РезультатЗагрузки.КоличествоЗаписанныхУслуг);
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщенияРезультатОперации);
КонецПроцедуры // -- Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг --

// Выполняет обновление всех данных записей счетчиков в регистре ГП_СчетчикиБП77
&НаКлиенте
Асинх Процедура ОбновитьСчетчикиИзРегистра(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Будет выполнено обновление значений всех счетчиков ИБ по данным из регистра Счетчики БП 7.7.
            |Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    ВыполнитьОперациюОбновленияСчетчиков();
КонецПроцедуры

// Удаляет все счетчики с заполненным значением реквизита ГП_ИдентификаторБП7
&НаКлиенте
Асинх Процедура УдалитьВсеСчетчикиБП77(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Все счетчики созданные из БП 7.7 будут помечены на удаление. Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    КоличествоУдаленныхСчетчиков = УдалитьВсеСчетчикиБП77НаСервере();
    ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон("Помечено на удаление %1 счетчиков", КоличествоУдаленныхСчетчиков));
КонецПроцедуры

// Выполняет сопоставление счетчиков и записей регистров, записывает ссылки на счетчик в регистр ГП_СчетчикиБП77
&НаКлиенте
Асинх Процедура СопоставитьСчетчики(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Значения поля Счетчик в регистре ГП_СчетчикиБП77 будут обновлены для всех записей.
            |Продолжить?",
            РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    РезультатСопоставления = СопоставитьСчетчикиНаСервере();
    Если РезультатСопоставления.Успех = Ложь Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю(
            СтрШаблон("Сопоставление счетчиков не выполнено.
                |Сообщение о причине: %1", РезультатСопоставления.ТекстСообщения));
    Иначе
        ОбщегоНазначенияКлиент.СообщитьПользователю(
            СтрШаблон("Сопоставление выполнено успешно.
                |Обновлено ""%1"" записей регистра", РезультатСопоставления.ОбновленныеСчетчики.Количество()));
    КонецЕсли;
КонецПроцедуры

// ++ Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг ++
//
&НаКлиенте
Асинх Процедура СопоставитьУслугиСЛицевымиСчетами(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Значения поля ЛицевойСчет в регистре ГП_УслугиБП77 будут обновлены для всех записей.
            |Продолжить?",
            РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    РезультатСопоставления = СопоставитьУслугиСЛицевымиСчетамиНаСервере();

    ТекстСообщенияРезультатОперации = "";
    Если РезультатСопоставления.Успех = Ложь Тогда
        ТекстСообщенияРезультатОперации = СтрШаблон("Сопоставление услуг не выполнено.
                |Сообщение о причине: %1", РезультатСопоставления.ТекстСообщения);
    Иначе
        ТекстСообщенияРезультатОперации = СтрШаблон("Сопоставление выполнено успешно.
                |Обновлено ""%1"" записей регистра", РезультатСопоставления.ОбновленныеУслуги.Количество());
    КонецЕсли;
    ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщенияРезультатОперации);
КонецПроцедуры // -- Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг --

&НаКлиенте
Асинх Процедура СоздатьДокументыУправленияУслугами(Команда)
    РезультатДиалога = Ждать ВопросАсинх(
            "Будут созданы документы ""Назначение услуг"" по данным записей регистра Счетчики БП 7.7.
            |Продолжить?", РежимДиалогаВопрос.ДаНет, , , "Внимание!");
    Если РезультатДиалога <> КодВозвратаДиалога.Да Тогда
        Возврат;
    КонецЕсли;

    Если ЭтотОбъект.СписокВидовУслугДляУправленияУслугами.Количество() = 0 Тогда
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбраны услуги.");
        Возврат;
    КонецЕсли;

    МассивВидовУслугБП77 = Новый Массив;
    Для Каждого ЭлементУслуги Из ЭтотОбъект.СписокВидовУслугДляУправленияУслугами Цикл
        МассивВидовУслугБП77.Добавить(ЭлементУслуги.Значение);
    КонецЦикла;

    РезультатСозданияДокументов = СоздатьДокументыУправленияУслугамиНаСервере(МассивВидовУслугБП77);
    Для Каждого СообщениеОбОшибке Из РезультатСозданияДокументов.СообщенияОбОшибках Цикл
        ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке);
    КонецЦикла;

    СообщениеПользователю = "";
    Если РезультатСозданияДокументов.Успех = Ложь Тогда
        СообщениеПользователю = СтрШаблон("Создание документов не выполнено.
                |Информация о проблеме: %1", РезультатСозданияДокументов.ТекстСообщения);
    Иначе
        СообщениеПользователю = СтрШаблон("Создание документов выполнено %1.
                |Создано ""%2"" новых документов",
                ?(РезультатСозданияДокументов.СообщенияОбОшибках.Количество() > 0, "с ошибками", "успешно"),
                РезультатСозданияДокументов.СозданныеДокументыУправленияУслугами.Количество());
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеПользователю);
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы
// -- Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики --

// ++ Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики ++
#Область СлужебныеПроцедурыИФункции

#Область ФоновыеОперацииВыполнение
// Выполняет операцию загрузки данных счетчиков в регистр
// Параметры:
//  АдресФайла - Строка
&НаКлиенте
Процедура ВыполнитьОперациюЗагрузкиДанныхСчетчиков(Знач АдресФайла)
    ЭтотОбъект.АдресХранилищаРезультатаОперации = "";
    ЭтотОбъект.ТекстСообщенияРезультатОперации = "";

    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось получить данные для загрузки'"));
        Возврат;
    КонецЕсли;

    Результат = ЗагрузитьДанныеСчетчиковВФонеНаСервере(АдресФайла);

    Если НЕ Результат.ЗаданиеВыполнено Тогда
        ИдентификаторЗадания = Результат.ИдентификаторЗадания;

        ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
        ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
        ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтотОбъект, ИдентификаторЗадания);
    КонецЕсли;
КонецПроцедуры

// Выполняет операцию обновления и создания счетчиков (КВП_Счетчик) по данным счетчиков из БП77 (из регистра)
&НаКлиенте
Процедура ВыполнитьОперациюОбновленияСчетчиков()
    ЭтотОбъект.АдресХранилищаРезультатаОперации = "";
    ЭтотОбъект.ТекстСообщенияРезультатОперации = "";

    Результат = ОбновитьСчетчикиИзРегистраВФонеНаСервере();

    Если НЕ Результат.ЗаданиеВыполнено Тогда
        ИдентификаторЗадания = Результат.ИдентификаторЗадания;

        ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
        ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
        ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтотОбъект, ИдентификаторЗадания);
    КонецЕсли;
КонецПроцедуры
#КонецОбласти // ФоновыеОперацииВыполнение

#Область ФоновыеОперацииИнфраструктура
// Выполняет фоновую операцию чтение данных счетчиков из файла с последующей загрузкой в регистр
// Параметры:
//  АдресФайла - Строка
// Возвращаемое значение:
//  - Структура
//      * ЗаданиеВыполнено - Булево
//      * ИдентификаторЗадания - Строка
//      * АдресХранилища - Строка
//      * Задание - Строка - Имя задания (Устарела. Не используется)
//      * НаименованиеЗадания - Строка - Наименование задания (Устарела. Не используется)
&НаСервере
Функция ЗагрузитьДанныеСчетчиковВФонеНаСервере(Знач АдресФайла)
    НаименованиеЗадания = НСтр("ru = 'Загрузка данных счетчиков'");
    РезультатВыполненияОперации = Новый Структура(
            "Задание, НаименованиеЗадания, ЗаданиеВыполнено, ИдентификаторЗадания, АдресХранилища",
            "ЗагрузкаДанныхСчетчиков", НаименованиеЗадания, Ложь);

    ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);

    ПараметрыВыгрузки = Новый Структура;
    ПараметрыВыгрузки.Вставить("ДвоичныеДанныеФайла", ДвоичныеДанныеФайла);

    Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
        ЭтотОбъект.АдресХранилищаРезультатаОперации = ПоместитьВоВременноеХранилище(Неопределено, ЭтотОбъект.УникальныйИдентификатор);
        Обработки.ГП_ЗагрузкаСчетчиковБП77.ЗагрузитьДанныеСчетчиковВРегистр(ПараметрыВыгрузки, ЭтотОбъект.АдресХранилищаРезультатаОперации);
        РезультатВыполненияОперации.ЗаданиеВыполнено = Истина;
    Иначе
        РезультатВыполненияОперации = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
                ЭтотОбъект.УникальныйИдентификатор,
                "Обработки.ГП_ЗагрузкаСчетчиковБП77.ЗагрузитьДанныеСчетчиковВРегистр",
                ПараметрыВыгрузки,
                НаименованиеЗадания);

        ЭтотОбъект.АдресХранилищаРезультатаОперации = РезультатВыполненияОперации.АдресХранилища;
    КонецЕсли;

    Если РезультатВыполненияОперации.ЗаданиеВыполнено Тогда
        ЗагрузитьРезультатНаСервере();
    КонецЕсли;

    Возврат РезультатВыполненияОперации;
КонецФункции

// Выполняет фоновую операцию обновления и создания счетчиков (КВП_Счетчик) по данным счетчиков из БП77 (из регистра)
// Возвращаемое значение:
//  - Структура
//      * ЗаданиеВыполнено - Булево
//      * ИдентификаторЗадания - Строка
//      * АдресХранилища - Строка
//      * Задание - Строка - Имя задания (Устарела. Не используется)
//      * НаименованиеЗадания - Строка - Наименование задания (Устарела. Не используется)
&НаСервере
Функция ОбновитьСчетчикиИзРегистраВФонеНаСервере()
    НаименованиеЗадания = НСтр("ru = 'Обновление счетчиков'");
    РезультатВыполненияОперации = Новый Структура(
            "Задание, НаименованиеЗадания, ЗаданиеВыполнено, ИдентификаторЗадания, АдресХранилища",
            "ОбновлениеСчетчиков", НаименованиеЗадания, Ложь);

    ПараметрыОбновления = Новый Структура("СоздаватьНовые", Истина);
    Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
        ЭтотОбъект.АдресХранилищаРезультатаОперации = ПоместитьВоВременноеХранилище(Неопределено, ЭтотОбъект.УникальныйИдентификатор);
        Обработки.ГП_ЗагрузкаСчетчиковБП77.ОбновитьСчетчикиИзРегистра(ПараметрыОбновления, ЭтотОбъект.АдресХранилищаРезультатаОперации);
        РезультатВыполненияОперации.ЗаданиеВыполнено = Истина;
    Иначе
        РезультатВыполненияОперации = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
                ЭтотОбъект.УникальныйИдентификатор,
                "Обработки.ГП_ЗагрузкаСчетчиковБП77.ОбновитьСчетчикиИзРегистра",
                ПараметрыОбновления,
                НаименованиеЗадания);

        ЭтотОбъект.АдресХранилищаРезультатаОперации = РезультатВыполненияОперации.АдресХранилища;
    КонецЕсли;

    Если РезультатВыполненияОперации.ЗаданиеВыполнено Тогда
        ЗагрузитьРезультатНаСервере();
    КонецЕсли;

    Возврат РезультатВыполненияОперации;
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
    Попытка
        Если ФормаДлительнойОперации.Открыта()
            И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
            Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
                ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
                ЗагрузитьРезультатНаСервере();
            Иначе
                ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
                ПодключитьОбработчикОжидания(
                    "Подключаемый_ПроверитьВыполнениеЗадания",
                    ПараметрыОбработчикаОжидания.ТекущийИнтервал,
                    Истина);
            КонецЕсли;
        КонецЕсли;
    Исключение
        ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
        ВызватьИсключение;
    КонецПопытки;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(Знач ИдентификаторЗадания)
    Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
КонецФункции

&НаСервере
Процедура ЗагрузитьРезультатНаСервере()
    ЗавершенаУспешно = Ложь;
    Результат = ПолучитьИзВременногоХранилища(ЭтотОбъект.АдресХранилищаРезультатаОперации);

    Если ТипЗнч(Результат) = Тип("Структура")
        И Результат.Свойство("ТекстСообщения") Тогда
        ЭтотОбъект.ТекстСообщенияРезультатОперации = Результат.ТекстСообщения;

        Если Результат.Свойство("Успех") Тогда
            ЗавершенаУспешно = Результат.Успех;
        КонецЕсли;

        Если Результат.Свойство("КоличествоЗаписанныхСчетчиков") Тогда
            ЭтотОбъект.ТекстСообщенияРезультатОперации = СтрШаблон("Записано / обновлено %1 записей счетчиков.",
                    Результат.КоличествоЗаписанныхСчетчиков);
        ИначеЕсли Результат.Свойство("ОбновленныеСчетчики") И Результат.Свойство("НовыеСчетчики") Тогда
            ЭтотОбъект.ТекстСообщенияРезультатОперации = СтрШаблон("Создано %1 счетчиков, обновлено %2 счетчиков.",
                    Результат.НовыеСчетчики.Количество(), Результат.ОбновленныеСчетчики.Количество());
        КонецЕсли;
    Иначе
        ЭтотОбъект.ТекстСообщенияРезультатОперации = "Завершено.";
    КонецЕсли;

    Если ЗавершенаУспешно Тогда
        ЭтотОбъект.ТекстСообщенияРезультатОперации = СтрШаблон(
                "Операция выполнена успешно.
                |Информация о результате выполнения: %1", ЭтотОбъект.ТекстСообщенияРезультатОперации);
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаФайлаЗавершение(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
    Если ТипЗнч(ПомещенныеФайлы) <> Тип("Массив") Тогда
        Возврат;
    КонецЕсли;

    ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Очистить();
    ЭтотОбъект.ИмяВыбранногоФайла = "";
    Для Каждого Файл Из ПомещенныеФайлы Цикл
        НоваяСтрокаИнформации = ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрокаИнформации, Файл);
    КонецЦикла;

    Если ЭтотОбъект.ИнформацияОЗагруженныхФайлах.Количество() > 0 Тогда
        ЭтотОбъект.ИмяВыбранногоФайла = ЭтотОбъект.ИнформацияОЗагруженныхФайлах[0].ПолноеИмя;
    КонецЕсли;

КонецПроцедуры
#КонецОбласти // ФоновыеОперацииИнфраструктура

// Удаляет все созданные пл данным БП77 счетчики из ИБ
// Возвращаемое значение:
//  - Число - Количество удаленных счетчиков
&НаСервереБезКонтекста
Функция УдалитьВсеСчетчикиБП77НаСервере()
    Возврат Обработки.ГП_ЗагрузкаСчетчиковБП77.УдалитьВсеСчетчикиБП77();
КонецФункции

// Параметры:
//  МассивВидовУслугБП77 - Массив из Строка
&НаСервереБезКонтекста
Функция СоздатьДокументыУправленияУслугамиНаСервере(Знач МассивВидовУслугБП77)
    Возврат Обработки.ГП_ЗагрузкаСчетчиковБП77.СоздатьДокументыУправлениеУслугамиПоДаннымРегистраСчетчиковБП77(
        МассивВидовУслугБП77);
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * ОбновленныеСчетчики - Массив из СправочникСсылка.КВП_Счетчики
//      * ТекстСообщения - Строка
&НаСервереБезКонтекста
Функция СопоставитьСчетчикиНаСервере()
    // Получение данных счетчиков БП77 из регистра
    ТаблицаСчетчиковБП77 = Обработки.ГП_ЗагрузкаСчетчиковБП77.ПолучитьДанныеСчетчиковИзРегистра(Ложь);

    Возврат Обработки.ГП_ЗагрузкаСчетчиковБП77.УстановитьСоответствияСчетчиковРегистраСОбъектамиИБ(ТаблицаСчетчиковБП77, Истина);
КонецФункции

// ++ Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг ++
//
// Параметры:
//  АдресФайла - Строка
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанныхУслуг - Число
//      * ТекстСообщения - Строка
//  - Неопределено
&НаСервереБезКонтекста
Функция ЗагрузитьДанныеУслугБП77ВРегистрНаСервере(Знач АдресФайла)
    Если АдресФайла = Неопределено Тогда
        ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось получить данные для загрузки услуг'"));
        Возврат Неопределено;
    КонецЕсли;

    ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
    Возврат Обработки.ГП_ЗагрузкаСчетчиковБП77.ЗагрузитьДанныеУслугВРегистр(ДвоичныеДанныеФайла, Неопределено);
КонецФункции // -- Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг --

// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * ОбновленныеСчетчики - Массив из СправочникСсылка.КВП_Счетчики
//      * ТекстСообщения - Строка
&НаСервереБезКонтекста
Функция СопоставитьУслугиСЛицевымиСчетамиНаСервере()
    Возврат Обработки.ГП_ЗагрузкаСчетчиковБП77.УстановитьСоответствияУслугСЛицевымиСчетами(Истина);
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// -- Гарант+ Килипенко 15.07.2024 [F00225713] Перенос из БП 7.7 в БП3 справочника Счетчики --
