// Гарант+ Килипенко 15.10.2024 [F00229738] ПФ Начисления услуг ++
#Область ПрограммныйИнтерфейс

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ГП_НачислениеУслуг") Тогда
        ДокументДляПечати = Новый ТабличныйДокумент;
        Попытка
            ДокументДляПечати = СформироватьПечатнуюФормуНачисленияУслуг(
                    МассивОбъектов, ОбъектыПечати);
        Исключение
            ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Ошибка формирования печатной формы. %1",
                    ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке())));
        КонецПопытки;

        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
            КоллекцияПечатныхФорм,
            "ГП_НачислениеУслуг",
            НСтр("ru = 'Начисления'"),
            ДокументДляПечати);
    КонецЕсли;
КонецПроцедуры

// Параметры:
//  МассивОбъектов - Массив из ДокументСсылка.КВП_НачислениеУслуг
//  ОбъектыПечати
//  Макет - ТабличныйДокумент, Неопределено
//  ПривилегированныйРежим - Булево
Функция СформироватьПечатнуюФормуНачисленияУслуг(
        Знач МассивОбъектов, Знач ОбъектыПечати, Знач Макет = Неопределено, ПривилегированныйРежим = Истина) Экспорт

    Если ПривилегированныйРежим Тогда
        УстановитьПривилегированныйРежим(Истина);
    КонецЕсли;

    ТабличныйДокумент = Новый ТабличныйДокумент;
    ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КВП_НачислениеУслуг_НачислениеУслуг";

    Макет = ?(Макет = Неопределено, ПолучитьМакет("ГП_ПФ_Начисления"), Макет);
    ПервыйДокумент = Истина;

    Для Каждого ДокументСсылка Из МассивОбъектов Цикл
        Если НЕ ПервыйДокумент Тогда
            ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

        ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
        ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
        ОбластьИтоговТаблицы = Макет.ПолучитьОбласть("ИтогиТаблицы");

        ДанныеЗаполненияШапки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, Новый Структура("Дата, Номер"));
        ОбластьШапка.Параметры.Заполнить(ДанныеЗаполненияШапки);
        ОбластьШапка.Параметры.НомерДокумента = ДанныеЗаполненияШапки.Номер;
        ОбластьШапка.Параметры.Дата = Формат(ДанныеЗаполненияШапки.Дата, "ДФ='дд ММММ гггг'") + " г.";

        ТабличныйДокумент.Вывести(ОбластьШапка);

        ДанныеЗаполненияТЧ = ПоучитьДанныеЗаполненияНачисленияУслуг(ДокументСсылка);
        КоличествоСтрокДанныхТЧ = ДанныеЗаполненияТЧ.Количество();
        МассивВыводимыхОбластей = Новый Массив;
        НомерСтрокиТЧ = 0;
        ОбщаяСуммаНачислений = 0;
        Для Каждого СтрокаДанных Из ДанныеЗаполненияТЧ Цикл
            Если СтрокаДанных.СуммаНачисления = 0 Тогда
                Продолжить; // Дополнение к ТЗ - не выводить строки с нулевыми суммами
            КонецЕсли;

            НомерСтрокиТЧ = НомерСтрокиТЧ + 1;

            ОбластьСтрокаТЧ = Макет.ПолучитьОбласть("СтрокаТЧ");
            ОбластьСтрокаТЧ.Параметры.Заполнить(СтрокаДанных);

            ОбластьСтрокаТЧ.Параметры.НомерСтроки = НомерСтрокиТЧ;
            ОбластьСтрокаТЧ.Параметры.Сумма = СтрокаДанных.СуммаНачисления;
            ОбщаяСуммаНачислений = ОбщаяСуммаНачислений + СтрокаДанных.СуммаНачисления;

            Если НомерСтрокиТЧ = 1 Тогда
                ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
            Иначе
                МассивВыводимыхОбластей.Очистить();
                МассивВыводимыхОбластей.Добавить(ОбластьСтрокаТЧ);

                Если НомерСтрокиТЧ = КоличествоСтрокДанныхТЧ Тогда
                    МассивВыводимыхОбластей.Добавить(ОбластьИтоговТаблицы);
                КонецЕсли;

                Если НомерСтрокиТЧ <> 1 И ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) = Ложь Тогда
                    ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
                    ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
                КонецЕсли;
            КонецЕсли;

            ТабличныйДокумент.Вывести(ОбластьСтрокаТЧ);
        КонецЦикла;

        ОбластьИтоговТаблицы.Параметры.Итого = ОбщаяСуммаНачислений;
        ТабличныйДокумент.Вывести(ОбластьИтоговТаблицы);

        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДокументСсылка);
    КонецЦикла;

    ТабличныйДокумент.АвтоМасштаб = Истина;

    Если ПривилегированныйРежим И ПривилегированныйРежим() Тогда
        УстановитьПривилегированныйРежим(Ложь);
    КонецЕсли;

    Возврат ТабличныйДокумент;
КонецФункции

Функция ПоучитьДанныеЗаполненияНачисленияУслуг(Знач ДокументСсылка) Экспорт
    Запрос = Новый Запрос;
    СтруктураТекстаЗапроса = ПолучитьТекстЗапросаДанныхЗаполненияНачисленияУслуг();
    Запрос.Текст = СтруктураТекстаЗапроса.ТекстЗапроса;

    Запрос.УстановитьПараметр(СтруктураТекстаЗапроса.Параметры.ДокументСсылка, ДокументСсылка);
    Запрос.УстановитьПараметр(СтруктураТекстаЗапроса.Параметры.УслугаКанализация, ГП_РаботаСУслугами.ПолучитьУслугуКанализации().Ссылка);
    Запрос.УстановитьПараметр(СтруктураТекстаЗапроса.Параметры.УслугаХВС, ГП_РаботаСУслугами.ПолучитьУслугуХолодноеВодоснабжение().Ссылка);
    Запрос.УстановитьПараметр(СтруктураТекстаЗапроса.Параметры.ТаблицаПриоритетовУслуг,
        ГП_РаботаСУслугами.ПолучитьТаблицуПриоритетовУслуг());

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 15.10.2024 [F00229738] ПФ Начисления услуг --

// Гарант+ Килипенко 15.10.2024 [F00229738] ПФ Начисления услуг ++
#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстЗапросаДанныхЗаполненияНачисленияУслуг()
    РезультатФункции = Новый Структура("ТекстЗапроса, Параметры", "", Новый Структура);

    РезультатФункции.ТекстЗапроса =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
        |	КВП_НачислениеУслуг.Ссылка КАК Ссылка,
        |	КВП_НачислениеУслуг.Номер КАК Номер,
        |	КВП_НачислениеУслуг.Дата КАК Дата,
        |	КВП_НачислениеУслуг.Проведен КАК Проведен,
        |	КВП_НачислениеУслуг.Организация КАК Организация,
        |	КВП_НачислениеУслуг.Услуга КАК Услуга,
        |	КВП_НачислениеУслуг.Объект КАК Объект,
        |	КВП_НачислениеУслуг.ВидОперации КАК ВидОперации,
        |	КВП_НачислениеУслуг.КоличествоДнейНачисления КАК КоличествоДнейНачисления
        |ПОМЕСТИТЬ ВТ_ДанныеДокумента
        |ИЗ
        |	Документ.КВП_НачислениеУслуг КАК КВП_НачислениеУслуг
        |ГДЕ
        |	КВП_НачислениеУслуг.Проведен
        |	И КВП_НачислениеУслуг.Ссылка = &ДокументНачисленияУслугСсылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ТаблицаПриоритетовУслуг.Услуга,
        |	ТаблицаПриоритетовУслуг.Приоритет
        |ПОМЕСТИТЬ ВТ_ТаблицаПриоритетовУслуг
        |ИЗ
        |	&ТаблицаПриоритетовУслуг КАК ТаблицаПриоритетовУслуг
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	УПЖКХ_Начисления.Период КАК Период,
        |	УПЖКХ_Начисления.Регистратор КАК Регистратор,
        |	УПЖКХ_Начисления.НомерСтроки КАК НомерСтроки,
        |	УПЖКХ_Начисления.Организация КАК Организация,
        |	УПЖКХ_Начисления.ЛицевойСчет КАК ЛицевойСчет,
        |	УПЖКХ_Начисления.Услуга.Наименование + "", "" + УПЖКХ_Начисления.ЛицевойСчет.Наименование КАК ПредставлениеРаботУслуг,
        |	УПЖКХ_Начисления.Услуга КАК Услуга,
        |	УПЖКХ_Начисления.Договор КАК Договор,
        |	УПЖКХ_Начисления.УслугаОснование КАК УслугаОснование,
        |	УПЖКХ_Начисления.СоставнаяУслуга КАК СоставнаяУслуга,
        |	УПЖКХ_Начисления.РазделУчета КАК РазделУчета,
        |	УПЖКХ_Начисления.ВидНачисления КАК ВидНачисления,
        |	УПЖКХ_Начисления.ИсточникОплаты КАК ИсточникОплаты,
        |	УПЖКХ_Начисления.МесяцНачисления КАК МесяцНачисления,
        |	УПЖКХ_Начисления.Тариф КАК Тариф,
        |	УПЖКХ_Начисления.ВидТарифа КАК ВидТарифа,
        |	УПЖКХ_Начисления.МесяцРассрочки КАК МесяцРассрочки,
        |	УПЖКХ_Начисления.Количество КАК Количество,
        |	УПЖКХ_Начисления.УровеньРаспределения КАК УровеньРаспределения,
        |	УПЖКХ_Начисления.ОснованиеКорректировки КАК ОснованиеКорректировки,
        |	УПЖКХ_Начисления.ТипНачисления КАК ТипНачисления,
        |	УПЖКХ_Начисления.СуммаНачисления КАК СуммаНачисления,
        |	УПЖКХ_Начисления.ДнейНачислено КАК ДнейНачислено,
        |	УПЖКХ_Начисления.Начало КАК Начало,
        |	УПЖКХ_Начисления.Окончание КАК Окончание,
        |	УПЖКХ_Начисления.Тарифность КАК Тарифность,
        |	УПЖКХ_Начисления.КоличествоУчетное КАК КоличествоУчетное,
        |	ВТ_ТаблицаПриоритетовУслуг.Приоритет КАК ПриоритетУслуги
        |ПОМЕСТИТЬ ВТ_НачислениеУслуг
        |ИЗ
        |	РегистрНакопления.УПЖКХ_Начисления КАК УПЖКХ_Начисления
        |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПриоритетовУслуг КАК ВТ_ТаблицаПриоритетовУслуг
        |		ПО УПЖКХ_Начисления.Услуга = ВТ_ТаблицаПриоритетовУслуг.Услуга
        |ГДЕ
        |	УПЖКХ_Начисления.Активность = ИСТИНА
        |	И УПЖКХ_Начисления.Регистратор В
        |			(ВЫБРАТЬ
        |				Т.Ссылка
        |			ИЗ
        |				ВТ_ДанныеДокумента КАК Т)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_НачислениеУслуг.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_НачислениеУслуг.ПредставлениеРаботУслуг КАК ПредставлениеРаботУслуг,
        |	ВТ_НачислениеУслуг.Услуга КАК Услуга,
        |	ВТ_НачислениеУслуг.Договор КАК Договор,
        |	ВЫБОР
        |		КОГДА ВТ_НачислениеУслуг.Услуга = &УслугаКанализация И ВТ_НачислениеУслуг.УслугаОснование <> ЗНАЧЕНИЕ(Справочник.КВП_Услуги.ПустаяСсылка)
        |			ТОГДА &УслугаХВС
        |		ИНАЧЕ ВТ_НачислениеУслуг.УслугаОснование
        |	КОНЕЦ КАК УслугаОснование,
        |	ВТ_НачислениеУслуг.СоставнаяУслуга КАК СоставнаяУслуга,
        |	ВТ_НачислениеУслуг.РазделУчета КАК РазделУчета,
        |	ВТ_НачислениеУслуг.ВидНачисления КАК ВидНачисления,
        |	ВТ_НачислениеУслуг.ИсточникОплаты КАК ИсточникОплаты,
        |	МАКСИМУМ(ВТ_НачислениеУслуг.МесяцНачисления) КАК МесяцНачисления,
        |	ВТ_НачислениеУслуг.Тариф КАК Тариф,
        |	ВТ_НачислениеУслуг.ВидТарифа КАК ВидТарифа,
        |	МАКСИМУМ(ВТ_НачислениеУслуг.МесяцРассрочки) КАК МесяцРассрочки,
        |	СУММА(ВТ_НачислениеУслуг.Количество) КАК Количество,
        |	ВТ_НачислениеУслуг.УровеньРаспределения КАК УровеньРаспределения,
        |	ВТ_НачислениеУслуг.ОснованиеКорректировки КАК ОснованиеКорректировки,
        |	ВТ_НачислениеУслуг.ТипНачисления КАК ТипНачисления,
        |	СУММА(ВТ_НачислениеУслуг.СуммаНачисления) КАК СуммаНачисления,
        |	СУММА(ВТ_НачислениеУслуг.ДнейНачислено) КАК ДнейНачислено,
        |	МИНИМУМ(ВТ_НачислениеУслуг.Начало) КАК Начало,
        |	МАКСИМУМ(ВТ_НачислениеУслуг.Окончание) КАК Окончание,
        |	ВТ_НачислениеУслуг.Тарифность КАК Тарифность,
        |	СУММА(ВТ_НачислениеУслуг.КоличествоУчетное) КАК КоличествоУчетное,
        |	МИНИМУМ(ВТ_НачислениеУслуг.ПриоритетУслуги) КАК ПриоритетУслуги
        |ИЗ
        |	ВТ_НачислениеУслуг КАК ВТ_НачислениеУслуг
        |
        |СГРУППИРОВАТЬ ПО
        |	ЛицевойСчет,
        |	ПредставлениеРаботУслуг,
        |	Услуга,
        |	Договор,
        |	ВЫБОР
        |		КОГДА ВТ_НачислениеУслуг.Услуга = &УслугаКанализация И ВТ_НачислениеУслуг.УслугаОснование <> ЗНАЧЕНИЕ(Справочник.КВП_Услуги.ПустаяСсылка)
        |			ТОГДА &УслугаХВС
        |		ИНАЧЕ ВТ_НачислениеУслуг.УслугаОснование
        |	КОНЕЦ,
        |	СоставнаяУслуга,
        |	РазделУчета,
        |	ВидНачисления,
        |	ИсточникОплаты,
        |	Тариф,
        |	ВидТарифа,
        |	УровеньРаспределения,
        |	ОснованиеКорректировки,
        |	ТипНачисления,
        |	Тарифность
        |
        |УПОРЯДОЧИТЬ ПО
        |	ВТ_НачислениеУслуг.ЛицевойСчет,
        |	МИНИМУМ(ВТ_НачислениеУслуг.ПриоритетУслуги),
        |	ВТ_НачислениеУслуг.Услуга
        |";

    РезультатФункции.Параметры.Вставить("ДокументСсылка", "ДокументНачисленияУслугСсылка");
    РезультатФункции.Параметры.Вставить("УслугаКанализация", "УслугаКанализация");
    РезультатФункции.Параметры.Вставить("УслугаХВС", "УслугаХВС");
    РезультатФункции.Параметры.Вставить("ТаблицаПриоритетовУслуг", "ТаблицаПриоритетовУслуг");

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 15.10.2024 [F00229738] ПФ Начисления услуг --
