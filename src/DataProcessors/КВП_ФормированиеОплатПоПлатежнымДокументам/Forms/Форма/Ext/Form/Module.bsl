// Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++
#Область ПереопределениеСтандартногоФункционала

&НаСервере
&ИзменениеИКонтроль("ПроверитьНаОшибкиСтрокиДерева")
Процедура ГП_ПроверитьНаОшибкиСтрокиДерева(ИмяДерева, ПриЗаполненииТаблицы)
    #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

    ЭтотОбъект.ГП_ДополнительныеСвойстваФормы.КэшВетокРаспределения = Новый Соответствие;

    #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --

    Для Каждого ТекВетка Из ЭтотОбъект[ИмяДерева].ПолучитьЭлементы() Цикл

        ГотовыхОтмеченныхСтрок    = 0;
        КоличествоОтмеченныхСтрок = 0;

        Для Каждого ТекСтрока Из ТекВетка.ПолучитьЭлементы() Цикл

            Если Объект.ЭтоПоискПоКонтрагенту Тогда
                ПроверкаНаОшибки(ТекСтрока.ПолучитьИдентификатор(), ПриЗаполненииТаблицы);
            Иначе
                ПроверкаНаОшибкиПоискПоНазначению(ТекСтрока.ПолучитьИдентификатор(), ПриЗаполненииТаблицы);
            КонецЕсли;

            Если ТекСтрока.Пометка Тогда
                КоличествоОтмеченныхСтрок = КоличествоОтмеченныхСтрок + 1;
                ГотовыхОтмеченныхСтрок    = ГотовыхОтмеченныхСтрок + ТекСтрока.Готовность;
            КонецЕсли;

        КонецЦикла;

        Если КоличествоОтмеченныхСтрок > 0
            И ГотовыхОтмеченныхСтрок = КоличествоОтмеченныхСтрок Тогда
            ТекВетка.Готовность = 1;
        Иначе
            ТекВетка.Готовность = 0;
        КонецЕсли;

    КонецЦикла;

    #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

    ГП_РаспределитьСуммыСтрокДереваСОшибкамиНаСервере();

    #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ПроверкаНаОшибки")
Процедура ГП_ПроверкаНаОшибки(ИдентификаторСтроки, ПриЗаполненииТаблицы)

    ТекВетка = ДеревоПлатежныхДокументовСОшибками.НайтиПоИдентификатору(ИдентификаторСтроки);
    #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

    РодительТекВетки = ТекВетка.ПолучитьРодителя();
    ГотовностьДляРаспределения = РодительТекВетки <> Неопределено;

    #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --

    Если НЕ ТекВетка.ПолучитьРодителя() = Неопределено Тогда

        // Если найдены какие-либо ошибки, записываем информацию о них в строку описания ошибки.
        ОписаниеОшибки = "";

        Готовность = 1;

        Если НЕ ЗначениеЗаполнено(ТекВетка.Контрагент) Тогда
            ДополнитьОписаниеОшибки(ОписаниеОшибки, "Не указан лицевой счет");
            Готовность = 0;
        ИначеЕсли НЕ ТекВетка.КонтрагентСовпадает Тогда
            ДополнитьОписаниеОшибки(ОписаниеОшибки, "Лицевой счет не соответствует контрагенту");
            // Если сумма равна нулю, то переносить можно.
            Готовность = ?(ТекВетка.Сумма = 0, 1, 0);
        ИначеЕсли НЕ ТекВетка.ДоговорСовпадает Тогда
            // Прямой ошибкой не является, позволяет занести ветку в строку без ошибок.
            ДополнитьОписаниеОшибки(ОписаниеОшибки, "Лицевой счет не соответствует договору контрагента");
            // Готовность = 0;
        КонецЕсли;
        #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

        ГотовностьДляРаспределения = ГотовностьДляРаспределения И (Готовность > 0);

        #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --

        Если ТекВетка.Сумма = 0 И НЕ (ТекВетка.ЕстьРО И Не ТекВетка.ПолучитьРодителя() = Неопределено И ТекВетка.ПолучитьРодителя().СуммыСовпадают) Тогда
            ДополнитьОписаниеОшибки(ОписаниеОшибки, "Не указана сумма");
            Готовность = 0;

            Если ТекВетка.ДоговорСовпадает Тогда
                ТекВетка.ПолучитьРодителя().Готовность = 0;
            КонецЕсли;
            #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

            Готовность = ?(ГотовностьДляРаспределения = Истина, 1, 0);

            #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --
        КонецЕсли;

        Если НЕ ТекВетка.ПолучитьРодителя() = Неопределено И НЕ ТекВетка.ПолучитьРодителя().СуммыСовпадают Тогда
            ДополнитьОписаниеОшибки(ОписаниеОшибки, "Сумма оплат не совпадает с суммой платежного документа");
            Готовность = 0;
        КонецЕсли;

        ТекВетка.Готовность = Готовность;
        Если ПриЗаполненииТаблицы Тогда
            ТекВетка.Пометка = ?(ТекВетка.ЕстьРО, Истина, НЕ ТекВетка.Сумма = 0);
            #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

            ТекВетка.Пометка = Истина;

            #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --
        КонецЕсли;

        ТекВетка.ОписаниеОшибок = ОписаниеОшибки;
    КонецЕсли;

КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ЗаполнитьТаблицыДаннымиДляФормированияРОПоискПоКонтрагенту")
Функция ГП_ЗаполнитьТаблицыДаннымиДляФормированияРОПоискПоКонтрагенту(ТаблицаРО, ТаблицаБезРО, ТаблицаПлатежныхДокументов)
    #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

    ГП_ДополнитьКолонкиТаблицыБезРОНаСервере(ТаблицаБезРО);

    #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --

    // Для проверки на отсутствие помеченных строк в таблице "Без ошибок".
    НетПомеченных = Истина;

    Для каждого ТекВетка из ДеревоПлатежныхДокументовБезОшибок.ПолучитьЭлементы() Цикл

        // Проверка сумм. Если сумма помеченных строк не совпадает с суммой ветки,
        // то не формировать.
        СуммаПомеченных = 0;
        Для каждого ТекСтрока Из ТекВетка.ПолучитьЭлементы() Цикл
            Если ТекСтрока.Пометка Тогда
                СуммаПомеченных = СуммаПомеченных + ТекСтрока.Сумма;
            КонецЕсли;
        КонецЦикла;

        Если СуммаПомеченных = ТекВетка.Сумма Тогда

            // Хотя бы 1 ветка помечена.
            НетПомеченных = Ложь;

            ТекДата = ТекВетка.Дата;

            Для каждого ТекСтрока Из ТекВетка.ПолучитьЭлементы() Цикл

                Если ТекСтрока.Пометка Тогда
                    Если ЗначениеЗаполнено(ТекСтрока.Документ) Тогда
                        НоваяСтрока = ТаблицаРО.Добавить();
                        НоваяСтрока.ЛицевойСчет   = ТекСтрока.Контрагент;
                        НоваяСтрока.ДокументПД    = ТекВетка.Документ;
                        НоваяСтрока.ДокументРО    = ТекСтрока.Документ;
                        НоваяСтрока.СуммаРО       = ТекСтрока.Сумма;
                        НоваяСтрока.ВеткаИсточник = ТекСтрока;
                    #Удаление // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат
                    ИначеЕсли НЕ ТекСтрока.Сумма = 0 Тогда
                    #КонецУдаления
                    #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++
                    Иначе
                    #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --
                        НоваяСтрока               = ТаблицаБезРО.Добавить();
                        НоваяСтрока.Дата          = ТекДата;
                        НоваяСтрока.Документ      = ТекВетка.Документ;
                        НоваяСтрока.Сумма         = ТекСтрока.Сумма;
                        НоваяСтрока.Контрагент    = ТекСтрока.Контрагент;
                        НоваяСтрока.Дом           = ТекСтрока.Контрагент.Адрес.Владелец;
                        НоваяСтрока.ВеткаИсточник = ТекСтрока;
                        #Вставка

                        РодительскаяСтрока = ТекСтрока.ПолучитьРодителя();
                        НоваяСтрока.КонтрагентРодительВетки = ?(РодительскаяСтрока = Неопределено,
                            Справочники.Контрагенты.ПустаяСсылка(),
                            РодительскаяСтрока.Контрагент);

                        #КонецВставки
                        Если ТипЗнч(ТекВетка.Документ) = Тип("ДокументСсылка.ПоступлениеНаРасчетныйСчет") Тогда
                            НоваяСтрока.ВидОперации = Перечисления.КВП_ВидыОперацийРегистрацииОплаты.ПоступлениеНаБанковскийСчет;
                        ИначеЕсли ТипЗнч(ТекВетка.Документ) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
                            НоваяСтрока.ВидОперации = Перечисления.КВП_ВидыОперацийРегистрацииОплаты.ПоступлениеВКассу;
                        Иначе
                            НоваяСтрока.ВидОперации = Перечисления.КВП_ВидыОперацийРегистрацииОплаты.ПоступлениеСПлатежнойКарты;
                            НоваяСтрока.ВидОплаты   = ТекВетка.Документ.ВидОплаты;
                        КонецЕсли;
                        НоваяСтрока.ВариантРаспределенияОплатКапРемонт = ТекСтрока.ВариантРаспределенияОплатКапРемонт;
                        НоваяСтрока.НеРаспределятьОплатуНаДобровольноеСтрахование = ТекСтрока.НеРаспределятьОплатуНаДобровольноеСтрахование;
                        // Если требуется обновить КУДиР, то добавляем документ в таблицу.
                        Если ПерезаполнитьЗаписиКУДиР Тогда
                            НоваяСтрока = ТаблицаПлатежныхДокументов.Добавить();
                            НоваяСтрока.Документ  = ТекВетка.Документ;
                            НоваяСтрока.Обработан = Ложь;
                        КонецЕсли;
                    КонецЕсли;
                КонецЕсли;
            КонецЦикла;
        КонецЕсли;
    КонецЦикла;

    Возврат НетПомеченных;

КонецФункции

&НаСервере
&ИзменениеИКонтроль("СформироватьНовыеДокументыРО")
Процедура ГП_СформироватьНовыеДокументыРО(ПараметрыФормирования, ТаблицаБезРО, ТаблицаПлатежныхДокументов, МассивСформированныхДокументов)

    Если НЕ ТаблицаБезРО.Количество() = 0 Тогда

        НастройкиУчетнойПолитикиЖКХ = ПараметрыФормирования.НастройкиУчетнойПолитикиЖКХ;

        КоличествоСформированныхДокументов = 0;
        СуммаСформированныхДокументов      = 0;

        // Группируем данные.
        ГруппировкаПлатежей = ТаблицаБезРО.Скопировать();
        #Удаление // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат
        ГруппировкаПлатежей.Свернуть("Дата, Дом, ВидОперации, ВариантРаспределенияОплатКапРемонт, НеРаспределятьОплатуНаДобровольноеСтрахование, ВидОплаты");
        #КонецУдаления
        #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

        ПоляГруппировкиДанных = "Дата, КонтрагентРодительВетки, ВидОперации, ВариантРаспределенияОплатКапРемонт"
            + ", НеРаспределятьОплатуНаДобровольноеСтрахование, ВидОплаты, Документ";
        ГруппировкаПлатежей.Свернуть(ПоляГруппировкиДанных, "Сумма");

        #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --

        СтруктураОтбора = Новый Структура("Дата, Дом, ВидОперации, ВариантРаспределенияОплатКапРемонт, НеРаспределятьОплатуНаДобровольноеСтрахование, ВидОплаты");
        #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

        СтруктураОтбора = Новый Структура(ПоляГруппировкиДанных);

        #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --

        // Для каждой полученной группировки формируем РО.
        Для каждого ТекГруппировка из ГруппировкаПлатежей Цикл

            // Регистрируем оплату по л/с.
            // Состояние("Формирование документов ""Регистрация оплаты"" по зданию " + ТекГруппировка.Дом + " на дату " + ТекГруппировка.Дата);.

            РегистрацияОплаты      = Документы.КВП_РегистрацияОплаты.СоздатьДокумент();
            РегистрацияОплаты.Дата = ТекГруппировка.Дата;
            РегистрацияОплаты.УстановитьВремя(РежимАвтоВремя.Последним);

            СтруктураПараметров = Новый Структура();
            СтруктураПараметров.Вставить("Дата",        РегистрацияОплаты.Дата);
            СтруктураПараметров.Вставить("Организация", Объект.Организация);
            СтруктураПараметров.Вставить("ВидОперации", ТекГруппировка.ВидОперации);
            #Удаление // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат
            СтруктураПараметров.Вставить("Дом",         ТекГруппировка.Дом);
            #КонецУдаления
            СтруктураПараметров.Вставить("ВариантРаспределенияОплатКапРемонт", ТекГруппировка.ВариантРаспределенияОплатКапРемонт);
            СтруктураПараметров.Вставить("НеРаспределятьОплатуНаДобровольноеСтрахование", ТекГруппировка.НеРаспределятьОплатуНаДобровольноеСтрахование);
            СтруктураПараметров.Вставить("Комментарий", "# Документ создан автоматически");
            #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

            СтруктураПараметров.Вставить("Контрагент", ТекГруппировка.КонтрагентРодительВетки);

            #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --

            Если Не ТекГруппировка.ВидОплаты = Справочники.ВидыОплатОрганизаций.ПустаяСсылка() Тогда
                СтруктураПараметров.Вставить("ВидОплаты", ТекГруппировка.ВидОплаты);
            КонецЕсли;

            Если ЗначениеЗаполнено(Объект.ИсточникОплаты) Тогда
                СтруктураПараметров.Вставить("ИсточникОплаты", Объект.ИсточникОплаты);
            КонецЕсли;

            // Таблица оплат.
            ТаблицаОплат = Новый ТаблицаЗначений;
            ТаблицаОплат.Колонки.Добавить("Объект");
            ТаблицаОплат.Колонки.Добавить("Сумма");
            ТаблицаОплат.Колонки.Добавить("ДокументОплаты");

            // Отбираем данные об оплатах для текущего документа.
            СтруктураОтбора.Дата        = ТекГруппировка.Дата;
            #Удаление // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат
            СтруктураОтбора.Дом         = ТекГруппировка.Дом;
            #КонецУдаления
            СтруктураОтбора.ВидОперации = ТекГруппировка.ВидОперации;
            СтруктураОтбора.ВидОплаты   = ТекГруппировка.ВидОплаты;
            СтруктураОтбора.ВариантРаспределенияОплатКапРемонт = ТекГруппировка.ВариантРаспределенияОплатКапРемонт;
            СтруктураОтбора.НеРаспределятьОплатуНаДобровольноеСтрахование = ТекГруппировка.НеРаспределятьОплатуНаДобровольноеСтрахование;
            #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

            СтруктураОтбора.Документ = ТекГруппировка.Документ;
            СтруктураОтбора.КонтрагентРодительВетки = ТекГруппировка.КонтрагентРодительВетки;

            #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --

            СтрокиОтбора = ТаблицаБезРО.НайтиСтроки(СтруктураОтбора);

            // Начинаем транзакцию.
            Попытка
                НачатьТранзакцию();

                // Для получения ссылки на документ регистрации оплаты сначала записываем его.
                РегистрацияОплаты.Организация                                   = СтруктураПараметров.Организация;
                РегистрацияОплаты.ВариантРаспределенияОплатКапРемонт            = СтруктураПараметров.ВариантРаспределенияОплатКапРемонт;
                РегистрацияОплаты.НеРаспределятьОплатуНаДобровольноеСтрахование = СтруктураПараметров.НеРаспределятьОплатуНаДобровольноеСтрахование;
                #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

                РегистрацияОплаты.Контрагент = СтруктураОтбора.КонтрагентРодительВетки;
                РегистрацияОплаты.ДокументыПоступленияДенежныхСредств.Очистить();
                НоваяСтрокаДокументов = РегистрацияОплаты.ДокументыПоступленияДенежныхСредств.Добавить();
                НоваяСтрокаДокументов.Документ = СтруктураОтбора.Документ;

                #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --
                РегистрацияОплаты.Записать(РежимЗаписиДокумента.Проведение);

                #Вставка
                СписокЛицевыхСчетов = Новый Массив;
                #КонецВставки
                Для Каждого ТекСтрока Из СтрокиОтбора Цикл
                    СтрокаОплаты = ТаблицаОплат.Добавить();
                    СтрокаОплаты.Объект         = ТекСтрока.Контрагент;
                    СтрокаОплаты.Сумма          = ТекСтрока.Сумма;
                    СтрокаОплаты.ДокументОплаты = ТекСтрока.Документ;
                    #Вставка

                    СписокЛицевыхСчетов.Добавить(ТекСтрока.Контрагент);

                    #КонецВставки
                КонецЦикла;
                #Вставка

                ТаблицаОплат = ГП_РегистрацияОплатыСлужебный.СформироватьТаблицуОплатПоКонтрагенту(
                    СтруктураПараметров.Дата, СтруктураПараметров.Контрагент, ТекГруппировка.Сумма,
                    ТекГруппировка.Документ, СтруктураПараметров.Организация, СписокЛицевыхСчетов);

                #КонецВставки

                СтруктураПараметров.Вставить("ТаблицаОплат", ТаблицаОплат);
                #Вставка // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++

                #КонецВставки // Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --
                РегистрацияОплаты.Заполнить(СтруктураПараметров);

                // В случае необходимости перезаполнения (корректировки) записей КУДиР
                // в типовых документах, фиксирующих факт оплаты, необходимо получать структуру
                // сумм КУДиР, с использованием которой происходит корректировка данных КУДиР
                // в движениях документа.
                // При этом, возможны ситуации, когда по 1 типовому документу структуру сумм
                // необходимо получать дважды. Н-р, при наличии расшифровки платежа в документе,
                // когда для платежей используются разные договоры с контрагентом.
                // Для корректной обработки таких ситуаций используем следующий алгоритм:
                // 1. Формируем соответствие типовых документов (ключ) и структур сумм КУДиР (значение).
                // Повторно полученные для 1 документа структуры при этом объединяются.
                // 2. Для каждой записи соответствия выполняем проведение типовых документов
                // с корректировкой сумм КУДиР (при необходимости).
                Если ПерезаполнитьЗаписиКУДиР Тогда

                    СоответствиеДокументовИСтруктурСуммКУДиР = Новый Соответствие;

                    // Для каждой ранее отобранной строки оплаты текущего документа РО
                    // получаем структуру сумм КУДиР, заполняем соответствие.
                    Для Каждого ТекСтрока Из СтрокиОтбора Цикл

                        СтрокаПД = ТаблицаПлатежныхДокументов.Найти(ТекСтрока.Документ, "Документ");
                        Если НЕ СтрокаПД.Обработан Тогда

                            ПлатежныйДокументСсылка = СтрокаПД.Документ;
                            ПлатежныйДокументОбъект = ПлатежныйДокументСсылка.ПолучитьОбъект();

                            СтруктураСуммКУДиР = УПЖКХ_НалоговыйУчетУСН.ПолучитьСтруктуруСуммКУДиР(РегистрацияОплаты.Организация, РегистрацияОплаты.Дата, ПлатежныйДокументОбъект, РегистрацияОплаты, , НастройкиУчетнойПолитикиЖКХ, СтрокиОтбора.Найти(ТекСтрока) + 1);

                            Если СтруктураСуммКУДиР = Неопределено Тогда
                                СоответствиеДокументовИСтруктурСуммКУДиР.Вставить(ПлатежныйДокументСсылка, СтруктураСуммКУДиР);
                                Продолжить;
                            КонецЕсли;

                            СтруктураСуммКУДиРИзСоответствия = СоответствиеДокументовИСтруктурСуммКУДиР.Получить(ПлатежныйДокументСсылка);

                            Если СтруктураСуммКУДиРИзСоответствия = Неопределено Тогда
                                СоответствиеДокументовИСтруктурСуммКУДиР.Вставить(ПлатежныйДокументСсылка, СтруктураСуммКУДиР);
                            Иначе

                                // Выполняется объединение структур сумм КУДиР при наличии нескольких строк оплат
                                // по 1 типовому документу.
                                Для Каждого СуммаКУДиР Из СтруктураСуммКУДиР Цикл
                                    ЗначениеСуммыКУДиР = СтруктураСуммКУДиР[СуммаКУДиР.Ключ] + СтруктураСуммКУДиРИзСоответствия[СуммаКУДиР.Ключ];
                                    СтруктураСуммКУДиР.Вставить(СуммаКУДиР.Ключ, ЗначениеСуммыКУДиР);
                                КонецЦикла;

                                СоответствиеДокументовИСтруктурСуммКУДиР.Вставить(ПлатежныйДокументСсылка, СтруктураСуммКУДиР);

                            КонецЕсли;
                        КонецЕсли;
                    КонецЦикла;

                    // Корректировка сумм КУДиР в движениях типовых документов для каждой записи
                    // ранее сформированного соответствия.
                    Для Каждого ДокументИСтруктураСуммКУДиР Из СоответствиеДокументовИСтруктурСуммКУДиР Цикл

                        ПлатежныйДокументСсылка = ДокументИСтруктураСуммКУДиР.Ключ;
                        ПлатежныйДокументОбъект = ПлатежныйДокументСсылка.ПолучитьОбъект();
                        СтруктураСуммКУДиР      = ДокументИСтруктураСуммКУДиР.Значение;

                        Если НЕ СтруктураСуммКУДиР = Неопределено Тогда
                            ПлатежныйДокументОбъект.ДополнительныеСвойства.Вставить("СтруктураСуммКУДиР", СтруктураСуммКУДиР);
                            ПлатежныйДокументОбъект.ДополнительныеСвойства.Вставить("ДанныеПоКУДиРПолны", ПлатежныйДокументОбъект.ЭтоНовый());
                            ПлатежныйДокументОбъект.ДополнительныеСвойства.Вставить("РегистрацияОплаты",  РегистрацияОплаты);
                        КонецЕсли;

                        Попытка
                            ПлатежныйДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
                            УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("Изменены записи в КУДиР для документа """ + ПлатежныйДокументСсылка + """");
                        Исключение
                            УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не удалось изменить записи в КУДиР для документа """ + ПлатежныйДокументСсылка + """");
                            ВызватьИсключение;
                        КонецПопытки;

                    КонецЦикла;

                КонецЕсли;

                // Проводим документ.
                РегистрацияОплаты.Записать(РежимЗаписиДокумента.Проведение);

                УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьПользователю("Сформирован документ """ + РегистрацияОплаты + """");

                // Заполняем поля табличной части без ошибок.
                Для каждого ТекСтрока из СтрокиОтбора Цикл
                    ТекСтрока.ВеткаИсточник[ПараметрыФормирования.ИмяРеквизитаРО] = РегистрацияОплаты.Ссылка;
                    ТекСтрока.ВеткаИсточник.Дата   = РегистрацияОплаты.Ссылка.Дата;
                    ТекСтрока.ВеткаИсточник.ЕстьРО = РегистрацияОплаты.Проведен;
                    ТекСтрока.ВеткаИсточник.Номер  = РегистрацияОплаты.Ссылка.Номер;
                КонецЦикла;

                // Помечаем платежные документы как обработанные.
                Если ПерезаполнитьЗаписиКУДиР Тогда
                    Для каждого ТекСтрока из СтрокиОтбора Цикл
                        СтрокаПД = ТаблицаПлатежныхДокументов.Найти(ТекСтрока.Документ, "Документ");
                        СтрокаПД.Обработан = Истина;
                    КонецЦикла;
                КонецЕсли;

                КоличествоСформированныхДокументов = КоличествоСформированныхДокументов + 1;
                СуммаСформированныхДокументов      = СуммаСформированныхДокументов + РегистрацияОплаты.СуммаДокумента;

                // Фиксируем транзацию.
                ЗафиксироватьТранзакцию();

                МассивСформированныхДокументов.Добавить(РегистрацияОплаты.Ссылка);

            Исключение
                // Отменяем транзакцию.
                ОтменитьТранзакцию();
                УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке("Не удалось сформировать документ """ + РегистрацияОплаты + """");
                #Вставка
                УПЖКХ_ТиповыеМетодыКлиентСервер.СообщитьОбОшибке(ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
                #КонецВставки
            КонецПопытки;

        КонецЦикла;

        ПараметрыФормирования.КоличествоСформированныхДокументов = КоличествоСформированныхДокументов;
        ПараметрыФормирования.СуммаСформированныхДокументов      = СуммаСформированныхДокументов;

    КонецЕсли;

КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ДанныеДляОбновленияИнфСтрокиПоОшибочнымДокументам")
Процедура ГП_ДанныеДляОбновленияИнфСтрокиПоОшибочнымДокументам(Показатели)

    Для Каждого ТекВетка Из ДеревоПлатежныхДокументовСОшибками.ПолучитьЭлементы() Цикл

        // Дополним таблицу сумм по ПД.
        НоваяСтрока = Показатели.ТаблицаВсеПД.Добавить();
        НоваяСтрока.Документ = ТекВетка.Документ;
        НоваяСтрока.Сумма    = ТекВетка.Сумма;

        // Если для контрагента больше одного л/с.
        Если ТекВетка.Готовность = 0 Тогда
            Показатели.НеоднозначныхСоответствий = Показатели.НеоднозначныхСоответствий + 1;
        КонецЕсли;

        ЕстьОшибкиПоДокументу = 0;
        ЕстьПометки = Ложь;

        // Строки, где договор и контрагент совпадают. Требуется для помещения в таблицу с
        // ошибками ПКО, по которым нет сформированного РО, но могут быть оплаты по нескольким л/с.
        СтрокССовпадениями = 0;

        Для Каждого ТекСтрока Из ТекВетка.ПолучитьЭлементы() Цикл

            Если ТекСтрока.КонтрагентСовпадает И ТекСтрока.ДоговорСовпадает Тогда
                СтрокССовпадениями = СтрокССовпадениями + 1;
            КонецЕсли;

            Если ТекСтрока.Пометка Тогда

                ЕстьПометки = Истина;
                ЕстьОшибкиПоДокументу = ЕстьОшибкиПоДокументу + ?(ТекСтрока.Готовность = 0, 1, 0);

                Показатели.ОтмеченоСтрокСОшибками = Показатели.ОтмеченоСтрокСОшибками + ?(ТекСтрока.Готовность = 0, 1, 0);
                Показатели.СуммаОшибочныхСтрок = Показатели.СуммаОшибочныхСтрок + ?(ТекСтрока.Готовность = 0, ТекСтрока.Сумма, 0);

                // Если в строке не совпадает контрагент и она не помечена, то это является ошибкой.
            ИначеЕсли НЕ ТекСтрока.КонтрагентСовпадает Тогда

                ЕстьОшибкиПоДокументу = ЕстьОшибкиПоДокументу + 1;
                ТекСтрока.Готовность = 0;

            КонецЕсли;
        КонецЦикла;

        Если ТекВетка.ПолучитьЭлементы().Количество() > 0 Тогда
            Если НЕ ТекВетка.ЕстьРО И СтрокССовпадениями > 1 Тогда
                #Удаление
                ТекВетка.Готовность = 0;
                #КонецУдаления
            Иначе
                ТекВетка.Готовность = ?(ЕстьОшибкиПоДокументу = 0 И ЕстьПометки, 1, 0);
            КонецЕсли;
        КонецЕсли;

    КонецЦикла;

КонецПроцедуры

#КонецОбласти // ПереопределениеСтандартногоФункционала
// Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --

// Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ГП_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
    ГП_СоздатьРеквизитДополнительныеСвойстваФормыНаСервере();
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы
// Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --

// Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат ++
#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ГП_СоздатьРеквизитДополнительныеСвойстваФормыНаСервере()
    ДобавляемыеРеквизиты = Новый Массив;

    РеквизитДополнительныеСвойстваФормы = Новый РеквизитФормы(
            "ГП_ДополнительныеСвойстваФормы", Новый ОписаниеТипов(), "", "");
    ДобавляемыеРеквизиты.Добавить(РеквизитДополнительныеСвойстваФормы);

    ЭтотОбъект.ИзменитьРеквизиты(ДобавляемыеРеквизиты);

    ЭтотОбъект[РеквизитДополнительныеСвойстваФормы.Имя] = Новый Структура("КэшВетокРаспределения", Новый Соответствие);

    Возврат РеквизитДополнительныеСвойстваФормы;
КонецФункции

&НаСервере
Функция ГП_РаспределитьСуммыСтрокДереваСОшибкамиНаСервере()
    Возврат Неопределено;
КонецФункции

&НаСервереБезКонтекста
Функция ГП_ДополнитьКолонкиТаблицыБезРОНаСервере(Знач ТаблицаБезРО)
    РезультатФункции = Новый Массив;

    ДополнительныеКолонки = Новый Структура;
    ДополнительныеКолонки.Вставить("КонтрагентРодительВетки", Новый Структура("Тип", Новый ОписаниеТипов("СправочникСсылка.Контрагенты")));

    Для каждого ЭлементКолонкаКЗ Из ДополнительныеКолонки Цикл
        ИмяКолонкиДополнения = ЭлементКолонкаКЗ.Ключ;
        ТекущаяКолонкаДобавления = ТаблицаБезРО.Колонки.Найти(ИмяКолонкиДополнения);
        Если ТекущаяКолонкаДобавления = Неопределено Тогда
            ТекущаяКолонкаДобавления = ТаблицаБезРО.Колонки.Добавить(ИмяКолонкиДополнения, ЭлементКолонкаКЗ.Значение.Тип);
            РезультатФункции.Добавить(ТекущаяКолонкаДобавления);
        КонецЕсли;
    КонецЦикла;

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 22.11.2024 [F00230427] Доработка обработки ФормированиеОплатПоПлатежнымДокументам для распределения сумм оплат --
