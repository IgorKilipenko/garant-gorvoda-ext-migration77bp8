// Гарант+ Килипенко 31.01.2025 [F00234069] Доп отбор в РегистрацияСчетовФактурНаАванс ++
#Область ПереопределениеСтандартногоФункционала

&ИзменениеИКонтроль("ЗаполнитьСтроки")
Функция ГП_ЗаполнитьСтроки(СтруктураПараметров)

    КонтекстВыполнения = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
    КонтекстВыполнения.Вставить("ПорядокРегистрацииСчетовФактурНаАванс",
    УчетнаяПолитика.ПорядокРегистрацииСчетовФактурНаАванс(СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода));
    КонтекстВыполнения.Вставить("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
    КонтекстВыполнения.Вставить("ТипОтчетКомиссионераОПродажах", Тип("ДокументСсылка.ОтчетКомиссионераОПродажах"));
    КонтекстВыполнения.Вставить("СравнениеСсылок", Новый СравнениеЗначений);

    КонтекстВыполнения.Вставить("СубконтоСчетаРасчетов", Новый Массив);
    КонтекстВыполнения.СубконтоСчетаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
    КонтекстВыполнения.СубконтоСчетаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
    КонтекстВыполнения.СубконтоСчетаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);

    СчетаРасчетовПоАвансамПолученным = Новый Массив;
    СчетаРасчетовПоАвансамПолученным.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным);    // 62.02
    СчетаРасчетовПоАвансамПолученным.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал); // 62.22
    СчетаРасчетовПоАвансамПолученным.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ);  // 62.32

    Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("СчетаРасчетовПоАвансамПолученным", СчетаРасчетовПоАвансамПолученным);
    Запрос.УстановитьПараметр("СубконтоСчетаРасчетов",            КонтекстВыполнения.СубконтоСчетаРасчетов);
    Запрос.Текст =
    "ВЫБРАТЬ
    |	Хозрасчетный.Ссылка КАК Счет
    |ИЗ
    |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
    |ГДЕ
    |	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаРасчетовПоАвансамПолученным)
    |	И Хозрасчетный.ВидыСубконто.ВидСубконто В (&СубконтоСчетаРасчетов)";
    КонтекстВыполнения.Вставить("СчетаАвансов", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0)); // С учетом пользовательских счетов.

    ТаблицаАвансов = ПолучитьТаблицуАвансов(КонтекстВыполнения);

    КоличествоСтрок = ТаблицаАвансов.Количество();
    Если КоличествоСтрок = 0 Тогда
        ОбработкаОбъект = Обработки.РегистрацияСчетовФактурНаАванс.Создать();
        Возврат ОбработкаОбъект.Список.Выгрузить();
    КонецЕсли;

    КолонкиАвансов = ТаблицаАвансов.Колонки;
    КолонкиАвансов.Добавить("СуммаАванса",            Новый ОписаниеТипов(КолонкиАвансов.КонечныйОстаток.ТипЗначения, , "Null"));
    КолонкиАвансов.Добавить("ВалютнаяСуммаАванса",    Новый ОписаниеТипов(КолонкиАвансов.ВалютныйКонечныйОстаток.ТипЗначения, , "Null"));
    КолонкиАвансов.Добавить("КонецНалоговогоПериода", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
    КолонкиАвансов.Добавить("СчетФактура",            Новый ОписаниеТипов("ДокументСсылка.СчетФактураВыданный"));
    КолонкиАвансов.Добавить("ДатаВыписки",            ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
    КолонкиАвансов.Добавить("Выставлен",              Новый ОписаниеТипов("Булево"));

    ОпределитьРанееВыписанныеСчетаФактуры(КонтекстВыполнения, ТаблицаАвансов);

    ЗаполнитьСуммыАвансов(КонтекстВыполнения, ТаблицаАвансов);

    ОбработкаОбъект = Обработки.РегистрацияСчетовФактурНаАванс.Создать();
    ТаблицаРезультатов = ОбработкаОбъект.Список.Выгрузить();
    КоличествоСтрок = ТаблицаАвансов.Количество();
    Если КоличествоСтрок = 0 Тогда
        Возврат ТаблицаРезультатов;
    КонецЕсли;
    ОбработкаОбъект = Неопределено;

    ТаблицаАвансов.Сортировать("ДокументОснование,ДатаВыписки", КонтекстВыполнения.СравнениеСсылок);
    РаспределитьАвансы(КонтекстВыполнения, ТаблицаАвансов, ТаблицаРезультатов);
    #Вставка // Гарант+ Килипенко 31.01.2025 [F00234069] Доп отбор в РегистрацияСчетовФактурНаАванс ++

    // Дополнительный отбор по ВидуДоговораДополнительному (ДоговорКонтрагента.lc_ВидДоговора)
    ТаблицаРезультатов = ПрименитьДополнительныеОтборыКТаблицеРаспределенияАвансов(ТаблицаРезультатов, КонтекстВыполнения);

    #КонецВставки // Гарант+ Килипенко 31.01.2025 [F00234069] Доп отбор в РегистрацияСчетовФактурНаАванс --
    ТаблицаРезультатов.Сортировать("Дата,ДатаДокументаОснования,ДокументОснование", КонтекстВыполнения.СравнениеСсылок);

    Возврат ТаблицаРезультатов;

КонецФункции

#КонецОбласти // ПереопределениеСтандартногоФункционала
// Гарант+ Килипенко 31.01.2025 [F00234069] Доп отбор в РегистрацияСчетовФактурНаАванс --

// Гарант+ Килипенко 31.01.2025 [F00234069] Доп отбор в РегистрацияСчетовФактурНаАванс ++
#Область СлужебныеПроцедурыИФункции

// Параметры:
//  ИсходнаяТаблицаРезультатов - ТаблицаЗначений
//  КонтекстВыполнения - Структура
// Возвращаемое значение:
//  - ТаблицаЗначений
Функция ПрименитьДополнительныеОтборыКТаблицеРаспределенияАвансов(Знач ИсходнаяТаблицаРезультатов, Знач КонтекстВыполнения)
    Если КонтекстВыполнения = Неопределено
            ИЛИ КонтекстВыполнения.Свойство("ГП_ВидДоговораДополнительно") = Ложь
            ИЛИ ТипЗнч(КонтекстВыполнения.ГП_ВидДоговораДополнительно) <> Тип("СправочникСсылка.lc_ВидыДоговоров")
            ИЛИ ЗначениеЗаполнено(КонтекстВыполнения.ГП_ВидДоговораДополнительно) = Ложь Тогда

        Возврат ИсходнаяТаблицаРезультатов;
    КонецЕсли;

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |   *
        |ПОМЕСТИТЬ ВТ_ИсходнаяТаблицаРезультатов
        |ИЗ
        |   &ИсходнаяТаблицаРезультатов КАК ИсходнаяТаблицаРезультатов
        |;
        |
        |ВЫБРАТЬ
        |   *
        |ИЗ
        |   ВТ_ИсходнаяТаблицаРезультатов КАК ВТ_ИсходнаяТаблицаРезультатов
        |ГДЕ
        |   ИСТИНА
        |   И &УсловиеОтбора
        |";

    УсловиеОтбора = "ВТ_ИсходнаяТаблицаРезультатов.ДоговорКонтрагента.lc_ВидДоговора = &ГП_ВидДоговораДополнительно";
    Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбора", УсловиеОтбора);

    Запрос.УстановитьПараметр("ГП_ВидДоговораДополнительно", КонтекстВыполнения.ГП_ВидДоговораДополнительно);
    Запрос.УстановитьПараметр("ИсходнаяТаблицаРезультатов", ИсходнаяТаблицаРезультатов);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 31.01.2025 [F00234069] Доп отбор в РегистрацияСчетовФактурНаАванс --
