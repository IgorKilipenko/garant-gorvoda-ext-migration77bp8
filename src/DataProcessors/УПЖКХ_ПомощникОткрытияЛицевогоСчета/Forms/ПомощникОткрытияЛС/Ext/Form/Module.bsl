// Гарант+ Килипенко 20.11.2024 [F00231190] Формирование наименования л/с при открытии ++
#Область СлужебныеПроцедурыИФункции

&НаСервере
&После ("УстановкаНомераЛицевогоСчета")
Процедура ГП_УстановкаНомераЛицевогоСчета()
    ТекущийОтветственныйСобственникЛС = ?(ЗначениеЗаполнено(ЭтотОбъект.Объект.КонтрагентДляВзаиморасчетов),
            ЭтотОбъект.Объект.КонтрагентДляВзаиморасчетов, мОтветственныйВладелец);

    Если ЗначениеЗаполнено(ТекущийОтветственныйСобственникЛС) = Истина
        И ЗначениеЗаполнено(ЭтотОбъект.Объект.Здание) = Истина Тогда

        НаименованиеКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
                ТекущийОтветственныйСобственникЛС, "Наименование");

        НаименованиеЗдания = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
                ЭтотОбъект.Объект.Здание, "Наименование");

        ЭтотОбъект.Объект.ИмяЛицевогоСчета = СтрШаблон("%1 / %2", НаименованиеКонтрагента, НаименованиеЗдания);
    КонецЕсли;
КонецПроцедуры

// Гарант+ Килипенко 29.01.2024 [] Добавление тарифов в помщник открытия л/с ++
&НаСервере
&ИзменениеИКонтроль("ВыполнитьОткрытиеЛицевогоСчета")
Функция ГП_ВыполнитьОткрытиеЛицевогоСчета()
	
	НачатьТранзакцию();
	
	// ЛИЦЕВОЙ СЧЕТ
	
	СправОбъект = Справочники.КВП_ЛицевыеСчета.СоздатьЭлемент();
	СправОбъект.Родитель      = Объект.ГруппаЛС;
	СправОбъект.Наименование  = СокрЛП(Объект.ИмяЛицевогоСчета);
	СправОбъект.Идентификатор = Объект.ИдентификаторЛС;
	СправОбъект.Адрес         = Объект.Помещение;
	
	Если СоздатьКонтрагентаАвтоматически Тогда
		Объект.КонтрагентДляВзаиморасчетов = СоздатьКонтрагента();
		Объект.ДоговорДляВзаиморасчетов = УПЖКХ_ВзаиморасчетыПоЛицевымСчетам.СоздатьНовыйДоговор(Объект.КонтрагентДляВзаиморасчетов,
																								Объект.Организация,
																								Объект.ИмяЛицевогоСчета);
	КонецЕсли;
	
	Если Не КВП_ЗаписатьОбъект(СправОбъект) Тогда
		ОтменитьТранзакцию();
		мЛицевойСчет                                   = Справочники.КВП_ЛицевыеСчета.ПустаяСсылка();
		мДокументОткрытияЛС                            = Документы.КВП_ОткрытиеЛицевогоСчета.ПустаяСсылка();
		мДокументУстановкиСобственников                = Документы.УПЖКХ_УстановкаСобственниковПомещений.ПустаяСсылка();
		мДокументУправленияСведениямиДляВзаиморасчетов = Документы.УПЖКХ_УправлениеСведениямиДляВзаиморасчетовПоЛицевымСчетам.ПустаяСсылка();
		Возврат Ложь;
	КонецЕсли;
	
	мЛицевойСчет = СправОбъект.Ссылка;
	
	// КОМНАТЫ
	
	// Запись комнат, привязанных к л/с.
	Для Каждого ТекКомната Из Объект.Комнаты Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекКомната.Комната) Тогда
			Продолжить;
		КонецЕсли;
		
		СписокКомнат = РегистрыСведений.УПЖКХ_ПривязанныеКЛицевомуСчетуКомнаты.СоздатьНаборЗаписей();
		СписокКомнат.Отбор.Период.Установить(Объект.Дата);
		СписокКомнат.Отбор.ЛицевойСчет.Установить(мЛицевойСчет);
		СписокКомнат.Отбор.Комната.Установить(ТекКомната.Комната);
		
		НовЗапись = СписокКомнат.Добавить();
		НовЗапись.Период          = Объект.Дата;
		НовЗапись.ЛицевойСчет     = мЛицевойСчет;
		НовЗапись.Комната         = ТекКомната.Комната;
		НовЗапись.Привязка        = Истина;
		
		СписокКомнат.Записать(Истина);
		
	КонецЦикла;
	
	// ДОКУМЕНТ ОТКРЫТИЯ
	
	// Создание документа открытия л/с.
	ДокументОбъект = Документы.КВП_ОткрытиеЛицевогоСчета.СоздатьДокумент();
	ДокументОбъект.Дата                     = Объект.Дата;
	ДокументОбъект.ЛицевойСчет              = мЛицевойСчет;
	ДокументОбъект.Комментарий              = "Открытие л/с; дом " + Объект.Здание.НомерДома + ", "
											+ Объект.Помещение + "; " + мОтветственныйВладелец;
	ДокументОбъект.Ответственный            = УПЖКХ_ТиповыеМетодыКлиентСервер.ТекущийПользователь();
	
	Если ТипЗнч(мОтветственныйВладелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		ДокументОбъект.Контрагент           = мОтветственныйВладелец;
	КонецЕсли;
	
	мОтветственныйПроживающий = мОтветственныйВладелец;
	
	Для Каждого Жилец ИЗ Объект.Проживающие Цикл
		
		мПроживающий = СоздатьПроживающего(мЛицевойСчет, Жилец);
		Если ПодробныйВариантУчетаСобственников Тогда
			Если Жилец.ФизЛицо = мОтветственныйВладелец Тогда
				мОтветственныйПроживающий = мПроживающий;
			КонецЕсли;
		Иначе
			Если Жилец.ФИО = мОтветственныйВладелец Тогда
				мОтветственныйПроживающий = мПроживающий;
			КонецЕсли;
		КонецЕсли;
		
		// Добавим жильцов в табличную часть документа.
		НоваяСтрока = ДокументОбъект.Главная.Добавить();
		НоваяСтрока.Проживающий                      = мПроживающий;
		НоваяСтрока.Проживает                        = Жилец.Проживающий;
		НоваяСтрока.Зарегистрирован                  = Жилец.Зарегистрированный;
		НоваяСтрока.СтепеньРодства                   = Жилец.СтепеньРодства;
		НоваяСтрока.Собственник                      = Жилец.Собственник;
		НоваяСтрока.ОснованиеПолученияВСобственность = Жилец.ОснованиеПолученияВСобственность;
		НоваяСтрока.ВидДокументаСобственности        = Жилец.ВидДокументаСобственности;
		НоваяСтрока.НомерДокументаСобственности      = Жилец.НомерДокументаСобственности;
		НоваяСтрока.ДатаДокументаСобственности       = Жилец.ДатаДокументаСобственности;
		НоваяСтрока.ДоляСобственностиЧислитель       = Жилец.ДоляСобственникаЧислитель;
		НоваяСтрока.ДоляСобственностиЗнаменатель     = Жилец.ДоляСобственникаЗнаменатель;
		НоваяСтрока.ВладелецЕдинственногоЖилья       = Жилец.ВладелецЕдинственногоЖилья;
		
		// Добавление дат заселения и регистрации жильцов в документ.
		НоваяСтрока.ДатаРегистрации              = Жилец.ДатаРегистрации;
		НоваяСтрока.ДатаЗаселения                = Жилец.ДатаЗаселения;
	КонецЦикла;
	
	Если УказатьЖильцовГотовымиЧислами Тогда
		ДокументОбъект.КоличествоПроживающих        = КоличествоПроживающих;
		ДокументОбъект.КоличествоЗарегистрированных = КоличествоЗарегистрированных;
	Иначе
		ДокументОбъект.КоличествоПроживающих        = 
			Объект.Проживающие.НайтиСтроки(Новый Структура("Проживающий", Истина)).Количество();
		ДокументОбъект.КоличествоЗарегистрированных = 
			Объект.Проживающие.НайтиСтроки(Новый Структура("Зарегистрированный", Истина)).Количество();
	КонецЕсли;
	
	ДокументОбъект.ВладелецКонтрагент = ?(ТипЗнч(мОтветственныйВладелец) = Тип("СправочникСсылка.Контрагенты")
										  ИЛИ ТипЗнч(мОтветственныйВладелец) = Тип("СправочникОбъект.Контрагенты"), Истина, Ложь);
	
	ДокументОбъект.ОтветственныйСобственник = мОтветственныйПроживающий;
	
	ДокументОбъект.ДоляЧислитель   = Объект.ДоляЛСЧислитель;
	ДокументОбъект.ДоляЗнаменатель = Объект.ДоляЛСЗнаменатель;
	
	Если Не КВП_ЗаписатьОбъект(ДокументОбъект, РежимЗаписиДокумента.Проведение) Тогда
		ОтменитьТранзакцию();
		мЛицевойСчет                                   = Справочники.КВП_ЛицевыеСчета.ПустаяСсылка();
		мДокументОткрытияЛС                            = Документы.КВП_ОткрытиеЛицевогоСчета.ПустаяСсылка();
		мДокументУстановкиСобственников                = Документы.УПЖКХ_УстановкаСобственниковПомещений.ПустаяСсылка();
		мДокументУправленияСведениямиДляВзаиморасчетов = Документы.УПЖКХ_УправлениеСведениямиДляВзаиморасчетовПоЛицевымСчетам.ПустаяСсылка();
		Возврат Ложь;
	КонецЕсли;
	
	мДокументОткрытияЛС = ДокументОбъект.Ссылка;
	
	// ДОКУМЕНТ УПРАВЛЕНИЯ СВЕДЕНИЯМИ ДЛЯ ВЗАИМОРАСЧЕТОВ
	
	ДокументУправленияВзаиморасчетами               = Документы.УПЖКХ_УправлениеСведениямиДляВзаиморасчетовПоЛицевымСчетам.СоздатьДокумент();
	ДокументУправленияВзаиморасчетами.Дата          = Объект.Дата;
	ДокументУправленияВзаиморасчетами.Организация   = Объект.Организация;
	ДокументУправленияВзаиморасчетами.Объект        = Объект.Помещение;
	ДокументУправленияВзаиморасчетами.Комментарий   = "#Документ создан автоматически при открытии лицевого счета """ + мЛицевойСчет + """";
	ДокументУправленияВзаиморасчетами.Ответственный = УПЖКХ_ТиповыеМетодыКлиентСервер.ТекущийПользователь();
	
	// Табличная часть сведений о взаиморасчетах.
	НоваяСтрока                    = ДокументУправленияВзаиморасчетами.СведенияДляВзаиморасчетов.Добавить();
	Новаястрока.ЛицевойСчет        = мЛицевойСчет;
	НоваяСтрока.Контрагент         = Объект.КонтрагентДляВзаиморасчетов;
	Новаястрока.ДоговорКонтрагента = Объект.ДоговорДляВзаиморасчетов;
	
	Если Не КВП_ЗаписатьОбъект(ДокументУправленияВзаиморасчетами, РежимЗаписиДокумента.Проведение) Тогда
		ОтменитьТранзакцию();
		мЛицевойСчет                                   = Справочники.КВП_ЛицевыеСчета.ПустаяСсылка();
		мДокументОткрытияЛС                            = Документы.КВП_ОткрытиеЛицевогоСчета.ПустаяСсылка();
		мДокументУстановкиСобственников                = Документы.УПЖКХ_УстановкаСобственниковПомещений.ПустаяСсылка();
		мДокументУправленияСведениямиДляВзаиморасчетов = Документы.УПЖКХ_УправлениеСведениямиДляВзаиморасчетовПоЛицевымСчетам.ПустаяСсылка();
		Возврат Ложь;
	КонецЕсли;
	
	мДокументУправленияСведениямиДляВзаиморасчетов = ДокументУправленияВзаиморасчетами.Ссылка;
	
	// СООТВЕТСТВИЕ ФИЗЛИЦ И КОНТРАГЕНТОВ
	
	Если ТипЗнч(мОтветственныйВладелец) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		
		// Запись соответствия физлица и контрагента.
		СписокСоответствия = РегистрыСведений.УПЖКХ_СоответствиеФизЛицИКонтрагентов.СоздатьНаборЗаписей();
		СписокСоответствия.Отбор.Период.Установить(Объект.Дата);
		СписокСоответствия.Отбор.ФизЛицо.Установить(мОтветственныйВладелец);
		
		НовЗапись = СписокСоответствия.Добавить();
		НовЗапись.Период     = Объект.Дата;
		НовЗапись.ФизЛицо    = мОтветственныйВладелец;
		НовЗапись.Контрагент = Объект.КонтрагентДляВзаиморасчетов;
		
		СписокСоответствия.Записать(Истина);
		
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	Возврат Истина;
	
КонецФункции // Гарант+ Килипенко 29.01.2024 [] Добавление тарифов в помщник открытия л/с --

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 20.11.2024 [F00231190] Формирование наименования л/с при открытии --
