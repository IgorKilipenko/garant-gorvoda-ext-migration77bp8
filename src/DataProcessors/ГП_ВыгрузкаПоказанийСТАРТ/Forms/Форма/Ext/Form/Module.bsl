// Гарант+ Килипенко 09.12.2024 [F00232154] Загрузка заводских номеров счетчиков и выгрузка в старт ++
#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ЗаписатьВФайл(Команда)
    ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
    ДиалогСохраненияФайла.МножественныйВыбор = Ложь;
    ДиалогСохраненияФайла.Фильтр = НСтр("ru = 'CSV'; en = 'CSV'") + "(*.csv)|*.csv";
    ДиалогСохраненияФайла.Заголовок = "Выберите (укажите) файл для сохранения";

    РезультатДиалога = Ждать ДиалогСохраненияФайла.ВыбратьАсинх();
    Если РезультатДиалога = Неопределено ИЛИ РезультатДиалога.Количество() = 0 Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Файл для сохранения не указан");
        Возврат;
    КонецЕсли;

    ИмяФайлаДляСохранения = РезультатДиалога[0];

    // Заполнение документа
    ТекстовыйДокумент = Новый ТекстовыйДокумент;
    Для Каждого СтрокаДанных Из ЭтотОбъект.Объект.ПоказанияСчетчиков Цикл
        СтрокаДляЗаписи = ПолучитьТекстовоеПредставлениеСтрокиПоказанийСчетчиков(СтрокаДанных);
        ТекстовыйДокумент.ДобавитьСтроку(СтрокаДляЗаписи);
    КонецЦикла;

    РезультатЗаписи = Неопределено;
    Попытка
        РезультатЗаписи = Ждать ТекстовыйДокумент.ЗаписатьАсинх(ИмяФайлаДляСохранения, КодировкаТекста.ANSI);
    Исключение
        ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(
                "Ошибка при записи файла.
                |Информация: %1", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
    КонецПопытки;

    Если РезультатЗаписи <> Истина Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю("Запись не выполнена");
        Возврат;
    КонецЕсли;

    ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон("Данные показаний записаны в файл: %1", ИмяФайлаДляСохранения));
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗаполнитьТаблицуПоказанийСчетчиков(Команда)
    Если ЭтотОбъект.Объект.ПоказанияСчетчиков.Количество() > 0 Тогда
        РезультатДиалога = Ждать ГП_ОбщегоНазначенияКлиент.СпроситьПользователяОГотовностиВыполнятьОперациюАсинх(
                "Таблица показаний счетчиков будет перезаполнена.");
        Если РезультатДиалога = Ложь Тогда
            Возврат; // Пользователь отказался от выполнения операции
        Иначе
            ЭтотОбъект.Объект.ПоказанияСчетчиков.Очистить();
        КонецЕсли;
    КонецЕсли;

    РезультатПроверки = ПроверитьЗаполнениеПериода(ЭтотОбъект.Период);
    Если РезультатПроверки.Успех = Ложь Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатПроверки.ТекстСообщения);
        Возврат;
    КонецЕсли;

    РезультатПроверки = ПроверитьЗаполнениеУслуги(ЭтотОбъект.Услуга);
    Если РезультатПроверки.Успех = Ложь Тогда
        ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатПроверки.ТекстСообщения);
        Возврат;
    КонецЕсли;

    ЗаполнитьТаблицуПоказанийСчетчиковНаСервере(ЭтотОбъект.Период.ДатаНачала, ЭтотОбъект.Период.ДатаОкончания, ЭтотОбъект.Услуга);
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы
// Гарант+ Килипенко 09.12.2024 [F00232154] Загрузка заводских номеров счетчиков и выгрузка в старт --

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуПоказанийСчетчиковНаСервере(Знач НачалоПериода, Знач КонецПериода, Знач Услуга)
    ДанныеЗаполнения = ГП_ОбменСоСТАРТ.ПолучитьДанныеПриборовУчетаДляВыгрузки(НачалоПериода, КонецПериода, Услуга);

    Если ДанныеЗаполнения.Количество() = 0 Тогда
        ОбщегоНазначения.СообщитьПользователю("Нет данных показаний с указанным критерием отбора");
    КонецЕсли;

    Для Каждого СтрокаДанных Из ДанныеЗаполнения Цикл
        НоваяСтрока = ЭтотОбъект.Объект.ПоказанияСчетчиков.Добавить();
        НоваяСтрока.ЛицевойСчет = СтрокаДанных.ЛицевойСчет;
        НоваяСтрока.КодМКД = СтрокаДанных.КодМКД;
        НоваяСтрока.Счетчик = СтрокаДанных.Счетчик;
        НоваяСтрока.Услуга = СтрокаДанных.Услуга;
        НоваяСтрока.ЗаводскойНомер = СтрокаДанных.ЗаводскойНомер;
        НоваяСтрока.ДатаПоверки = СтрокаДанных.ДатаПоверки;
        НоваяСтрока.Расход = СтрокаДанных.Расход;
    КонецЦикла;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПроверитьЗаполнениеПериода(Знач Период)
    РезультатФункции = Новый Структура("Успех, ТекстСообщения", Истина);

    Если ЗначениеЗаполнено(Период) = Ложь Тогда
        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = "Не заполнен период";
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПроверитьЗаполнениеУслуги(Знач Услуга)
    РезультатФункции = Новый Структура("Успех, ТекстСообщения", Истина);

    Если ЗначениеЗаполнено(Услуга) = Ложь Тогда
        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = "Не заполнена услуга";
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

&НаКлиенте
Функция ПолучитьТекстовоеПредставлениеСтрокиПоказанийСчетчиков(Знач СтрокаДанных)
    РазделительДанных = ";";

    ДлинаКодаМКД = 9;
    ПреставлениеКодаМКД = СокрЛП(СтрокаДанных.КодМКД);
    ПреставлениеКодаМКД = ?(ПустаяСтрока(ПреставлениеКодаМКД), "", СтроковыеФункцииКлиентСервер.ДополнитьСтроку(
                СтрокаДанных.КодМКД, ДлинаКодаМКД, "0", "Слева"));

    ПредставлениеДаты = ?(ЗначениеЗаполнено(СтрокаДанных.ДатаПоверки) = Ложь, "", Формат(СтрокаДанных.ДатаПоверки, "ДФ='dd.MM.yyyy'"));

    ПредставлениеПоказания = Формат(СтрокаДанных.Расход, "ЧЦ=18; ЧДЦ=6; ЧН=0");

    РезультатФункции = СтрШаблон("%2%1%3%1%4%1%5",
            РазделительДанных,
            ПреставлениеКодаМКД,
            СтрокаДанных.ЗаводскойНомер,
            ПредставлениеДаты,
            ПредставлениеПоказания);

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
