// Гарант+ Килипенко 23.09.2024 [F00228750] Доработка ПФ Акт реализации ++
#Область СлужебныеПроцедурыИФункции

#Область ПереопределениеСтандартныхФункций

&ИзменениеИКонтроль("ПечатьАктаОбОказанииУслуг")
Функция ГП_ПечатьАктаОбОказанииУслуг(СведенияАктаОбОказанииУслуг, ОбъектыПечати, СтруктураПараметровПечати)

    УстановитьПривилегированныйРежим(Истина);

    ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
    Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
        ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
    КонецЕсли;
    ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;

    ТабличныйДокумент = Новый ТабличныйДокумент;
    ТабличныйДокумент.АвтоМасштаб			= Истина;
    ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
    ТабличныйДокумент.КлючПараметровПечати	= СтруктураПараметровПечати.ИмяПараметровПечати;

    #Вставка
    // Гарант+ Килипенко 23.09.2024 [F00228750] Доработка ПФ Акт реализации ++
    // Замена макета печати
    ГП_ЭтоМодифицированныйАктРеализации = Ложь;
    Если СтруктураПараметровПечати.ИмяМакетаПечати =  "Документ.РеализацияТоваровУслуг.ПФ_MXL_Акт" Тогда
        СтруктураПараметровПечати.ИмяМакетаПечати = "Документ.РеализацияТоваровУслуг.ГП_ПФ_MXL_Акт";
        ГП_ЭтоМодифицированныйАктРеализации = Истина;
    КонецЕсли;
    // Гарант+ Килипенко 23.09.2024 [F00228750] Доработка ПФ Акт реализации ++
    #КонецВставки
    Макет = УправлениеПечатью.МакетПечатнойФормы(СтруктураПараметровПечати.ИмяМакетаПечати);

    ПервыйДокумент = Истина;

    Для Каждого СведенияОДокументе ИЗ СведенияАктаОбОказанииУслуг Цикл

        Если НЕ ПервыйДокумент Тогда
            ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;

        ЭтоПечатьЗаПоставщика = СтруктураПараметровПечати.ВидДокументаПечати	 = "ПоступлениеИзПереработки"
        ИЛИ СтруктураПараметровПечати.ВидДокументаПечати = "ПоступлениеТоваровУслуг"
        ИЛИ СтруктураПараметровПечати.ВидДокументаПечати = "КорректировкаПоступления"
        ИЛИ СтруктураПараметровПечати.ВидДокументаПечати = "ПоступлениеДопРасходов";

        ПервыйДокумент = Ложь;

        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

        ТаблицаУслуги = СведенияОДокументе.ТаблицаДокумента;

        // Выводим шапку документа
        ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
        ДанныеПечатиЗаголовок = Новый Структура("ТекстЗаголовка, ТекстЗаголовкаИсправления");
        ТекстЗаголовка = НСтр("ru='Акт № %1 от %2 г.'");
        НомерДокумента = ?(ЗначениеЗаполнено(СведенияОДокументе.ГосударственныйКонтракт), СведенияОДокументе.ГосударственныйКонтракт + "/", "") + СведенияОДокументе.НомерДокумента;
        ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, 
        НомерДокумента, 
        Формат(СведенияОДокументе.ДатаДокумента, "ДФ='дд ММММ гггг'"));
        ДанныеПечатиЗаголовок.Вставить("ТекстЗаголовка", ТекстЗаголовка);
        Если СтруктураПараметровПечати.ВидДокументаПечати = "КорректировкаРеализации" ИЛИ СтруктураПараметровПечати.ВидДокументаПечати = "КорректировкаПоступления" Тогда
            ТекстЗаголовкаИсправления = НСтр("ru='Исправление № %1 от %2 г.'");
            ТекстЗаголовкаИсправления = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовкаИсправления, 
            СведенияОДокументе.НомерИсправления, 
            Формат(СведенияОДокументе.ДатаИсправления, "ДФ='дд ММММ гггг'"));
            ДанныеПечатиЗаголовок.Вставить("ТекстЗаголовкаИсправления", ТекстЗаголовкаИсправления);
        КонецЕсли;

        ОбластьМакета.Параметры.Заполнить(ДанныеПечатиЗаголовок);

        ТабличныйДокумент.Вывести(ОбластьМакета);

        ГосударственныйКонтрактСсылка = СведенияОДокументе.ГосударственныйКонтрактСсылка;

        СведенияОбПоставщике = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
        СведенияОДокументе.Поставщик,
        СведенияОДокументе.ДатаДокумента,
        СведенияОДокументе.БанковскийСчетПродавца,
        ,
        ГосударственныйКонтрактСсылка,
        Истина);
        ПредставлениеПоставщика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбПоставщике, 
        "НаименованиеДляПечатныхФорм,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");

        ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
        ДанныеПечатиПоставщик = Новый Структура;
        ДанныеПечатиПоставщик.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);
        ДанныеПечатиПоставщик.Вставить("Поставщик", СведенияОДокументе.Поставщик);

        ОбластьМакета.Параметры.Заполнить(ДанныеПечатиПоставщик);
        ТабличныйДокумент.Вывести(ОбластьМакета);

        Если Макет.Области.Найти("Получатель") <> Неопределено Тогда
            ОбластьМакета = Макет.ПолучитьОбласть("Получатель");
        Иначе
            ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
        КонецЕсли;

        СведенияОКонтрагенте = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
        СведенияОДокументе.Получатель,
        СведенияОДокументе.ДатаДокумента,
        ,
        ,
        ГосударственныйКонтрактСсылка);
        ПредставлениеПолучателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте,
        "НаименованиеДляПечатныхФорм,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
        #Вставка
        // Гарант+ Килипенко 23.09.2024 [F00228750] Доработка ПФ Акт реализации ++
        Если ГП_ЭтоМодифицированныйАктРеализации Тогда
            // Удаление контактной информации из представления
            ПредставлениеПолучателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, 
                "НаименованиеДляПечатныхФорм,ИНН,ЮридическийАдрес,НомерСчета,Банк,БИК,КоррСчет");
        КонецЕсли;
        // Гарант+ Килипенко 23.09.2024 [F00228750] Доработка ПФ Акт реализации --
        #КонецВставки

        ДанныеПечатиПолучатель = Новый Структура;
        ДанныеПечатиПолучатель.Вставить("ПредставлениеПолучателя", ПредставлениеПолучателя);
        ДанныеПечатиПолучатель.Вставить("Получатель", СведенияОДокументе.Получатель);
        ДанныеПечатиПолучатель.Вставить("Основание", СведенияОДокументе.ПредставлениеДоговора);

        ОбластьМакета.Параметры.Заполнить(ДанныеПечатиПолучатель);

        ТабличныйДокумент.Вывести(ОбластьМакета);

        // Инициализация счетчика строк
        НомерСтроки = 0;

        // Выводим заголовок многострочной части
        ОбластьШапки = ?(ВыводитьКоды, "ШапкаСКодом", "ШапкаТаблицы");
        ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
        ОбластьМакета.Параметры.Заполнить(СведенияОДокументе);
        ДанныеПечатиКод = Новый Структура;
        Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
            ДанныеПечатиКод.Вставить("ИмяКодАртикул", "Артикул");
        ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
            ДанныеПечатиКод.Вставить("ИмяКодАртикул", "Код");
        КонецЕсли;
        ОбластьМакета.Параметры.Заполнить(ДанныеПечатиКод);
        ТабличныйДокумент.Вывести(ОбластьМакета);

        ОбластьСтроки = ?(ВыводитьКоды, "СтрокаСКодом", "Строка");
        ОбластьСтроки = Макет.ПолучитьОбласть(ОбластьСтроки);

        // Выводим многострочную часть документа
        Для каждого СтрокаТабличнойЧасти Из ТаблицаУслуги Цикл

            НомерСтроки = НомерСтроки + 1;

            СтруктураПараметры = Новый Структура();
            СтруктураПараметры.Вставить("НомерСтроки", 				НомерСтроки);
            СтруктураПараметры.Вставить("НоменклатураНаименование", СокрЛП(СтрокаТабличнойЧасти.НоменклатураНаименование));
            СтруктураПараметры.Вставить("Товар", 				   	СокрЛП(СтрокаТабличнойЧасти.НоменклатураНаименование));
            СтруктураПараметры.Вставить("Номенклатура", 			СтрокаТабличнойЧасти.Номенклатура);
            СтруктураПараметры.Вставить("Количество", 				СтрокаТабличнойЧасти.Количество);
            СтруктураПараметры.Вставить("ЕдиницаИзмерения", 		СтрокаТабличнойЧасти.ЕдиницаИзмеренияНаименование);
            СтруктураПараметры.Вставить("Цена", 				   	СтрокаТабличнойЧасти.Цена);
            СтруктураПараметры.Вставить("Сумма", 				   	СтрокаТабличнойЧасти.Сумма);

            Если ВыводитьКоды Тогда
                СтруктураПараметры.Вставить("НоменклатураКод", 		СтрокаТабличнойЧасти.НоменклатураКод);
                СтруктураПараметры.Вставить("КодАртикул", 			СтрокаТабличнойЧасти.НоменклатураКод);
            КонецЕсли;

            ОбластьСтроки.Параметры.Заполнить(СтруктураПараметры);

            ТабличныйДокумент.Вывести(ОбластьСтроки);

        КонецЦикла;

        // Выводим подвал документа
        Если ТаблицаУслуги <> Неопределено Тогда
            Сумма    = ТаблицаУслуги.Итог("Сумма");
            СуммаНДС = ТаблицаУслуги.Итог("СуммаНДС");
        Иначе
            Сумма    = 0;
            СуммаНДС = 0;
        КонецЕсли;

        ОбластьМакета = Макет.ПолучитьОбласть("Итого");
        ОбластьМакета.Параметры.Заполнить(Новый Структура("Всего", ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма)));
        ТабличныйДокумент.Вывести(ОбластьМакета);

        ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");

        СтавкиНДС = ОбщегоНазначения.ВыгрузитьКолонку(СведенияОДокументе.ТаблицаДокумента, "СтавкаНДС", Истина);

        ДанныеПечатиИтоговНДС = ДанныеПечатиИтоговНДС(СуммаНДС, СтавкиНДС, СведенияОДокументе.СуммаВключаетНДС);
        #Вставка
        // Гарант+ Килипенко 23.09.2024 [F00228750] Доработка ПФ Акт реализации ++
        Если ГП_ЭтоМодифицированныйАктРеализации И СведенияОДокументе.СуммаВключаетНДС = Ложь Тогда
            //ДанныеПечатиИтоговНДС = ДанныеПечатиИтоговНДС(СуммаНДС, СтавкиНДС, Истина);
            //ДанныеПечатиИтоговНДС.СуммаПрописью = СтрШаблон("%1, в т.ч.: НДС - %2",
            //    ДанныеПечатиИтоговНДС.СуммаПрописью, );
            ГП_ОбластьМакетаВсегоСУчетомНДС = Макет.ПолучитьОбласть("ГП_ИтогоСУчетомНДС");
            ГП_ОбластьМакетаВсегоСУчетомНДС.Параметры.ВсегоСУчетомНДС = Сумма + СуммаНДС;
        КонецЕсли;
        // Гарант+ Килипенко 23.09.2024 [F00228750] Доработка ПФ Акт реализации --
        #КонецВставки

        ОбластьМакета.Параметры.Заполнить(ДанныеПечатиИтоговНДС);
        ТабличныйДокумент.Вывести(ОбластьМакета);
        #Вставка
        // Гарант+ Килипенко 23.09.2024 [F00228750] Доработка ПФ Акт реализации ++
        Если ГП_ЭтоМодифицированныйАктРеализации И ГП_ОбластьМакетаВсегоСУчетомНДС <> Неопределено Тогда
            ТабличныйДокумент.Вывести(ГП_ОбластьМакетаВсегоСУчетомНДС);
        КонецЕсли;
        // Гарант+ Килипенко 23.09.2024 [F00228750] Доработка ПФ Акт реализации --
        #КонецВставки

        СуммаКПрописи = Сумма + ?(СведенияОДокументе.СуммаВключаетНДС, 0, СуммаНДС);
        ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
        ИтоговаяСтрока = НСтр("ru='Всего оказано услуг %1, на сумму %2'");
        ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ИтоговаяСтрока, НомерСтроки, ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКПрописи, СведенияОДокументе.Валюта));
        СуммаПрописью  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи, СведенияОДокументе.Валюта);
        #Вставка
        // Гарант+ Килипенко 23.09.2024 [F00228750] Доработка ПФ Акт реализации ++
        Если ГП_ЭтоМодифицированныйАктРеализации И ГП_ОбластьМакетаВсегоСУчетомНДС <> Неопределено Тогда
            СтруктураНДСДляЗаполнения = ДанныеПечатиИтоговНДС(СуммаНДС, СтавкиНДС, Истина);
            
            ТекстНДС = НРег(Сред(СтруктураНДСДляЗаполнения.НДС, 1, 1)) + Сред(СтруктураНДСДляЗаполнения.НДС, 2);
            СуммаНДСПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СтруктураНДСДляЗаполнения.ВсегоНДС, 
                    СведенияОДокументе.Валюта);
            СуммаНДСПрописью = НРег(Сред(СуммаНДСПрописью, 1, 1)) + Сред(СуммаНДСПрописью, 2);
            
            СуммаПрописью = СтрШаблон("%1, %2 - %3",
                СуммаПрописью, 
                ТекстНДС,
                СуммаНДСПрописью);
        КонецЕсли;
        // Гарант+ Килипенко 23.09.2024 [F00228750] Доработка ПФ Акт реализации --
        #КонецВставки
        ДанныеПечатиСуммаПрописью = Новый Структура;
        ДанныеПечатиСуммаПрописью.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
        ДанныеПечатиСуммаПрописью.Вставить("СуммаПрописью", СуммаПрописью);
        ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСуммаПрописью);
        ТабличныйДокумент.Вывести(ОбластьМакета);

        // Выводим подписи
        ОбластьМакета = Макет.ПолучитьОбласть("Подписи");

        Если ЭтоПечатьЗаПоставщика Тогда
            ЗаместительПоПриказу = "";
        Иначе
            СтатусФизическогоЛица = Справочники.Организации.СтатусФизическогоЛицаНаДату(
            СведенияОДокументе.Организация, СведенияОДокументе.ДатаДляПолученияСведений);
            ЗаРуководителяНаОсновании = ?(ПустаяСтрока(СведенияОДокументе.ЗаРуководителяНаОснованииНаименование), "" , ", " + СведенияОДокументе.ЗаРуководителяНаОснованииНаименование);
            ЗаместительПоПриказу = ?(
            СтатусФизическогоЛица = Перечисления.СтатусыФизическихЛиц.Самозанятый,
            "",
            СведенияОДокументе.РуководительФИО + ЗаРуководителяНаОсновании);
        КонецЕсли;

        ПредставлениеПоставщика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбПоставщике, "НаименованиеДляПечатныхФорм");
        Если НЕ ЭтоПечатьЗаПоставщика И ЗначениеЗаполнено(СведенияОДокументе.РуководительДолжностьНаименование) И ЗначениеЗаполнено(ПредставлениеПоставщика) Тогда 
            ДолжностьИНазваниеОрганизации = СведенияОДокументе.РуководительДолжностьНаименование + " " + ПредставлениеПоставщика;
        ИначеЕсли НЕ ЭтоПечатьЗаПоставщика И ЗначениеЗаполнено(СведенияОДокументе.РуководительДолжностьНаименование) Тогда 
            ДолжностьИНазваниеОрганизации = СведенияОДокументе.РуководительДолжностьНаименование;
        Иначе
            ДолжностьИНазваниеОрганизации = ПредставлениеПоставщика;
        КонецЕсли;


        ПредставлениеЗаказчика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм");
        ДанныеПечатиПодписи = Новый Структура;
        ДанныеПечатиПодписи.Вставить("НазваниеЗаказчика", ПредставлениеЗаказчика);

        Если НЕ ЭтоПечатьЗаПоставщика Тогда
            Если ЗначениеЗаполнено(СведенияОДокументе.ЗаЗаказчикаНаОсновании) Тогда
                ПредставительЗаказчика = СведенияОДокументе.ПредставительЗаказчика+", "+СведенияОДокументе.ЗаЗаказчикаНаОсновании;
            Иначе
                ПредставительЗаказчика = СведенияОДокументе.ПредставительЗаказчика;
            КонецЕсли;
            ДанныеПечатиПодписи.Вставить("ПредставительЗаказчика", ПредставительЗаказчика);
        Иначе
            ЗаРуководителяНаОсновании = ?(ПустаяСтрока(СведенияОДокументе.ЗаРуководителяНаОснованииНаименование), "" , ", " + СведенияОДокументе.ЗаРуководителяНаОснованииНаименование);
            ДанныеПечатиПодписи.Вставить("ПредставительЗаказчика", СведенияОДокументе.РуководительФИО + ЗаРуководителяНаОсновании);
        КонецЕсли;

        ДанныеПечатиПодписи.Вставить("ДолжностьИНазваниеОрганизации", ДолжностьИНазваниеОрганизации);
        ДанныеПечатиПодписи.Вставить("ЗаместительПоПриказу", ЗаместительПоПриказу);
        ОбластьМакета.Параметры.Заполнить(ДанныеПечатиПодписи);

        ТабличныйДокумент.Вывести(ОбластьМакета);

        // В табличном документе зададим имя области, в которую был 
        // выведен объект. Нужно для возможности печати покомплектно.
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
        НомерСтрокиНачало, ОбъектыПечати, СведенияОДокументе.Документ);

        УправлениеПечатьюБП.ДополнитьДокументПодписьюИПечатью(ТабличныйДокумент, СведенияОДокументе, ОбъектыПечати, СтруктураПараметровПечати);

    КонецЦикла;

    Возврат ТабличныйДокумент;

КонецФункции

#КонецОбласти // ПереопределениеСтандартныхФункций

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 23.09.2024 [F00228750] Доработка ПФ Акт реализации --
