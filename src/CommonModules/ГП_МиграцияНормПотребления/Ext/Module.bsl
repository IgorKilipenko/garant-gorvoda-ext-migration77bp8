// Гарант+ Килипенко 14.08.2024 [F00227047] перенос норм потребления из БП77 ++
#Область ПрограммныйИнтерфейс

// Выполняет чтение данных норм потребления (ГруппыПотребителей) (из БП 7.7) из файла и записывает
//  данные в регистр `ГП_НормыПотребленияБП77`
// Параметры:
//  ПараметрыЗагрузки - Структура
//      * ДвоичныеДанныеФайла - ДвоичныеДанные
//      * СохранятьСвязи - Булево - Если Ложь, установленные связи с БанковскимСчетом
//                                      будут разорваны (поле `БанковскийСчет` будет установлено в значение пустая ссылка)
//  АдресХранилища - Строка, Неопределено
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанных - Число
//      * ТекстСообщения - Строка, Неопределено
//  - Неопределено
Функция ЗагрузитьДанныеНормПотребленийВРегистр(ПараметрыЗагрузки, АдресХранилища = Неопределено) Экспорт
    РезультатФункции = Новый Структура("Успех, КоличествоЗаписанных, ТекстСообщения", Ложь, 0);

    // Чтение данных из файла XML
    РезультатЧтенияДанных = ГП_МиграцияОбщегоНазначения.ПрочитатьДанныеИзФайлаXML(
            ПараметрыЗагрузки.ДвоичныеДанныеФайла, "ГруппаПотребителя");
    Если РезультатЧтенияДанных.Успех = Ложь Тогда
        РезультатФункции.ТекстСообщения = РезультатЧтенияДанных.ТекстСообщения;
        Возврат ГП_МиграцияОбщегоНазначения.ПоместитьВХранилищеИВернуть(РезультатФункции, АдресХранилища);
    КонецЕсли;

    // Проверка структуры данных
    Если ТипЗнч(РезультатЧтенияДанных.Данные) <> Тип("СписокXDTO") Тогда
        РезультатФункции.ТекстСообщения = "Ошибка структуры данных.";
        Возврат ГП_МиграцияОбщегоНазначения.ПоместитьВХранилищеИВернуть(РезультатФункции, АдресХранилища);
    КонецЕсли;

    // Запись данных в регистр
    НормыПотребленияБП77 = РезультатЧтенияДанных.Данные;
    РезультатЗаписи = ЗаписатьДанныеНормПотребленийВРегистр(НормыПотребленияБП77, ПараметрыЗагрузки.СохранятьСвязи);

    // Формирование результата
    РезультатФункции.Успех = РезультатЗаписи.Успех;
    РезультатФункции.ТекстСообщения = РезультатЗаписи.СообщениеОбОшибке;
    РезультатФункции.КоличествоЗаписанных = РезультатЗаписи.КоличествоЗаписанных;

    Возврат ГП_МиграцияОбщегоНазначения.ПоместитьВХранилищеИВернуть(РезультатФункции, АдресХранилища);
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 14.08.2024 [F00227047] перенос норм потребления из БП77 --

// Гарант+ Килипенко 14.08.2024 [F00227047] перенос норм потребления из БП77 ++
#Область СлужебныйПрограммныйИнтерфейс

// Выполняет запись исходных данных норм потребления в регистр `ГП_НормыПотребленияБП77` (по данным из БП77)
//  Существующие записи по отбору составного кода будут перезаписаны
// Параметры:
//  ИсходныеДанныеНормПотреблений - Массив из Структура - Данные БП77
//  СохранятьСвязи - Булево - Если Истина, связи с Нормами потребления услуг будут сохранены
// Возвращаемое значение:
//  Структура:
//      * Успех - Булево
//      * КоличествоЗаписанных - Число
//      * КоличествоСохраненныхСвязей - Число
//      * СообщениеОбОшибке - Строка, Неопределено
Функция ЗаписатьДанныеНормПотребленийВРегистр(Знач ИсходныеДанныеНормПотреблений, Знач СохранятьСвязи = Истина) Экспорт
    РезультатФункции = Новый Структура(
            "Успех, КоличествоЗаписанных, КоличествоСохраненныхСвязей, СообщениеОбОшибке", Истина, 0, 0);

    Если ИсходныеДанныеНормПотреблений = Неопределено ИЛИ ИсходныеДанныеНормПотреблений.Количество() = 0 Тогда
        Возврат РезультатФункции; // Нет данных
    КонецЕсли;

    // Поля для предобработки (приведения типов)
    КлючиЧисел = "НормаХВ,НормаГВ,ПроцентХВ,ПроцентГВ";

    // Транзакция записи в регистр ГП_ДоговорыБП77
    НачатьТранзакцию();
    Попытка

        Для Каждого НормаПотребленияБП77 Из ИсходныеДанныеНормПотреблений Цикл
            НаборЗаписейНормПотреблений = СоздатьНаборЗаписейНормПотребленияБП77(НормаПотребленияБП77);

            // Данные для сохранения связи
            СвязанныйНормаПотребленияУслуг = Неопределено;
            Если СохранятьСвязи Тогда
                НаборЗаписейНормПотреблений.Прочитать();
                Если НаборЗаписейНормПотреблений.Количество() > 0 Тогда
                    СвязанныйНормаПотребленияУслуг = НаборЗаписейНормПотреблений[0].НормаПотребленияУслуг;
                    СвязанныйНормаПотребленияУслуг = ?(ЗначениеЗаполнено(СвязанныйНормаПотребленияУслуг),
                            СвязанныйНормаПотребленияУслуг, Неопределено);
                    НаборЗаписейНормПотреблений.Очистить();
                КонецЕсли;
            КонецЕсли;
            НоваяЗапись = НаборЗаписейНормПотреблений.Добавить();

            // Заполнение данных
            ЗаполнитьЗначенияСвойств(НоваяЗапись, НормаПотребленияБП77, ,
                СтрШаблон("%1", КлючиЧисел));

            // Заполнение полей с преобразованием типов
            Для Каждого Ключ Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КлючиЧисел, ",", Ложь, Истина) Цикл
                НоваяЗапись[Ключ] = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(НормаПотребленияБП77[Ключ]);
            КонецЦикла;

            НаборЗаписейНормПотреблений.Записать(Истина);
            РезультатФункции.КоличествоЗаписанных = РезультатФункции.КоличествоЗаписанных + 1;
        КонецЦикла;

        ЗафиксироватьТранзакцию(); // Записано успешно
    Исключение
        ОтменитьТранзакцию();

        ОбщаяЧастьСообщения = "Ошибка при загрузке данных норм потребления в регистр ""ГП_РасчетныеСчетаБП77"".";
        СтруктураОшибки = ГП_МиграцияОбщегоНазначения.ЗаписатьОшибкуВЖурнал(
                ОбщаяЧастьСообщения, ИнформацияОбОшибке(), Ложь, Истина);

        РезультатФункции.Успех = Ложь;
        РезультатФункции.СообщениеОбОшибке = СтрШаблон(
                "%1
                |Информация об ошибке: %2",
                ОбщаяЧастьСообщения,
                СтруктураОшибки.КраткоеПредставлениеОшибки);

        РезультатФункции.КоличествоЗаписанных = 0;
        РезультатФункции.КоличествоСохраненныхСвязей = 0;
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  НормаПотребленияБП77 - Структура
//      * Код - Строка - Код ГруппыПотребителей в БП77
//      * Группа - Строка - Наименование группы (папки) ГруппыПотребителей в БП77
//      * Наименование - Строка - Наименование ГруппыПотребителей в БП77
// Возвращаемое значение:
//  - РегистрСведений.ГП_НормыПотребленияБП77.НаборЗаписей
Функция СоздатьНаборЗаписейНормПотребленияБП77(Знач НормаПотребленияБП77) Экспорт
    НаборЗаписей = РегистрыСведений.ГП_НормыПотребленияБП77.СоздатьНаборЗаписей();
    НаборЗаписей.Отбор.Код.Установить(НормаПотребленияБП77.Код);
    НаборЗаписей.Отбор.Группа.Установить(НормаПотребленияБП77.Группа);
    НаборЗаписей.Отбор.Наименование.Установить(НормаПотребленияБП77.Наименование);

    Возврат НаборЗаписей;
КонецФункции

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
// Гарант+ Килипенко 14.08.2024 [F00227047] перенос норм потребления из БП77 --
