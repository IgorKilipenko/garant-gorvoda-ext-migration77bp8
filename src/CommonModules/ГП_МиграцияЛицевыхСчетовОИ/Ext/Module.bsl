#Область ПрограммныйИнтерфейс

// Выполняет создание лицевых счетов для виртуальных счетчиков ОИ для которы л/с отсутствуют в ИБ
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * СозданныеЛицевыеСчета - Массив из СправочникСсылка.КВП_ЛицевыеСчета
//      * ТекстСообщения - Строка, Неопределено
Функция СоздатьЛицевыеСчетаВиртуальныхСчетчиковОИ() Экспорт
    РезультатФункции = Новый Структура("Успех, СозданныеЛицевыеСчета, ТекстСообщения", Истина, Новый Массив);

    ДанныеДляСоздания = ПолучитьДанныеДляСозданияНовыхЛицевыхСчетовОИ();

    // Создание лицевых счетов
    НачатьТранзакцию();
    Попытка
        Для Каждого СтрокаДанных Из ДанныеДляСоздания Цикл
            // Контроль полей строки данных
            Если СтрокаДанных.КонтрагентКодБП77 = "" ИЛИ СтрокаДанных.ОбъектАбонентаКодОИ = "" Тогда
                ВызватьИсключение("Код контрагента и код объекта абонента должны быть заполнены.");
            КонецЕсли;

            // Создание нового элемента ЛицевойСчет
            НовыйЛицевойСчет = Справочники.КВП_ЛицевыеСчета.СоздатьЭлемент();
            НовыйЛицевойСчет.ГП_СозданАвтоматически = Ложь;

            КонтрагентНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаДанных.Контрагент, "Наименование");
            НовыйЛицевойСчет.Наименование = ГП_МиграцияЛицевыхСчетов.СформироватьНаименованиеЛицевогоСчета(
                    КонтрагентНаименование, СтрокаДанных.ОбъектАбонентаНаименованиеОИ);
            НовыйЛицевойСчет.Идентификатор = ГП_МиграцияЛицевыхСчетов.СформироватьИдентификаторЛицевогоСчета(
                    СтрокаДанных.КонтрагентКодБП77, СтрокаДанных.ОбъектАбонентаКодОИ);

            // Формирование данных комментария для последующего открытия л/с
            СтруктураИнформацииКомментария = Новый Структура;
            СтруктураИнформацииКомментария.Вставить("КодСчетчика",
                ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаДанных.Счетчик, "Код"));
            СтруктураИнформацииКомментария.Вставить("КодДоговора",
                ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаДанных.Договор, "Код"));
            СтруктураИнформацииКомментария.Вставить("ДоговорНомерБП77", СтрокаДанных.ДоговорНомерБП77);
            СтруктураИнформацииКомментария.Вставить("ДоговорКодБП77", СтрокаДанных.ДоговорКодБП77);
            СтруктураИнформацииКомментария.Вставить("ИдентификаторЛССчетчикаОИ", СтрокаДанных.ИдентификаторЛССчетчикаОИ);
            СтруктураИнформацииКомментария.Вставить("ОбъектАбонентаНаименованиеОИ", СтрокаДанных.ОбъектАбонентаНаименованиеОИ);
            КомментарийJSON = ЗаписатьЗначениеJSON(СтруктураИнформацииКомментария);
            НовыйЛицевойСчет.ГП_Комментарий = СтрШаблон("###[[ОИ]] дынные: [[%1]]###", КомментарийJSON);

            НовыйЛицевойСчет.Записать();
            РезультатФункции.СозданныеЛицевыеСчета.Добавить(НовыйЛицевойСчет.Ссылка);
        КонецЦикла;

        ЗафиксироватьТранзакцию(); // Записано успешно
    Исключение
        ОтменитьТранзакцию();
        ОбщаяЧастьСообщения = "Ошибка при создании лицевых счетов.";
        СтруктураОшибки = ГП_МиграцияОбщегоНазначения.ЗаписатьОшибкуВЖурнал(
                ОбщаяЧастьСообщения, ИнформацияОбОшибке(), Ложь, Истина);

        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = СтрШаблон(
                "%1
                |Информация об ошибке: %2",
                ОбщаяЧастьСообщения,
                СтруктураОшибки.КраткоеПредставлениеОшибки);

        РезультатФункции.СозданныеЛицевыеСчета.Очистить();
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Счетчик - СправочникСсылка.КВП_Счетчики
//      * Договор - СправочникСсылка.ДоговорыКонтрагентов
//      * Контрагент - СправочникСсылка.Контрагенты
//      * Организация - СправочникСсылка.Организации
//      * ВидДоговора - СправочникСсылка.lc_ВидыДоговоров
//      * НаименованиеДоговораИБ - Строка
//      * НомерДоговораИБ - Строка
//      * КонтрагентКодБП77 - Строка
//      * ОбъектАбонентаКодОИ - Строка
//      * ИдентификаторЛССчетчикаОИ - Строка
//      * ОбъектАбонентаНаименованиеОИ - Строка
//      * ДоговорКодБП77 - Строка
//      * ДоговорНомерБП77 - Строка
//      * НаименованиеДоговораБП77 - Строка
//      * ДоговорДатаБП77 - Дата
Функция ПолучитьДанныеДляСозданияНовыхЛицевыхСчетовОИ() Экспорт
    // Формирование (расшифровка) номеров договоров по наименованию:
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
        |	ДоговорыКонтрагентов.Наименование КАК Наименование,
        |	ВЫРАЗИТЬ("""" КАК СТРОКА(15)) КАК НомерИзНаименования
        |ИЗ
        |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
        |ГДЕ
        |	ДоговорыКонтрагентов.ЭтоГруппа = ЛОЖЬ
        |	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
        |	И ДоговорыКонтрагентов.lc_ВидДоговора В (&ВидыДоговора)
        |	И ДоговорыКонтрагентов.Владелец ССЫЛКА Справочник.Контрагенты
        |";

    СписокВидовДоговоров = Новый Массив;
    СписокВидовДоговоров.Добавить(ГП_РаботаСДоговорами.ПолучитьДополнительныйВидДоговораАбонентскийОтдел().Ссылка);

    Запрос.УстановитьПараметр("ВидыДоговора", СписокВидовДоговоров);

    РезультатЗапроса = Запрос.Выполнить();
    СоответствияНомеровСуществующихДоговоров = РезультатЗапроса.Выгрузить();
    Для Каждого СтрокаДанных Из СоответствияНомеровСуществующихДоговоров Цикл
        // Заполнение поля ДоговорНомер
        СтруктураНомера = ГП_МиграцияОбщегоНазначения.ПолучитьНомерДоговораПоНаименованию(СтрокаДанных.Наименование);
        Если СтруктураНомера.Успех = Истина Тогда
            СтрокаДанных.НомерИзНаименования = СтруктураНомера.Номер + ?(ПустаяСтрока(СтруктураНомера.Суффикс),
                    "", СтрШаблон("-%1", СтруктураНомера.Суффикс));
        КонецЕсли;
    КонецЦикла;

    // Основной запрос данных
    Запрос = Новый Запрос;
    Запрос.Текст = ПолучитьТекстЗапросаДанныеСозданияНовыхЛицевыхСчетовОИ();
    Запрос.УстановитьПараметр("СоответствияНомеровСуществующихДоговоров", СоответствияНомеровСуществующихДоговоров);
    Запрос.УстановитьПараметр("ВидыДоговора", СписокВидовДоговоров);

    РезультатЗапроса = Запрос.Выполнить();
    ДанныеЗаполнения = РезультатЗапроса.Выгрузить();

    Возврат ДанныеЗаполнения;
КонецФункции

// Выполняет создание зданий и помещений для новых (созданных) л/с платы за ОИ
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * СозданныеЗдания - Массив из СправочникСсылка.КВП_Здания
//      * СозданныеПомещения - Массив из СправочникСсылка.УПЖКХ_Помещения
//      * ОбновленныеЛицевыеСчета - Массив из СправочникСсылка.КВП_ЛицевыеСчета
//      * ТекстСообщения - Строка, Неопределено
Функция СоздатьЗданияПомещенияЛицевыхСчетовОИ() Экспорт
    РезультатФункции = Новый Структура("Успех, СозданныеЗдания, СозданныеПомещения, ОбновленныеЛицевыеСчета, ТекстСообщения",
            Истина, Новый Массив, Новый Массив, Новый Массив);

    ДанныеДляСоздания = ПолучитьДанныеСозданияЗданийПомещенийЛицевыхСчетовОИ();

    ПараметрыСоздания = Новый Структура;
    ПараметрыСоздания.Вставить("ОбновлятьСвязиПередСозданием", Ложь);
    ПараметрыСоздания.Вставить("УстанавливатьСвязиПослеСоздания", Ложь);
    ПараметрыСоздания.Вставить("СоздаватьПомещения", Истина);

    // Создание зданий и помещений
    РезультатСозданияЗданийПомещений = ГП_МиграцияЗданий.СоздатьЗданияПоДаннымЗаписейБП77(ПараметрыСоздания, ДанныеДляСоздания);
    Если РезультатСозданияЗданийПомещений.Успех = Ложь Тогда
        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = РезультатСозданияЗданийПомещений.ТекстСообщения;

        Возврат РезультатФункции; // Ошибка при создании зданий / помещений
    Иначе
        РезультатФункции.СозданныеЗдания = РезультатСозданияЗданийПомещений.СозданныеЗдания;
        РезультатФункции.СозданныеПомещения = РезультатСозданияЗданийПомещений.СозданныеПомещения;
    КонецЕсли;

    // Установка помещений на л/с
    ТаблицаПомещений = Новый ТаблицаЗначений;
    ТаблицаПомещений.Колонки.Добавить("Помещение", Новый ОписаниеТипов("СправочникСсылка.УПЖКХ_Помещения"));
    ТаблицаПомещений.Колонки.Добавить("Здание", Новый ОписаниеТипов("СправочникСсылка.КВП_Здания"));
    ТаблицаПомещений.Индексы.Добавить("Здание");
    Для Каждого ЭлементПомещение Из РезультатФункции.СозданныеПомещения Цикл
        Если ЭлементПомещение = Неопределено ИЛИ ЭлементПомещение = Справочники.УПЖКХ_Помещения.ПустаяСсылка() Тогда
            Продолжить;
        КонецЕсли;

        НоваяСтрока = ТаблицаПомещений.Добавить();
        НоваяСтрока.Помещение = ЭлементПомещение;
        НоваяСтрока.Здание = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементПомещение, "Владелец");
    КонецЦикла;

    ПомещенияЛицевыхСчетов = Новый Соответствие;
    Для Каждого СтрокаДанных Из ДанныеДляСоздания Цикл
        Если СтрокаДанных.Здание = Неопределено ИЛИ ЭлементПомещение = Справочники.КВП_Здания.ПустаяСсылка() Тогда
            Продолжить;
        КонецЕсли;

        НайденныеСтроки = ТаблицаПомещений.НайтиСтроки(Новый Структура("Здание", СтрокаДанных.Здание));
        Если НайденныеСтроки.Количество() = 0 Тогда
            ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
                    "Внимание! Не найдено помещение для здания: ""%1""", Строка(СтрокаДанных.Здание)));
            Продолжить;
        КонецЕсли;

        ПомещенияЛицевыхСчетов.Вставить(СтрокаДанных.ЛицевойСчет, НайденныеСтроки[0].Помещение);
    КонецЦикла;

    // Назначение помещений и запись л/с
    НачатьТранзакцию();
    Попытка
        Для Каждого ЭлементКЗ Из ПомещенияЛицевыхСчетов Цикл
            ЛицевойСчетОбъект = ЭлементКЗ.Ключ.ПолучитьОбъект();
            Если ЛицевойСчетОбъект.Адрес <> Справочники.УПЖКХ_Помещения.ПустаяСсылка() Тогда
                Продолжить; // у л/с уже есть здание
            КонецЕсли;

            ЛицевойСчетОбъект.Адрес = ЭлементКЗ.Значение;
            ЛицевойСчетОбъект.Записать();
            РезультатФункции.ОбновленныеЛицевыеСчета.Добавить(ЛицевойСчетОбъект.Ссылка);
        КонецЦикла;

        ЗафиксироватьТранзакцию();

    Исключение
        ОтменитьТранзакцию();

        РезультатФункции.Успех = Ложь;
        РезультатФункции.ОбновленныеЛицевыеСчета.Очистить();
        РезультатФункции.ТекстСообщения = СтрШаблон(
                "Ошибка при записи лицевых счетов.
                |Информация: %1", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции

// Выполняет создание документов открытия лицевых счетов ОМ
// Параметры:
//  ДатаДокумента - Дата, Неопределено
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * СозданныеДокументы - Массив из ДокументСсылка.КВП_ОткрытиеЛицевогоСчета
//      * ТекстСообщения - Строка, Неопределено
Функция СоздатьДокументыОткрытияЛицевыхСчетовОИ(Знач ДатаДокумента = Неопределено) Экспорт
    РезультатФункции = Новый Структура("Успех, СозданныеДокументы, ТекстСообщения", Истина, Новый Массив);

    ДатаДокумента = ?(ДатаДокумента = Неопределено, ТекущаяДатаСеанса(), ДатаДокумента);

    // Получаем данные для открытия лицевых счетов
    ДанныеЗаполнения = ПолучитьДанныеДляОткрытияЛицевыхСчетовОИ();

    РезультатСоздания = ГП_МиграцияЛицевыхСчетов.СоздатьДокументыОткрытияЛицевыхСчетов(
            ДатаДокумента, Истина, ДанныеЗаполнения);
    Если РезультатСоздания.Успех = Ложь Тогда
        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = РезультатСоздания.ТекстСообщения;

        Возврат РезультатФункции; // Ошибка создания документа
    КонецЕсли;

    РезультатФункции.СозданныеДокументы = РезультатСоздания.СозданныеДокументыОткрытияЛицевогоСчета;
    Возврат РезультатФункции;
КонецФункции

// Создает документ УПЖКХ_УправлениеСведениямиДляВзаиморасчетовПоЛицевымСчетам для л/с ОИ
// Параметры:
//  ДатаДокумента - Дата, Неопределено
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписей - Число
//      * СозданныеДокументы - Массив из ДокументСсылка.УПЖКХ_УправлениеСведениямиДляВзаиморасчетовПоЛицевымСчетам
//      * ТекстСообщения - Строка, Неопределено
Функция СоздатьДокументУправленияСведениямиДляВзаиморасчетовПоЛицевымСчетамОИ(Знач ДатаДокумента = Неопределено) Экспорт
    РезультатФункции = Новый Структура("Успех, СозданныйДокумент, КоличествоЗаписей, ТекстСообщения",
        Истина, Документы.УПЖКХ_УправлениеСведениямиДляВзаиморасчетовПоЛицевымСчетам.ПустаяСсылка(), 0);

    ДатаДокумента = ?(ДатаДокумента = Неопределено, ТекущаяДатаСеанса(), ДатаДокумента);

    // Сбор данных для создания документа
    ДанныеЗаполнения = ПолучитьДанныеДляСозданияДокументаУправленияСведениямиДляВзаиморасчетовПоЛицевымСчетамОИ();

    // Создание документа
    РезультатСоздания = ГП_МиграцияЛицевыхСчетов.СоздатьДокументыУправленияСведениямиДляВзаиморасчетовПоЛицевымСчетам(
        ДатаДокумента, ДанныеЗаполнения);
    Если РезультатСоздания.Успех = Ложь Тогда
        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = РезультатСоздания.ТекстСообщения;

        Возврат РезультатФункции; // Ошибка создания документа
    КонецЕсли;

    РезультатФункции.КоличествоЗаписей = РезультатСоздания.КоличествоЗаписей;
    Если РезультатСоздания.СозданныеДокументы.Количество() > 0 Тогда
        РезультатФункции.СозданныйДокумент = РезультатСоздания.СозданныеДокументы[0];
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьДанныеСозданияЗданийПомещенийЛицевыхСчетовОИ() Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЛицевыеСчета.Ссылка КАК Ссылка,
        |	ЛицевыеСчета.Наименование КАК Наименование,
        |	ЛицевыеСчета.Адрес КАК Адрес,
        |	ЛицевыеСчета.Идентификатор КАК Идентификатор
        |ПОМЕСТИТЬ ВТ_ЛицевыеСчетаБезПомещений
        |ИЗ
        |	Справочник.КВП_ЛицевыеСчета КАК ЛицевыеСчета
        |ГДЕ
        |	ЛицевыеСчета.ЭтоГруппа = ЛОЖЬ
        |	И ЛицевыеСчета.ПометкаУдаления = ЛОЖЬ
        |	И ЛицевыеСчета.Адрес = ЗНАЧЕНИЕ(Справочник.УПЖКХ_Помещения.ПустаяСсылка)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЗданияБП77.КонтрагентКод КАК КонтрагентКод,
        |	ЗданияБП77.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ЗданияБП77.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ЗданияБП77.ДоговорНомер КАК ДоговорНомер,
        |	ЗданияБП77.ДоговорНаименование КАК ДоговорНаименование,
        |	ЗданияБП77.ОбъектАбонентаКод + ""_"" + ЗданияБП77.КонтрагентКод КАК ИдентификаторЛС
        |ПОМЕСТИТЬ ВТ_ЗданияБП77ОИ
        |ИЗ
        |	РегистрСведений.ГП_ЗданияБП77 КАК ЗданияБП77
        |ГДЕ
        |	ЗданияБП77.ЭтоПлатаЗаХолодноеВодоснабжениеОИ = ИСТИНА
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ЛицевыеСчетаБезПомещений.Ссылка КАК ЛицевойСчет,
        |	ВТ_ЛицевыеСчетаБезПомещений.Наименование КАК НаименованиеЛС,
        |	ЗНАЧЕНИЕ(Справочник.КВП_Здания.ПустаяСсылка) КАК Здание,
        |	ЗНАЧЕНИЕ(Справочник.УПЖКХ_Помещения.ПустаяСсылка) КАК Помещение,
        |	ВТ_ЛицевыеСчетаБезПомещений.Идентификатор КАК ИдентификаторЛС,
        |	ВТ_ЗданияБП77ОИ.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_ЗданияБП77ОИ.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_ЗданияБП77ОИ.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ВТ_ЗданияБП77ОИ.ДоговорНомер КАК ДоговорНомер,
        |	ВТ_ЗданияБП77ОИ.ДоговорНаименование КАК ДоговорНаименование
        |ИЗ
        |	ВТ_ЛицевыеСчетаБезПомещений КАК ВТ_ЛицевыеСчетаБезПомещений
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗданияБП77ОИ КАК ВТ_ЗданияБП77ОИ
        |		ПО (ВТ_ЗданияБП77ОИ.ИдентификаторЛС = ВТ_ЛицевыеСчетаБезПомещений.Идентификатор)
        |";

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

Функция ПолучитьДанныеДляОткрытияЛицевыхСчетовОИ() Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЛицевыеСчета.Ссылка КАК Ссылка,
        |	ЛицевыеСчета.Наименование КАК Наименование,
        |	ЛицевыеСчета.Адрес КАК Адрес,
        |	ЛицевыеСчета.Идентификатор КАК Идентификатор
        |ПОМЕСТИТЬ ВТ_ЛицевыеСчета
        |ИЗ
        |	Справочник.КВП_ЛицевыеСчета КАК ЛицевыеСчета
        |ГДЕ
        |	ЛицевыеСчета.ЭтоГруппа = ЛОЖЬ
        |	И ЛицевыеСчета.ПометкаУдаления = ЛОЖЬ
        |	И ЛицевыеСчета.Адрес <> ЗНАЧЕНИЕ(Справочник.УПЖКХ_Помещения.ПустаяСсылка)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЗданияБП77.КонтрагентКод КАК КонтрагентКод,
        |	ЗданияБП77.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ЗданияБП77.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ЗданияБП77.ДоговорНомер КАК ДоговорНомер,
        |	ЗданияБП77.ДоговорНаименование КАК ДоговорНаименование,
        |	ЗданияБП77.КоличествоПроживающих КАК КоличествоПроживающих,
        |	ЗданияБП77.ОбъектАбонентаКод + ""_"" + ЗданияБП77.КонтрагентКод КАК ИдентификаторЛС
        |ПОМЕСТИТЬ ВТ_ЗданияБП77ОИ
        |ИЗ
        |	РегистрСведений.ГП_ЗданияБП77 КАК ЗданияБП77
        |ГДЕ
        |	ЗданияБП77.ЭтоПлатаЗаХолодноеВодоснабжениеОИ = ИСТИНА
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	СоответствияНомеровСуществующихДоговоров.Ссылка КАК Ссылка,
        |	СоответствияНомеровСуществующихДоговоров.Наименование КАК Наименование,
        |	СоответствияНомеровСуществующихДоговоров.НомерИзНаименования КАК НомерИзНаименования
        |ПОМЕСТИТЬ ВТ_СоответствияНомеровСуществующихДоговоров
        |ИЗ
        |	&СоответствияНомеровСуществующихДоговоров КАК СоответствияНомеровСуществующихДоговоров
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ДоговорыКонтрагентов.Ссылка КАК Договор,
        |	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Владелец КАК Справочник.Контрагенты) КАК Контрагент,
        |	ДоговорыКонтрагентов.Код КАК Код,
        |	ДоговорыКонтрагентов.Наименование КАК Наименование,
        |	ДоговорыКонтрагентов.Организация КАК Организация,
        |	ДоговорыКонтрагентов.lc_ВидДоговора КАК ВидДоговора,
        |	ДоговорыКонтрагентов.Дата КАК Дата,
        |	ВТ_СоответствияНомеровСуществующихДоговоров.НомерИзНаименования КАК Номер
        |ПОМЕСТИТЬ ВТ_СозданныеДоговоры
        |ИЗ
        |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СоответствияНомеровСуществующихДоговоров КАК ВТ_СоответствияНомеровСуществующихДоговоров
        |		ПО ДоговорыКонтрагентов.Ссылка = ВТ_СоответствияНомеровСуществующихДоговоров.Ссылка
        |ГДЕ
        |	ДоговорыКонтрагентов.ЭтоГруппа = ЛОЖЬ
        |	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
        |	И ДоговорыКонтрагентов.lc_ВидДоговора В(&ВидыДоговора)
        |	И ДоговорыКонтрагентов.Владелец ССЫЛКА Справочник.Контрагенты
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ЛицевыеСчета.Ссылка КАК ЛицевойСчет,
        |	ВТ_ЛицевыеСчета.Наименование КАК НаименованиеЛС,
        |	ВТ_ЛицевыеСчета.Адрес КАК Помещение,
        |	ВТ_ЛицевыеСчета.Адрес.Владелец КАК Здание,
        |	ВТ_ЛицевыеСчета.Идентификатор КАК ИдентификаторЛС,
        |	ВТ_ЗданияБП77ОИ.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_ЗданияБП77ОИ.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_ЗданияБП77ОИ.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ВТ_ЗданияБП77ОИ.ДоговорНомер КАК ДоговорНомер,
        |	ВТ_ЗданияБП77ОИ.ДоговорНаименование КАК ДоговорНаименование,
        |	ВТ_ЗданияБП77ОИ.КоличествоПроживающих КАК КоличествоПроживающих,
        |	ВТ_СозданныеДоговоры.Договор КАК Договор,
        |	ВТ_СозданныеДоговоры.Контрагент КАК Контрагент
        |ИЗ
        |	ВТ_ЛицевыеСчета КАК ВТ_ЛицевыеСчета
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗданияБП77ОИ КАК ВТ_ЗданияБП77ОИ
        |		ПО (ВТ_ЗданияБП77ОИ.ИдентификаторЛС = ВТ_ЛицевыеСчета.Идентификатор)
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГП_КонтрагентыБП77 КАК КонтрагентыБП77
        |		ПО (ВТ_ЗданияБП77ОИ.КонтрагентКод = КонтрагентыБП77.Код)
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СозданныеДоговоры КАК ВТ_СозданныеДоговоры
        |		ПО (ВТ_ЗданияБП77ОИ.ДоговорНомер = ВТ_СозданныеДоговоры.Номер)
        |			И ВТ_ЛицевыеСчета.Ссылка.Наименование ПОДОБНО ВТ_СозданныеДоговоры.Контрагент.Наименование + ""%""
        |";

    СписокВидовДоговоров = Новый Массив;
    СписокВидовДоговоров.Добавить(ГП_РаботаСДоговорами.ПолучитьДополнительныйВидДоговораАбонентскийОтдел().Ссылка);
    Запрос.УстановитьПараметр("ВидыДоговора", СписокВидовДоговоров);

    СоответствияНомеровСуществующихДоговоров = ГП_РаботаСДоговорами.ПолучитьТаблицуСоответствийНомеровНаименованийДоговоров();
    Запрос.УстановитьПараметр("СоответствияНомеровСуществующихДоговоров", СоответствияНомеровСуществующихДоговоров);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

Функция ПолучитьДанныеДляСозданияДокументаУправленияСведениямиДляВзаиморасчетовПоЛицевымСчетамОИ() Экспорт
    Возврат ПолучитьДанныеДляОткрытияЛицевыхСчетовОИ();
КонецФункции

Функция РасшифроватьДанныеУстановкиЛСИзJSON(Знач СтрокаJSON) Экспорт
    СтруктураДанных = ПрочитатьЗначениеJSON(СтрокаJSON);
    Возврат СтруктураДанных;
КонецФункции

#КонецОбласти // СлужебныйПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
//  - Строка
Функция ПолучитьТекстЗапросаДанныеСозданияНовыхЛицевыхСчетовОИ()
    ТекстЗапроса =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КВП_Счетчики.Ссылка КАК Ссылка,
        |	КВП_Счетчики.Наименование КАК Наименование,
        |	КВП_Счетчики.ГП_Комментарий КАК Комментарий,
        |	КВП_Счетчики.ГП_ЭтоВиртуальныйСчетчик КАК ГП_ЭтоВиртуальныйСчетчик
        |ПОМЕСТИТЬ ВТ_СуществующиеСчетчикиОИ
        |ИЗ
        |	Справочник.КВП_Счетчики КАК КВП_Счетчики
        |ГДЕ
        |	КВП_Счетчики.ЭтоГруппа = ЛОЖЬ
        |	И КВП_Счетчики.ПометкаУдаления = ЛОЖЬ
        |	И КВП_Счетчики.ГП_ЭтоПлатаЗаВодоснабжениеОИ = ИСТИНА
        |	И КВП_Счетчики.ГП_ЭтоВиртуальныйСчетчик = ИСТИНА
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЗданияБП77.КонтрагентКод КАК КонтрагентКод,
        |	ЗданияБП77.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ЗданияБП77.ОбъектАбонентаКод + ""_"" + ЗданияБП77.КонтрагентКод КАК ИдентификаторЛС,
        |	ЗданияБП77.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ЗданияБП77.ДоговорКод КАК ДоговорКод,
        |	ЗданияБП77.ДоговорНомер КАК ДоговорНомер,
        |	ЗданияБП77.ТолькоДляКанализации КАК ТолькоДляКанализации,
        |	ЗданияБП77.ПроцентХВ КАК ПроцентХВ,
        |	ЗданияБП77.ПроцентГВ КАК ПроцентГВ,
        |	ЗданияБП77.ЭтоНегативноеВоздействиеЦСВ КАК ЭтоНегативноеВоздействиеЦСВ,
        |	ЗданияБП77.ЭтоПлатаЗаХолодноеВодоснабжениеОИ КАК ЭтоПлатаЗаХолодноеВодоснабжениеОИ,
        |	ЗданияБП77.МетодРасчетаХВ КАК МетодРасчетаХВ,
        |	ЗданияБП77.МетодРасчетаГВ КАК МетодРасчетаГВ,
        |	ЗданияБП77.МетодРасчетаКан КАК МетодРасчетаКан,
        |	ЗданияБП77.НеНачислять КАК НеНачислять,
        |	ЗданияБП77.СрКоличествоХВ КАК СрКоличествоХВ,
        |	ЗданияБП77.СрКоличествоГВ КАК СрКоличествоГВ,
        |	ЗданияБП77.ПроцентОтХВ КАК ПроцентОтХВ
        |ПОМЕСТИТЬ ВТ_ЗданияБП77ДляОИ
        |ИЗ
        |	РегистрСведений.ГП_ЗданияБП77 КАК ЗданияБП77
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГП_КонтрагентыБП77 КАК КонтрагентыБП77
        |		ПО ЗданияБП77.КонтрагентКод = КонтрагентыБП77.Код
        |			И (ЗданияБП77.ЭтоПлатаЗаХолодноеВодоснабжениеОИ = ИСТИНА)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ЗданияБП77ДляОИ.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_ЗданияБП77ДляОИ.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_ЗданияБП77ДляОИ.ИдентификаторЛС КАК ИдентификаторЛС,
        |	ВТ_ЗданияБП77ДляОИ.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ВТ_ЗданияБП77ДляОИ.ДоговорКод КАК ДоговорКод,
        |	ВТ_ЗданияБП77ДляОИ.ДоговорНомер КАК ДоговорНомер,
        |	ВТ_СуществующиеСчетчикиОИ.Ссылка КАК Счетчик
        |ПОМЕСТИТЬ ВТ_СчетчикиОИЗданияБП77
        |ИЗ
        |	ВТ_СуществующиеСчетчикиОИ КАК ВТ_СуществующиеСчетчикиОИ
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗданияБП77ДляОИ КАК ВТ_ЗданияБП77ДляОИ
        |		ПО (ВТ_СуществующиеСчетчикиОИ.Наименование = (ВЫРАЗИТЬ(""[[Плата за ОИ]] "" + ВТ_ЗданияБП77ДляОИ.ОбъектАбонентаНаименование КАК СТРОКА(100))))
        |			И (ВТ_СуществующиеСчетчикиОИ.Комментарий ПОДОБНО ""%(ид: ("" + ВТ_ЗданияБП77ДляОИ.ИдентификаторЛС + ""))"")
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_СчетчикиОИЗданияБП77.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_СчетчикиОИЗданияБП77.ОбъектАбонентаКод КАК ОбъектАбонентаКодОИ,
        |	ВТ_СчетчикиОИЗданияБП77.ИдентификаторЛС КАК ИдентификаторЛССчетчикаОИ,
        |	ГП_ЗданияБП77.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ВТ_СчетчикиОИЗданияБП77.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименованиеОИ,
        |	ВТ_СчетчикиОИЗданияБП77.ДоговорКод КАК ДоговорКод,
        |	ВТ_СчетчикиОИЗданияБП77.ДоговорНомер КАК ДоговорНомер,
        |	ВТ_СчетчикиОИЗданияБП77.Счетчик КАК Счетчик
        |ПОМЕСТИТЬ ВТ_СуществующиеСчетчикиОИБезЗдания
        |ИЗ
        |	ВТ_СчетчикиОИЗданияБП77 КАК ВТ_СчетчикиОИЗданияБП77
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГП_ЗданияБП77 КАК ГП_ЗданияБП77
        |		ПО ВТ_СчетчикиОИЗданияБП77.КонтрагентКод = ГП_ЗданияБП77.КонтрагентКод
        |			И (ГП_ЗданияБП77.ЭтоПлатаЗаХолодноеВодоснабжениеОИ = ЛОЖЬ)
        |			И (ГП_ЗданияБП77.ЭтоНегативноеВоздействиеЦСВ = ЛОЖЬ)
        |			И ВТ_СчетчикиОИЗданияБП77.ОбъектАбонентаКод <> ГП_ЗданияБП77.ОбъектАбонентаКод
        |			И ВТ_СчетчикиОИЗданияБП77.ОбъектАбонентаНаименование ПОДОБНО ГП_ЗданияБП77.ОбъектАбонентаНаименование + ""%([Пп]лат%[Оо][Ии]%""
        |ГДЕ
        |	ГП_ЗданияБП77.КонтрагентКод ЕСТЬ NULL
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЛицевыеСчета.Ссылка КАК Ссылка,
        |	ЛицевыеСчета.Идентификатор КАК Идентификатор
        |ПОМЕСТИТЬ ВТ_СуществующиеЛицевыеСчета
        |ИЗ
        |	Справочник.КВП_ЛицевыеСчета КАК ЛицевыеСчета
        |ГДЕ
        |	ЛицевыеСчета.ЭтоГруппа = ЛОЖЬ
        |	И ЛицевыеСчета.ПометкаУдаления = ЛОЖЬ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_СуществующиеСчетчикиОИБезЗдания.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_СуществующиеСчетчикиОИБезЗдания.ОбъектАбонентаКодОИ КАК ОбъектАбонентаКодОИ,
        |	ВТ_СуществующиеСчетчикиОИБезЗдания.ИдентификаторЛССчетчикаОИ КАК ИдентификаторЛССчетчикаОИ,
        |	ВТ_СуществующиеСчетчикиОИБезЗдания.ОбъектАбонентаНаименованиеОИ КАК ОбъектАбонентаНаименованиеОИ,
        |	ВТ_СуществующиеСчетчикиОИБезЗдания.ДоговорКод КАК ДоговорКод,
        |	ВТ_СуществующиеСчетчикиОИБезЗдания.ДоговорНомер КАК ДоговорНомер,
        |	ДоговорыБП77.Наименование КАК НаименованиеДоговора,
        |	ДоговорыБП77.ДатаВозникновенияОбязательства КАК ДоговорДата,
        |	ВТ_СуществующиеСчетчикиОИБезЗдания.Счетчик КАК Счетчик
        |ПОМЕСТИТЬ ВТ_ПредварительнвеДанные
        |ИЗ
        |	ВТ_СуществующиеСчетчикиОИБезЗдания КАК ВТ_СуществующиеСчетчикиОИБезЗдания
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГП_ДоговорыБП77 КАК ДоговорыБП77
        |		ПО ВТ_СуществующиеСчетчикиОИБезЗдания.КонтрагентКод = ДоговорыБП77.КонтрагентКод
        |			И ВТ_СуществующиеСчетчикиОИБезЗдания.ДоговорКод = ДоговорыБП77.Код
        |ГДЕ
        |	НЕ ВТ_СуществующиеСчетчикиОИБезЗдания.ИдентификаторЛССчетчикаОИ В
        |				(ВЫБРАТЬ
        |					Т.Идентификатор
        |				ИЗ
        |					ВТ_СуществующиеЛицевыеСчета КАК Т)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	СоответствияНомеровСуществующихДоговоров.Ссылка КАК Ссылка,
        |	СоответствияНомеровСуществующихДоговоров.Наименование КАК Наименование,
        |	СоответствияНомеровСуществующихДоговоров.НомерИзНаименования КАК НомерИзНаименования
        |ПОМЕСТИТЬ ВТ_СоответствияНомеровСуществующихДоговоров
        |ИЗ
        |	&СоответствияНомеровСуществующихДоговоров КАК СоответствияНомеровСуществующихДоговоров
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
        |	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Владелец КАК Справочник.Контрагенты) КАК Контрагент,
        |	ДоговорыКонтрагентов.Код КАК Код,
        |	ДоговорыКонтрагентов.Наименование КАК Наименование,
        |	ДоговорыКонтрагентов.Организация КАК Организация,
        |	ДоговорыКонтрагентов.lc_ВидДоговора КАК ВидДоговора,
        |	ДоговорыКонтрагентов.Дата КАК Дата,
        |	ВТ_СоответствияНомеровСуществующихДоговоров.НомерИзНаименования КАК Номер
        |ПОМЕСТИТЬ ВТ_СозданныеДоговоры
        |ИЗ
        |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СоответствияНомеровСуществующихДоговоров КАК ВТ_СоответствияНомеровСуществующихДоговоров
        |		ПО ДоговорыКонтрагентов.Ссылка = ВТ_СоответствияНомеровСуществующихДоговоров.Ссылка
        |ГДЕ
        |	ДоговорыКонтрагентов.ЭтоГруппа = ЛОЖЬ
        |	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
        |	И ДоговорыКонтрагентов.lc_ВидДоговора В(&ВидыДоговора)
        |	И ДоговорыКонтрагентов.Владелец ССЫЛКА Справочник.Контрагенты
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ПредварительнвеДанные.КонтрагентКод КАК КонтрагентКодБП77,
        |	ВТ_ПредварительнвеДанные.ОбъектАбонентаКодОИ КАК ОбъектАбонентаКодОИ,
        |	ВТ_ПредварительнвеДанные.ИдентификаторЛССчетчикаОИ КАК ИдентификаторЛССчетчикаОИ,
        |	ВТ_ПредварительнвеДанные.ОбъектАбонентаНаименованиеОИ КАК ОбъектАбонентаНаименованиеОИ,
        |	ВТ_ПредварительнвеДанные.ДоговорКод КАК ДоговорКодБП77,
        |	ВТ_ПредварительнвеДанные.ДоговорНомер КАК ДоговорНомерБП77,
        |	ВТ_ПредварительнвеДанные.НаименованиеДоговора КАК НаименованиеДоговораБП77,
        |	ВТ_ПредварительнвеДанные.ДоговорДата КАК ДоговорДата,
        |	ВТ_ПредварительнвеДанные.Счетчик КАК Счетчик,
        |	ВТ_СозданныеДоговоры.Ссылка КАК Договор,
        |	ВТ_СозданныеДоговоры.Контрагент КАК Контрагент,
        |	ВТ_СозданныеДоговоры.Наименование КАК НаименованиеДоговораИБ,
        |	ВТ_СозданныеДоговоры.Организация КАК Организация,
        |	ВТ_СозданныеДоговоры.Номер КАК НомерДоговораИБ,
        |	ВТ_СозданныеДоговоры.ВидДоговора КАК ВидДоговора
        |ПОМЕСТИТЬ ВТ_ДанныеСозданияПодготовка
        |ИЗ
        |	ВТ_ПредварительнвеДанные КАК ВТ_ПредварительнвеДанные
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СозданныеДоговоры КАК ВТ_СозданныеДоговоры
        |		ПО (ВТ_СозданныеДоговоры.Номер = ВТ_ПредварительнвеДанные.ДоговорНомер)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ДанныеСозданияПодготовка.КонтрагентКодБП77 КАК КонтрагентКодБП77,
        |	ВТ_ДанныеСозданияПодготовка.ОбъектАбонентаКодОИ КАК ОбъектАбонентаКодОИ,
        |	ВТ_ДанныеСозданияПодготовка.ИдентификаторЛССчетчикаОИ КАК ИдентификаторЛССчетчикаОИ,
        |	ВТ_ДанныеСозданияПодготовка.ОбъектАбонентаНаименованиеОИ КАК ОбъектАбонентаНаименованиеОИ,
        |	ВТ_ДанныеСозданияПодготовка.ДоговорКодБП77 КАК ДоговорКодБП77,
        |	ВТ_ДанныеСозданияПодготовка.ДоговорНомерБП77 КАК ДоговорНомерБП77,
        |	ВТ_ДанныеСозданияПодготовка.НаименованиеДоговораБП77 КАК НаименованиеДоговораБП77,
        |	ВТ_ДанныеСозданияПодготовка.ДоговорДата КАК ДоговорДатаБП77,
        |	ВТ_ДанныеСозданияПодготовка.Счетчик КАК Счетчик,
        |	ВТ_ДанныеСозданияПодготовка.Договор КАК Договор,
        |	ВТ_ДанныеСозданияПодготовка.Контрагент КАК Контрагент,
        |	ВТ_ДанныеСозданияПодготовка.Организация КАК Организация,
        |	ВТ_ДанныеСозданияПодготовка.ВидДоговора КАК ВидДоговора,
        |	ВТ_ДанныеСозданияПодготовка.НаименованиеДоговораИБ КАК НаименованиеДоговораИБ,
        |	ВТ_ДанныеСозданияПодготовка.НомерДоговораИБ КАК НомерДоговораИБ
        |ИЗ
        |	ВТ_ДанныеСозданияПодготовка КАК ВТ_ДанныеСозданияПодготовка
        |	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеСозданияПодготовка КАК Т
        |	ПО ВТ_ДанныеСозданияПодготовка.Счетчик = Т.Счетчик
        |	И ВТ_ДанныеСозданияПодготовка.Договор < Т.Договор
        |ГДЕ
        |	Т.Счетчик ЕСТЬ NULL
        |";

    Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
