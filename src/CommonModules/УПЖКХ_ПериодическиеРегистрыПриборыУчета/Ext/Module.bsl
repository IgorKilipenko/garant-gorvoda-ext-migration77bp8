// Гарант+ Килипенко 16.10.2024 [F00229732] Отключение контроля даты поверки ПУ при начислении ++
#Область ПереопределениеФункционала
	
&ИзменениеИКонтроль("СформироватьТаблицуЗакрепленныхПриборовУчета")
Процедура ГП_СформироватьТаблицуЗакрепленныхПриборовУчета(Запрос, ПараметрыПостроения)

    Если Запрос.МенеджерВременныхТаблиц = Неопределено Тогда
        МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
        Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
    КонецЕсли;

    ТекстЗапроса =
    "ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.Объект КАК Объект,
    |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ПриборУчета КАК ПриборУчета,
    |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ПриборУчета.ВидУслуги КАК Услуга,
    |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ПриборУчета.ИспользуетсяДляПерерасчетаРасходовНаОплатуСОИ КАК ИспользуетсяДляПерерасчетаРасходовНаОплатуСОИ,
    |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.РегистраторЗаписи КАК РегистраторЗаписи,
    |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ПричинаОтключения КАК ПричинаОтключения,
    |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.Действует КАК Действует,
    |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.НомерПломбы КАК НомерПломбы,
    |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ДатаНачала КАК ДатаНачала,
    |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ДатаОкончания КАК ДатаОкончания
    |ПОМЕСТИТЬ втЗакрепленныеПриборыУчета
    |ИЗ
    |	РегистрСведений.УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный КАК УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный
    |ГДЕ
    |	&ОтборПоПериоду
    |	И &ОтборПоСроку
    |	И &ОтборПоДействию
    |	И &ОтборПоОбъектам
    |	И &ОтборПоТипамОбъектов
    |	И &ОтборПоУслугам
    |	И &ОтборПоВидамУслуг
    |	И &ОтборПоПриборам";

    Если НЕ ПараметрыПостроения.ИмяВременнойТаблицы = Неопределено Тогда
        ТекстЗапроса=СтрЗаменить(ТекстЗапроса, "втЗакрепленныеПриборыУчета", ПараметрыПостроения.ИмяВременнойТаблицы);
    КонецЕсли;

    // Отбор по ПЕРИОДУ

    ТекстОтбораПоПериоду = "Истина";
    Если НЕ ПараметрыПостроения.НачалоПериода = Неопределено И НЕ ПараметрыПостроения.КонецПериода = Неопределено Тогда

        // Параметры "НачалоПериода" и "КонецПериода" можно использовать совместно с параметром "ПризнакДействия".
        // Допустим параметр "ПризнакДействия" равен Истина.
        // Тогда, установив параметр "ИзменениеСостоянияВПериоде" в Истина можно получить приборы учета, которые были
        // установлены в течение периода между "НачалоПериода" и "КонецПериода".
        // Если установить параметр "ИзменениеСостоянияВПериоде" в Ложь, то можно получить приборы учета, которые действовали
        // в периоде между "НачалоПериода" и "КонецПериода".
        //
        // Примечание:
        // В ИРС периоды действия приборов учета хранятся таким образом, что для каждого периода определена ДатаНачала и
        // и ДатаОкончания. ДатаОкончания последнего периода действия всегда 31.12.3999.

        Если ПараметрыПостроения.ИзменениеСостоянияВПериоде Тогда
            ТекстОтбораПоПериоду = "
            |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ДатаНачала МЕЖДУ &НачалоПериода И &КонецПериода";
        Иначе
            ТекстОтбораПоПериоду = "
            |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ДатаНачала <= &КонецПериода
            |	И УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ДатаОкончания >= &НачалоПериода";
        КонецЕсли;

        Запрос.УстановитьПараметр("НачалоПериода", ПараметрыПостроения.НачалоПериода);
        Запрос.УстановитьПараметр("КонецПериода",  ПараметрыПостроения.КонецПериода);

    КонецЕсли;
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоПериоду", ТекстОтбораПоПериоду);

    // Отбор по СРОКУ

    ТекстОтбораПоСроку = "Истина";
    Если НЕ ПараметрыПостроения.ДатаАктуальности = Неопределено Тогда
        Запрос.УстановитьПараметр("ДатаАктуальности", ПараметрыПостроения.ДатаАктуальности);
        ТекстОтбораПоСроку = "
        |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ДатаНачала <= &ДатаАктуальности
        |	И УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ДатаОкончания >= &ДатаАктуальности";
    КонецЕсли;
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоСроку", ТекстОтбораПоСроку);

    // Отбор по ДЕЙСТВИЮ

    ТекстОтбораПоДействию = "Истина";
    Если НЕ ПараметрыПостроения.ПризнакДействия = Неопределено Тогда
        ТекстОтбораПоДействию = "
        |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.Действует = &ПризнакДействия";
        #Вставка // Гарант+ Килипенко 16.10.2024 [F00229732] Отключение контроля даты поверки ПУ при начислении ++
        ТекстОтбораПоДействию = ГП_ДополнитьТекстЗапросаУсловиемПричиныОтключения(
            ТекстОтбораПоДействию, ПараметрыПостроения);
        #КонецВставки // Гарант+ Килипенко 16.10.2024 [F00229732] Отключение контроля даты поверки ПУ при начислении --
        Запрос.УстановитьПараметр("ПризнакДействия", ПараметрыПостроения.ПризнакДействия);
    КонецЕсли;
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоДействию", ТекстОтбораПоДействию);

    // Отбор по ОБЪЕКТАМ

    ТекстОтбораПоОбъектам = "ИСТИНА";
    Если НЕ ПараметрыПостроения.СписокОбъектов = Неопределено Тогда
        ТекстОтбораПоОбъектам = "
        |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.Объект В (&СписокОбъектов)";
        Запрос.УстановитьПараметр("СписокОбъектов", ПараметрыПостроения.СписокОбъектов);
    КонецЕсли;
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоОбъектам", ТекстОтбораПоОбъектам);

    // Отбор по ТИПАМ ОБЪЕКТОВ

    ТекстОтбораПоТипамОбъектов = "ИСТИНА";
    Если НЕ ПараметрыПостроения.СписокТиповОбъекта = Неопределено Тогда
        ТекстОтбораПоТипамОбъектов = "
        |	ТИПЗНАЧЕНИЯ(УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.Объект) В (&СписокТиповОбъекта)";
        Запрос.УстановитьПараметр("СписокТиповОбъекта", ПараметрыПостроения.СписокТиповОбъекта);
    КонецЕсли;
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоТипамОбъектов", ТекстОтбораПоТипамОбъектов);

    // Отбор по УСЛУГАМ

    ТекстОтбораПоУслугам = "Истина";
    Если НЕ ПараметрыПостроения.СписокУслуг = Неопределено Тогда

        // Параметр "СписокУслуг" можно использовать совместно с параметром "УслугиКромеВыбранных".
        // Тогда, установив параметр "УслугиКромеВыбранных" в Истина можно получить приборы учета
        // по всем услугам, кроме услуг из "СписокУслуг".

        Если ПараметрыПостроения.УслугиКромеВыбранных Тогда
            ТекстОтбораПоУслугам = "
            |	НЕ УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ПриборУчета.ВидУслуги В (&СписокУслуг)";
        Иначе
            ТекстОтбораПоУслугам = "
            |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ПриборУчета.ВидУслуги В (&СписокУслуг)";
        КонецЕсли;
        Запрос.УстановитьПараметр("СписокУслуг", ПараметрыПостроения.СписокУслуг);
    КонецЕсли;
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоУслугам", ТекстОтбораПоУслугам);

    // Отбор по ВИДАМ УСЛУГ

    ТекстОтбораПоВидамУслуг = "Истина";
    Если НЕ ПараметрыПостроения.СписокВидовУслуг = Неопределено Тогда
        ТекстОтбораПоВидамУслуг = "
        |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ПриборУчета.ВидУслуги.ВидУслуги В (&СписокВидовУслуг)";
        Запрос.УстановитьПараметр("СписокВидовУслуг", ПараметрыПостроения.СписокВидовУслуг);
    КонецЕсли;
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоВидамУслуг", ТекстОтбораПоВидамУслуг);

    // Отбор по ПРИБОРАМ УЧЕТА

    ТекстОтбораПоПриборам = "Истина";
    Если НЕ ПараметрыПостроения.СписокПриборов = Неопределено Тогда

        ЭтоОтборПоПУ = (ТипЗнч(ПараметрыПостроения.СписокПриборов) = Тип("СправочникСсылка.КВП_Счетчики"));
        Если ЭтоОтборПоПУ И ПараметрыПостроения.СписокПриборов.ЭтоГруппа Тогда
            ТекстОтбораПоПриборам = "
            |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ПриборУчета В ИЕРАРХИИ(&СписокПриборов)";
        Иначе
            ТекстОтбораПоПриборам = "
            |	УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ПриборУчета В (&СписокПриборов)";
        КонецЕсли;

        // Параметр "СписокПриборов" можно использовать совместно с параметром "ПриборыУчетаКромеВыбранных".
        // Тогда, установив параметр "ПриборыУчетаКромеВыбранных" в Истина можно получить данные по всем
        // приборам учета, кроме приборов из "СписокПриборов".

        Если ПараметрыПостроения.ПриборыУчетаКромеВыбранных Тогда
            ТекстОтбораПоПриборам = "НЕ " + ТекстОтбораПоПриборам;
        КонецЕсли;

        Запрос.УстановитьПараметр("СписокПриборов", ПараметрыПостроения.СписокПриборов);
    КонецЕсли;

    Если ПараметрыПостроения.ИсключитьВыходныеПриборыУчета Тогда
        ТекстОтбораПоПриборам = ТекстОтбораПоПриборам + "
        |	И НЕ УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ПриборУчета.ПризнакВыходногоСчетчика";
    КонецЕсли;

    ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоПриборам", ТекстОтбораПоПриборам);

    Запрос.Текст = ТекстЗапроса;
    Запрос.Выполнить();

КонецПроцедуры

#КонецОбласти // ПереопределениеФункционала
// Гарант+ Килипенко 16.10.2024 [F00229732] Отключение контроля даты поверки ПУ при начислении --

// Гарант+ Килипенко 16.10.2024 [F00229732] Отключение контроля даты поверки ПУ при начислении ++
#Область СлужебныеПроцедурыИФункции

Функция ГП_ДополнитьТекстЗапросаУсловиемПричиныОтключения(Знач ТекстОтбораПоДействию, Знач ПараметрыПостроения)
    РезультатФункции = ТекстОтбораПоДействию;
    
    // !!!{ ТОЛЬКО ДЛЯ ОТЛАДКИ
    // !!! Глобальное отключение контроля просроченной поверки
    ПараметрыПостроения.Вставить("ГП_ИгнорироватьОтключениеНаПовереку", Истина);
    // !!! ТОЛЬКО ДЛЯ ОТЛАДКИ }
    
    ЭтоОбрабатываемыйПризнакДействия = 
        ПараметрыПостроения.Свойство("ПризнакДействия") И ПараметрыПостроения.ПризнакДействия <> Неопределено;
    ИгнорироватьОтключениеПриПовереке = 
        ЭтоОбрабатываемыйПризнакДействия
            И ПараметрыПостроения.Свойство("ГП_ИгнорироватьОтключениеНаПовереку")
            И ПараметрыПостроения.ГП_ИгнорироватьОтключениеНаПовереку = Истина;
            
    Если ИгнорироватьОтключениеПриПовереке = Ложь Тогда
        Возврат РезультатФункции; // Без изменений
    КонецЕсли;
    
    // Добавление альтернативное условие: ИЛИ ПричинаОтключения = Поверка
    РезультатФункции = СтрШаблон(
        "(%1 
        |   ИЛИ %2)",
        РезультатФункции,
        "УПЖКХ_ИсторияСостоянийПриборовУчетаИнтервальный.ПричинаОтключения" 
            + ?(ПараметрыПостроения.ПризнакДействия = Истина, " = ", " <> ")
            + "ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ПричиныОтключенияПриборовУчета.Поверка)");
        
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 16.10.2024 [F00229732] Отключение контроля даты поверки ПУ при начислении --
