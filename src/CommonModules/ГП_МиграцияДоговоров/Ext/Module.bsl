// Гарант+ Килипенко 08.08.2024 [F00227208] перенос контрагентов из БП77 ++
#Область ПрограммныйИнтерфейс

// Выполняет чтение данных договоров (из БП 7.7) из файла и записывает данные в регистр `ГП_ДоговорыБП77`
// Параметры:
//  ПараметрыЗагрузки - Структура
//      * ДвоичныеДанныеФайла - ДвоичныеДанные
//      * СохранятьСвязи - Булево - Если Ложь, установленные связи с ДоговоромКонтрагента
//                                      будут разорваны (поле `Договор` будет установлено в значение пустая ссылка)
//  АдресХранилища - Строка, Неопределено
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанныхДоговоров - Число
//      * ТекстСообщения - Строка, Неопределено
//  - Неопределено
Функция ЗагрузитьДанныеДоговоровВРегистр(ПараметрыЗагрузки, АдресХранилища = Неопределено) Экспорт
    РезультатФункции = Новый Структура("Успех, КоличествоЗаписанныхДоговоров, ТекстСообщения", Ложь, 0);

    // Чтение данных из файла XML
    РезультатЧтенияДанных = ГП_МиграцияОбщегоНазначения.ПрочитатьДанныеИзФайлаXML(ПараметрыЗагрузки.ДвоичныеДанныеФайла, "Договор");
    Если РезультатЧтенияДанных.Успех = Ложь Тогда
        РезультатФункции.ТекстСообщения = РезультатЧтенияДанных.ТекстСообщения;
        Возврат ГП_МиграцияОбщегоНазначения.ПоместитьВХранилищеИВернуть(РезультатФункции, АдресХранилища);
    КонецЕсли;

    // Проверка структуры данных
    Если ТипЗнч(РезультатЧтенияДанных.Данные) <> Тип("СписокXDTO") Тогда
        РезультатФункции.ТекстСообщения = "Ошибка структуры данных.";
        Возврат ГП_МиграцияОбщегоНазначения.ПоместитьВХранилищеИВернуть(РезультатФункции, АдресХранилища);
    КонецЕсли;

    // Запись данных договоров в регистр
    ДоговорБП77 = РезультатЧтенияДанных.Данные;
    РезультатЗаписи = ЗаписатьДанныеДоговоровВРегистр(ДоговорБП77, ПараметрыЗагрузки.СохранятьСвязи);

    // Формирование результата
    РезультатФункции.Успех = РезультатЗаписи.Успех;
    РезультатФункции.ТекстСообщения = РезультатЗаписи.СообщениеОбОшибке;
    РезультатФункции.КоличествоЗаписанныхДоговоров = РезультатЗаписи.КоличествоЗаписанныхДоговоров;

    Возврат ГП_МиграцияОбщегоНазначения.ПоместитьВХранилищеИВернуть(РезультатФункции, АдресХранилища);
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 08.08.2024 [F00227208] перенос контрагентов из БП77 --

// Гарант+ Килипенко 08.08.2024 [F00227208] перенос контрагентов из БП77 ++
#Область СлужебныйПрограммныйИнтерфейс

// Выполняет запись исходных данных договоров в регистр `ГП_ДоговорыП77` (по данным из БП77)
//  Существующие записи по отбору составного кода будут перезаписаны
// Параметры:
//  ИсходныеДанныеДоговоров - Массив из Структура - Данные БП77
//  СохранятьСвязи - Булево - Если Истина, связи с договорами счетами будут сохранены
// Возвращаемое значение:
//  Структура:
//      * Успех - Булево
//      * КоличествоЗаписанныхДоговоров - Число
//      * КоличествоСохраненныхСвязей - Число
//      * СообщениеОбОшибке - Строка, Неопределено
Функция ЗаписатьДанныеДоговоровВРегистр(Знач ИсходныеДанныеДоговоров, Знач СохранятьСвязи = Истина) Экспорт
    РезультатФункции = Новый Структура(
            "Успех, КоличествоЗаписанныхДоговоров, КоличествоСохраненныхСвязей, СообщениеОбОшибке", Истина, 0, 0);

    Если ИсходныеДанныеДоговоров = Неопределено ИЛИ ИсходныеДанныеДоговоров.Количество() = 0 Тогда
        Возврат РезультатФункции; // Нет данных
    КонецЕсли;

    // Поля для предобработки (приведения типов)
    КлючиУсловийДоговора = "АвтоОбработкаНДС,ВестиУчетРасчетовУЕ";
    КлючиЧиселКонтрагента = "СтавкаШтрафныхСанкций,ОплатаДоговора,ОтражатьСуммовуюРазницуПриЗачетеАванса,ПроцентКорректировкиКурсаУЕ"
        + ",ВодаПоДог,КанПоДог,СуммаПоДог";
    КлючиДатКонтрагента = "ДатаВозникновенияОбязательства,ДатаПогашенияОбязательства,ДатаНачалаНачисленияШтрафныхСанкций"
        + ",ДатаПрекращенияНачисленияШтрафныхСанкций";

    // Транзакция записи в регистр ГП_ДоговорыБП77
    НачатьТранзакцию();
    Попытка

        Для Каждого ДоговорБП77 Из ИсходныеДанныеДоговоров Цикл
            НаборЗаписейДоговоров = СоздатьНаборЗаписейДоговоровБП77(ДоговорБП77);

            // Данные для сохранения связанного договора записи
            СвязанныйКонтрагент = Неопределено;
            Если СохранятьСвязи Тогда
                НаборЗаписейДоговоров.Прочитать();
                Если НаборЗаписейДоговоров.Количество() > 0 Тогда
                    СвязанныйКонтрагент = НаборЗаписейДоговоров[0].Контрагент;
                    СвязанныйКонтрагент = ?(ЗначениеЗаполнено(СвязанныйКонтрагент), СвязанныйКонтрагент, Неопределено);
                    НаборЗаписейДоговоров.Очистить();
                КонецЕсли;
            КонецЕсли;
            НоваяЗапись = НаборЗаписейДоговоров.Добавить();

            // Заполнение данных договора
            ЗаполнитьЗначенияСвойств(НоваяЗапись, ДоговорБП77, ,
                СтрШаблон("%1,%2,%3", КлючиУсловийДоговора, КлючиЧиселКонтрагента, КлючиДатКонтрагента));

            // Заполнение полей с преобразованием типов
            Для Каждого Ключ Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КлючиДатКонтрагента, ",", Ложь, Истина) Цикл
                НоваяЗапись[Ключ] = СтроковыеФункцииКлиентСервер.СтрокаВДату(ДоговорБП77[Ключ], ЧастиДаты.Дата);
            КонецЦикла;
            Для Каждого Ключ Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КлючиУсловийДоговора, ",", Ложь, Истина) Цикл
                НоваяЗапись[Ключ] = ?(ДоговорБП77[Ключ] = "1", Истина, Ложь);
            КонецЦикла;
            Для Каждого Ключ Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КлючиЧиселКонтрагента, ",", Ложь, Истина) Цикл
                НоваяЗапись[Ключ] = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ДоговорБП77[Ключ]);
            КонецЦикла;

            НаборЗаписейДоговоров.Записать(Истина);
            РезультатФункции.КоличествоЗаписанныхДоговоров = РезультатФункции.КоличествоЗаписанныхДоговоров + 1;
        КонецЦикла;

        ЗафиксироватьТранзакцию(); // Записано успешно
    Исключение
        ОтменитьТранзакцию();

        ОбщаяЧастьСообщения = "Ошибка при загрузке данных договоров в регистр ""ГП_ДоговорыБП77"".";
        СтруктураОшибки = ГП_МиграцияОбщегоНазначения.ЗаписатьОшибкуВЖурнал(
                ОбщаяЧастьСообщения, ИнформацияОбОшибке(), Ложь, Истина);

        РезультатФункции.Успех = Ложь;
        РезультатФункции.СообщениеОбОшибке = СтрШаблон(
                "%1
                |Информация об ошибке: %2",
                ОбщаяЧастьСообщения,
                СтруктураОшибки.КраткоеПредставлениеОшибки);

        РезультатФункции.КоличествоЗаписанныхДоговоров = 0;
        РезультатФункции.КоличествоСохраненныхСвязей = 0;
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  ДоговорБП77 - Структура
//      * КонтрагентКод - Строка - Код контрагента в БП77
//      * Код - Строка - Код договора в БП77
// Возвращаемое значение:
//  - РегистрСведений.ГП_ДоговорыБП77.НаборЗаписей
Функция СоздатьНаборЗаписейДоговоровБП77(Знач ДоговорБП77) Экспорт
    НаборЗаписей = РегистрыСведений.ГП_ДоговорыБП77.СоздатьНаборЗаписей();
    НаборЗаписей.Отбор.КонтрагентКод.Установить(ДоговорБП77.КонтрагентКод);
    НаборЗаписей.Отбор.Код.Установить(ДоговорБП77.Код);

    Возврат НаборЗаписей;
КонецФункции

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
// Гарант+ Килипенко 08.08.2024 [F00227208] перенос контрагентов из БП77 --
