#Область ПрограммныйИнтерфейс

// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Услуга - СправочникСсылка.КВП_Услуги
//      * Приоритет - Число
Функция ПолучитьТаблицуПриоритетовУслуг() Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   Услуги.Ссылка КАК Услуга,
        |   ВЫБОР
        |       КОГДА Услуги.Ссылка = &УслугаХВС ТОГДА 0
        |       //КОГДА Услуги.Ссылка = &УслугаХВСПотери ТОГДА 1
        |       //КОГДА Услуги.Ссылка = &УслугаХВСОИ ТОГДА 2
        |       КОГДА Услуги.Ссылка = &УслугаГВС ТОГДА 3
        |       КОГДА Услуги.Ссылка = &УслугаКанализация ТОГДА 4
        |       ИНАЧЕ &ПриоритетПоУмолчанию
        |   КОНЕЦ КАК Приоритет
        |ИЗ
        |   Справочник.КВП_Услуги КАК Услуги
        |ГДЕ
        |   Услуги.ЭтоГруппа = ЛОЖЬ";

    Запрос.УстановитьПараметр("УслугаХВС", ПолучитьУслугуХолодноеВодоснабжение().Ссылка);
    Запрос.УстановитьПараметр("УслугаГВС", ПолучитьУслугуГорячееВодоснабжение().Ссылка);
    Запрос.УстановитьПараметр("УслугаКанализация", ПолучитьУслугуКанализации().Ссылка);

    Запрос.УстановитьПараметр("ПриоритетПоУмолчанию", 99999);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

#Область Константы

#Область Услуги

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.КВП_Услуги
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьУслугуХолодноеВодоснабжение() Экспорт
    Возврат ПолучитьУслугуПоКоду("00-001");
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.КВП_Услуги
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьУслугуГорячееВодоснабжение() Экспорт
    Возврат ПолучитьУслугуПоКоду("00-003");
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.КВП_Услуги
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьУслугуКанализации() Экспорт
    Возврат ПолучитьУслугуПоКоду("00-008");
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.КВП_Услуги
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьУслугуПодогреваХолоднойВоды() Экспорт
    Возврат ПолучитьУслугуПоКоду("00-002");
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.КВП_Услуги
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьУслугуНегативногоВоздействияНаЦСВ() Экспорт
    Возврат ПолучитьУслугуПоКоду("00-006");
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.КВП_Услуги
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьУслугуВодоотведениеХолоднойВоды() Экспорт
    Возврат ПолучитьУслугуПоКоду("00-005");
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.КВП_Услуги
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьУслугуПлатаЗаХолодноеВодоснабжениеОИ() Экспорт
    Возврат ПолучитьУслугуПоКоду("00-009");
КонецФункции

// Гарант+ Килипенко 07.10.2024 [F00230765] перенос счетчиков Потерь воды (по среднему) ++
//
// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.КВП_Услуги
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьУслугуПотериВоды() Экспорт
    Возврат ПолучитьУслугуПоКоду("00-012");
КонецФункции // // Гарант+ Килипенко 07.10.2024 [F00230765] перенос счетчиков Потерь воды (по среднему) --

// Возвращаемое значение:
//  - Структура из КлючИЗначение
//      * Ключ - Строка
//      * Значение - Структура
//          ** Ссылка - СправочникСсылка.КВП_Услуги
//          ** Код - Строка
//          ** Наименование - Строка
Функция ПолучитьОбязательныеУслуги() Экспорт
    РезультатФункции = Новый Структура;

    РезультатФункции.Вставить("ХолодноеВодоснабжение", ПолучитьУслугуХолодноеВодоснабжение());
    РезультатФункции.Вставить("ГорячееВодоснабжение", ПолучитьУслугуГорячееВодоснабжение());
    РезультатФункции.Вставить("Канализации", ПолучитьУслугуКанализации());
    РезультатФункции.Вставить("ПодогревХолоднойВоды", ПолучитьУслугуПодогреваХолоднойВоды());
    РезультатФункции.Вставить("НегативноеВоздействияНаЦСВ", ПолучитьУслугуНегативногоВоздействияНаЦСВ());
    РезультатФункции.Вставить("ВодоотведениеХолоднойВоды", ПолучитьУслугуВодоотведениеХолоднойВоды());
    РезультатФункции.Вставить("ХолодноеВодоснабжениеОИ", ПолучитьУслугуПлатаЗаХолодноеВодоснабжениеОИ());
    РезультатФункции.Вставить("ПотериВоды", ПолучитьУслугуПотериВоды());

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // Услуги

#КонецОбласти // Константы

#КонецОбласти // ПрограммныйИнтерфейс

// Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг ++
#Область СлужебныйПрограммныйИнтерфейс

// Параметры:
//  Код - Строка
//  ИгнорироватьПомеченныеНаУдаление - Булево
// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.КВП_Услуги
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьУслугуПоКоду(Знач Код, Знач ИгнорироватьПомеченныеНаУдаление = Истина) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   КВП_Услуги.Ссылка КАК Ссылка,
        |   КВП_Услуги.Код КАК Код,
        |   КВП_Услуги.Наименование КАК Наименование
        |ИЗ
        |   Справочник.КВП_Услуги КАК КВП_Услуги
        |ГДЕ
        |   КВП_Услуги.Код = &Код
        |   И КВП_Услуги.ПометкаУдаления = ЛОЖЬ
        |";

    Запрос.УстановитьПараметр("Код", Код);
    Если ИгнорироватьПомеченныеНаУдаление = Ложь Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "И КВП_Услуги.ПометкаУдаления = ЛОЖЬ", "");
    КонецЕсли;

    РезультатЗапроса = Запрос.Выполнить();
    ТаблицаУслуг = РезультатЗапроса.Выгрузить();

    Если ТаблицаУслуг.Количество() <> 1 Тогда
        ВызватьИсключение(СтрШаблон("Ошибка при получении услуги с кодом ""%1"". %2",
                Код,
                ?(ТаблицаУслуг.Количество() > 1, "Код услуги не уникален.", "Услуга отсутствует в ИБ.")));
    КонецЕсли;

    РезультатФункции = Новый Структура("Ссылка, Код, Наименование");
    ЗаполнитьЗначенияСвойств(РезультатФункции, ТаблицаУслуг[0]);

    Возврат РезультатФункции;
КонецФункции

// Получает список зависимых услуг л/с по данным регистра `КВП_ЗависимостиУслуг`,
//  !!! Для установки связи записей регистра в качестве Объекта используется Здание л/с
//  т.е. фактически поиск выполняется по Зданиям л/с
// Параметры:
//  ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета
//  ОсновнаяУслуга - СправочникСсылка.КВП_Услуги
//  НачалоПериода - Дата
//  КонецПериода - Дата
// Возвращаемое значение:
//  - Массив из СправочникСсылка.КВП_Услуги
Функция ПолучитьСписокЗависимыхУслугЗданияЛицевогоСчетаЗаПериод(
        Знач ЛицевойСчет, Знач ОсновнаяУслуга, Знач НачалоПериода, Знач КонецПериода) Экспорт

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЛицевыеСчета.Ссылка КАК Ссылка,
        |	ЛицевыеСчета.Адрес КАК Помещение,
        |	ЕСТЬNULL(ЛицевыеСчета.Адрес.Владелец, ЗНАЧЕНИЕ(Справочник.КВП_Здания.ПустаяСсылка)) КАК Здание
        |ПОМЕСТИТЬ ВТ_ЛицевыеСчета
        |ИЗ
        |	Справочник.КВП_ЛицевыеСчета КАК ЛицевыеСчета
        |ГДЕ
        |	ЛицевыеСчета.Ссылка = &ЛицевойСчет
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЗависимостиУслуг.Период КАК Период,
        |	ЗависимостиУслуг.УслугаОснование КАК УслугаОснование,
        |	ЗависимостиУслуг.Услуга КАК Услуга,
        |	ВЫРАЗИТЬ(ЗависимостиУслуг.Объект КАК Справочник.КВП_Здания) КАК Здание
        |ПОМЕСТИТЬ ВТ_ЗависимостьУслугНаНачалоПериода
        |ИЗ
        |	РегистрСведений.КВП_ЗависимостиУслуг.СрезПоследних(&НачалоПериода, Организация = &Организация) КАК ЗависимостиУслуг
        |ГДЕ
        |	ИСТИНА
        |	И ЗависимостиУслуг.Объект ССЫЛКА Справочник.КВП_Здания
        |	И ВЫРАЗИТЬ(ЗависимостиУслуг.Объект КАК Справочник.КВП_Здания) В
        |			(ВЫБРАТЬ
        |				Т.Здание
        |			ИЗ
        |				ВТ_ЛицевыеСчета КАК Т)
        |	И ЗависимостиУслуг.УслугаОснование = &УслугаОснование
        |	И ЗависимостиУслуг.Действует = ИСТИНА
        |	И ЗависимостиУслуг.Значение > 0
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЗависимостиУслуг.Период КАК Период,
        |	ЗависимостиУслуг.УслугаОснование КАК УслугаОснование,
        |	ЗависимостиУслуг.Услуга КАК Услуга,
        |	ВЫРАЗИТЬ(ЗависимостиУслуг.Объект КАК Справочник.КВП_Здания) КАК Здание
        |ПОМЕСТИТЬ ВТ_ЗависимостьУслугНаКонецПериода
        |ИЗ
        |	РегистрСведений.КВП_ЗависимостиУслуг.СрезПоследних(&КонецПериода, Организация = &Организация) КАК ЗависимостиУслуг
        |ГДЕ
        |	ИСТИНА
        |	И ЗависимостиУслуг.Объект ССЫЛКА Справочник.КВП_Здания
        |	И ВЫРАЗИТЬ(ЗависимостиУслуг.Объект КАК Справочник.КВП_Здания) В
        |			(ВЫБРАТЬ
        |				Т.Здание
        |			ИЗ
        |				ВТ_ЛицевыеСчета КАК Т)
        |	И ЗависимостиУслуг.УслугаОснование = &УслугаОснование
        |	И ЗависимостиУслуг.Действует = ИСТИНА
        |	И ЗависимостиУслуг.Значение > 0
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ЗависимостьУслугНаНачалоПериода.Услуга КАК Услуга,
        |	ВТ_ЗависимостьУслугНаНачалоПериода.Здание КАК Здание
        |ПОМЕСТИТЬ ВТ_ЗависимыеУслугиОбъединение
        |ИЗ
        |	ВТ_ЗависимостьУслугНаНачалоПериода КАК ВТ_ЗависимостьУслугНаНачалоПериода
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ВТ_ЗависимостьУслугНаКонецПериода.Услуга,
        |	ВТ_ЗависимостьУслугНаКонецПериода.Здание
        |ИЗ
        |	ВТ_ЗависимостьУслугНаКонецПериода КАК ВТ_ЗависимостьУслугНаКонецПериода
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	ВТ_ЗависимыеУслугиОбъединение.Услуга КАК Услуга,
        |	ВТ_ЗависимыеУслугиОбъединение.Здание КАК Здание
        |ИЗ
        |	ВТ_ЗависимыеУслугиОбъединение КАК ВТ_ЗависимыеУслугиОбъединение
        |";

    Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
    Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
    Запрос.УстановитьПараметр("ЛицевойСчет", ЛицевойСчет);
    Запрос.УстановитьПараметр("УслугаОснование", ОсновнаяУслуга);
    Запрос.УстановитьПараметр("Организация", УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию());

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Услуга");
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
// Гарант+ Килипенко 24.07.2024 [F00226318] заполнение регистра сведений Зависимость услуг --
