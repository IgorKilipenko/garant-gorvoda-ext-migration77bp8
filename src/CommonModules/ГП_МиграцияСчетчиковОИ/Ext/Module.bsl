// Гарант+ Килипенко 02.08.2024 [F00230765] перенос счетчиков ОИ (по среднему) ++
#Область ПрограммныйИнтерфейс

// Создает новые виртуальные счетчики для расчета ОИ
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * СозданныеЭлементы - Массив из СправочникСсылка.КВП_Счетчики
Функция СоздатьСчетчикиВиртуальныеОИ() Экспорт
    РезультатФункции = Новый Структура("Успех, СозданныеЭлементы, ТекстСообщения", Истина, Новый Массив);

    ДанныеДляСоздания = ПолучитьДанныеСозданияСчетчиковОИ();

    НачатьТранзакцию();
    Попытка
        Для Каждого СтрокаДанных Из ДанныеДляСоздания Цикл
            СозданныйСчетчикСсылка = ГП_МиграцияПриборовУчета.СоздатьНовыйСчетчикПоСреднемуМетодуРасчетаОИ(
                    СтрокаДанных, РезультатФункции.СозданныеЭлементы.Количество() + 1);

            РезультатФункции.СозданныеЭлементы.Добавить(СозданныйСчетчикСсылка);
        КонецЦикла;

        ЗафиксироватьТранзакцию();

    Исключение
        ОтменитьТранзакцию();

        ОбщаяЧастьСообщения = "Ошибка при создании счетчиков ОИ.";
        СтруктураОшибки = ГП_МиграцияОбщегоНазначения.ЗаписатьОшибкуВЖурнал(
                ОбщаяЧастьСообщения, ИнформацияОбОшибке(), Ложь, Истина);

        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = СтрШаблон(
                "%1
                |Информация об ошибке: %2",
                ОбщаяЧастьСообщения,
                СтруктураОшибки.КраткоеПредставлениеОшибки);

        РезультатФункции.СозданныеЭлементы.Очистить();
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции

Функция ПолучитьМассивВсехВиртуальныеСчетчикиОИ() Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КВП_Счетчики.Ссылка КАК Ссылка
        |ИЗ
        |	Справочник.КВП_Счетчики КАК КВП_Счетчики
        |ГДЕ
        |	КВП_Счетчики.ЭтоГруппа = ЛОЖЬ
        |	И КВП_Счетчики.ПометкаУдаления = ЛОЖЬ
        |	И КВП_Счетчики.ГП_ЭтоПлатаЗаВодоснабжениеОИ = ИСТИНА
        |	И КВП_Счетчики.ГП_ЭтоВиртуальныйСчетчик = ИСТИНА
        |";

    РезультатЗапроса = Запрос.Выполнить();
    ТаблицаСчетчиковОИ = РезультатЗапроса.Выгрузить();

    Возврат ТаблицаСчетчиковОИ.ВыгрузитьКолонку("Ссылка");
КонецФункции

Функция УдалитьВсеВиртуальныеСчетчикиОИ() Экспорт
    РезультатФункции = Новый Структура("Успех, УдаленныеЭлементы, ТекстСообщения", Истина, Новый Массив);

    СчетчикиДляУдаления = ПолучитьМассивВсехВиртуальныеСчетчикиОИ();

    НачатьТранзакцию();
    Попытка
        Для Каждого СчетчикСсылка Из СчетчикиДляУдаления Цикл
            СчетчикОбъект = СчетчикСсылка.ПолучитьОбъект();
            СчетчикОбъект.УстановитьПометкуУдаления(Истина);

            РезультатФункции.УдаленныеЭлементы.Добавить(СчетчикСсылка);
        КонецЦикла;

        ЗафиксироватьТранзакцию();

    Исключение
        ОтменитьТранзакцию();

        ОбщаяЧастьСообщения = "Ошибка при удалении счетчиков ОИ.";
        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = СтрШаблон(
                "%1
                |Информация об ошибке: %2",
                ОбщаяЧастьСообщения,
                ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));

        РезультатФункции.УдаленныеЭлементы.Очистить();
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции

// Создает документы Установка счетчика и Ввод показаний (начальных) счетчика
// Параметры:
//  ДатаДокумента - Дата, Неопределено
//  ДатаВключенияПоУмолчанию - Булево
// Возвращаемое значение:
//  - Структура:
//      * Успех - Булево
//      * УстановленныеСчетчики - Массив из СправочникСсылка.КВП_Счетчики
//      * ТекстСообщения - Строка, Неопределено
Функция СоздатьДокументыУстановкиВиртуальныхСчетчиковОИ(Знач ДатаДокумента = Неопределено, ДатаВключенияПоУмолчанию = Неопределено) Экспорт

    РезультатФункции = Новый Структура("Успех, УстановленныеСчетчики, ТекстСообщения", Истина, Новый Массив);

    ДатаДокумента = ?(ДатаДокумента = Неопределено, ТекущаяДатаСеанса(), ДатаДокумента);
    ДатаВключенияПоУмолчанию = ?(ДатаВключенияПоУмолчанию = Неопределено, Дата(2024, 01, 01), ДатаВключенияПоУмолчанию);

    ДанныеДляЗаполнения = ПолучитьДанныеУстановкиВиртуальныхСчетчиковОИ();

    // Заполнение шапки документа КВП_УстановкаСчетчика
    НовыйУстановкаСчетчиковОбъект = Документы.КВП_УстановкаСчетчика.СоздатьДокумент();
    НовыйУстановкаСчетчиковОбъект.Дата = ДатаДокумента;
    НовыйУстановкаСчетчиковОбъект.ВидОперации = Перечисления.УПЖКХ_ВидыОперацийУстановкаСчетчика.ВключитьСчетчик;
    НовыйУстановкаСчетчиковОбъект.ВвестиНачальныеИлиКонечныеПоказания = Ложь; // Показания счетчиков не вводятся
    НовыйУстановкаСчетчиковОбъект.Ответственный = Пользователи.ТекущийПользователь();
    НовыйУстановкаСчетчиковОбъект.Комментарий = "#создан автоматически по данным из БП 7.7 (ГарантПлюс)";

    // Заполнение ТЧ Главная
    Для Каждого СтрокаДанных Из ДанныеДляЗаполнения Цикл
        // КВП_УстановкаСчетчика
        НоваяЗаписьУстановки = НовыйУстановкаСчетчиковОбъект.Главная.Добавить();
        НоваяЗаписьУстановки.Объект = СтрокаДанных.ЛицевойСчет;
        НоваяЗаписьУстановки.Счетчик = СтрокаДанных.Счетчик;
        НоваяЗаписьУстановки.ДатаВключения = ДатаВключенияПоУмолчанию;

        // Заполнение результата
        РезультатФункции.УстановленныеСчетчики.Добавить(СтрокаДанных.Счетчик);
    КонецЦикла;

    Попытка
        НовыйУстановкаСчетчиковОбъект.Записать(РежимЗаписиДокумента.Запись);
    Исключение
        РезультатФункции.УстановленныеСчетчики.Очистить();
        РезультатФункции.ТекстСообщения = СтрШаблон(
                "Ошибка при создании документа установки виртуальных счетчиков ОИ.
                |Информация: %1", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
        РезультатФункции.Успех = Ложь;
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции

Функция ЗаполнитьЗависимостиКанализацииОтУслугОИ(Знач Период = Неопределено) Экспорт
    РезультатФункции = Новый Структура("Успех, КоличествоЗаписейЗависимыхУслуг, ТекстСообщения", Истина, 0);

    ДанныеСчетчиковОИ = ПолучитьДанныеУстановкиВиртуальныхСчетчиковОИ();
    ДанныеЗаполнения = ПолучитьДанныеУстановкиЗависимостиКанализацииОИ(ДанныеСчетчиковОИ);

    // Значения по умолчанию
    ЗависимаяУслуга = ГП_МиграцияОбщегоНазначения.ПолучитьУслугуКанализации().Ссылка;
    ОсновнаяОрганизацияСсылка = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию();
    Если Период = Неопределено Тогда
        Период = Дата(2004, 01, 01); // По ТЗ дата по умолчанию 01.01.2024г.
    Иначе
        Период = НачалоМесяца(Период);
    КонецЕсли;

    НачатьТранзакцию();
    Попытка
        Для Каждого СтрокаУслуги Из ДанныеЗаполнения Цикл
            Если СтрокаУслуги.Процент <= 0 Тогда
                ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
                        "Зависимость услуги ""%1"" не назначена для объекта ""%2"" т.к. значение основания должно быть > 0",
                        Строка(СтрокаУслуги.Здание), Строка(СтрокаУслуги.ОсновнаяУслуга)));
                Продолжить;
            КонецЕсли;

            Если СтрокаУслуги.ЗависимаяУслуга <> ЗависимаяУслуга Тогда
                Продолжить; // Выполняем записи только для зависимой услуги - Канализация
            КонецЕсли;

            ОсновнаяУслуга = СтрокаУслуги.ОсновнаяУслуга;
            НовыйНаборЗаписей = ГП_МиграцияУслуг.СоздатьНаборЗаписейЗависимостиУслуг(
                    Период, СтрокаУслуги.Здание, ОсновнаяУслуга, ЗависимаяУслуга, ОсновнаяОрганизацияСсылка);

            НоваяЗапись = НовыйНаборЗаписей.Добавить();
            НоваяЗапись.Период = Период;
            НоваяЗапись.Объект = СтрокаУслуги.Здание;
            НоваяЗапись.УслугаОснование = ОсновнаяУслуга;
            НоваяЗапись.Услуга = ЗависимаяУслуга;
            НоваяЗапись.Организация = ОсновнаяОрганизацияСсылка;
            НоваяЗапись.Действует = Истина; // По ТЗ всегда Истина
            НоваяЗапись.Значение = 100.0; // Исправлено (числ/знам)
            НоваяЗапись.ЗначениеОснование = СтрокаУслуги.Процент;

            НовыйНаборЗаписей.Записать(Истина);
            РезультатФункции.КоличествоЗаписейЗависимыхУслуг = РезультатФункции.КоличествоЗаписейЗависимыхУслуг + 1;
        КонецЦикла;

        ЗафиксироватьТранзакцию();

    Исключение
        ОтменитьТранзакцию();

        РезультатФункции.КоличествоЗаписейЗависимыхУслуг = 0;
        РезультатФункции.ТекстСообщения = СтрШаблон(
                "Ошибка при записи зависимостей услуг канализации для счетчиков ОИ.
                |Информация:
                |%1", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));

        РезультатФункции.Успех = Ложь;
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции

Функция СоздатьДокументНазначенияУслугиХВСОИДляВиртуальныхСчетчиков(
        Знач ДатаДокумента = Неопределено, ДатаНачалаДействияПоУмолчанию = Неопределено, Знач ВыводитьСообщенияОбОшибках = Ложь) Экспорт

    РезультатФункции = Новый Структура(
            "Успех, СообщенияОбОшибках, ТекстСообщения, СозданныеДокументыУправленияУслугами",
            Истина, Новый Массив, "", Новый Массив);

    ДатаНачалаДействияПоУмолчанию = Дата(2024, 1, 1); // Константа по условиям ТЗ
    ДатаДокумента = ?(ДатаДокумента = Неопределено, ТекущаяДатаСеанса(), ДатаДокумента);

    // Сбор данных для заполнения
    ДанныеСчетчиковОИ = ПолучитьДанныеУстановкиВиртуальныхСчетчиковОИ();

    ОрганизацияСсылка = ?(ОрганизацияСсылка = Неопределено,
            УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию(), ОрганизацияСсылка);

    УслугаХВСОИ = ГП_МиграцияОбщегоНазначения.ПолучитьУслугуПлатаЗаХолодноеВодоснабжениеОИ().Ссылка;

    // Создаем новый элемент документа
    НовыйДокументУУОбъект = Документы.КВП_УправлениеУслугами.СоздатьДокумент();
    НовыйДокументУУОбъект.Дата = ДатаДокумента;
    НовыйДокументУУОбъект.Организация = ОрганизацияСсылка;
    НовыйДокументУУОбъект.ВидОперации = Перечисления.КВП_ВидыОперацийУправленияУслугами.НазначениеНаЛицевыеСчета;
    НовыйДокументУУОбъект.Ответственный = Пользователи.ТекущийПользователь();
    НовыйДокументУУОбъект.Комментарий = СтрШаблон("#создан автоматически для вида услуги БП 7.7: ""%1"". (ГарантПлюс)", УслугаХВСОИ);

    // Заполняем услугу документа
    НоваяСтрокаУслуги = НовыйДокументУУОбъект.Услуги.Добавить();
    НоваяСтрокаУслуги.Услуга = УслугаХВСОИ; // Плата за холодное водоснабжение ОИ

    Попытка
        // Заполняем объекты документа
        Для Каждого СтрокаДанных Из ДанныеСчетчиковОИ Цикл
            Если ТипЗнч(СтрокаДанных.ЛицевойСчет) <> Тип("СправочникСсылка.КВП_ЛицевыеСчета")
                ИЛИ СтрокаДанных.ЛицевойСчет.Пустая() Тогда
                Продолжить;
            КонецЕсли;

            Если СтрокаДанных.Услуга <> УслугаХВСОИ Тогда
                ТекстСообщенияОбОшибке = СтрШаблон(
                        "Внимание! Для л/с ""%1"" не была назначена услуга ""%2"" т.к. услуга"
                        + " указанная в счетчике не соответствует услуге ""%3""",
                        Строка(СтрокаДанных.ЛицевойСчет),
                        Строка(СтрокаДанных.Услуга),
                        Строка(УслугаХВСОИ));

                РезультатФункции.СообщенияОбОшибках.Добавить(ТекстСообщенияОбОшибке);

                Продолжить;
            КонецЕсли;

            НоваяСтрокаОбъекты = НовыйДокументУУОбъект.Объекты.Добавить();
            НоваяСтрокаОбъекты.Объект = СтрокаДанных.ЛицевойСчет;
            НоваяСтрокаОбъекты.ДатаНачала = ДатаНачалаДействияПоУмолчанию;
        КонецЦикла;

        // Записываем документ
        НовыйДокументУУОбъект.Записать(РежимЗаписиДокумента.Запись);
        РезультатФункции.СозданныеДокументыУправленияУслугами.Добавить(НовыйДокументУУОбъект.Ссылка);
    Исключение

        ОбщаяЧастьСообщения = "Ошибка при записи документов УправлениеУслугами.";

        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = СтрШаблон(
                "%1
                |Информация об ошибке: %2",
                ОбщаяЧастьСообщения,
                ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));

        РезультатФункции.СозданныеДокументыУправленияУслугами.Очистить();
    КонецПопытки;

    // Сообщения пользователю (опционально)
    Если ВыводитьСообщенияОбОшибках = Истина Тогда
        Для Каждого ТекстСообщения Из РезультатФункции.СообщенияОбОшибках Цикл
            ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
        КонецЦикла;

        Если РезультатФункции.Успех = Ложь Тогда
            ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
        КонецЕсли;
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 02.08.2024 [F00230765] перенос счетчиков ОИ (по среднему) --

// Гарант+ Килипенко 02.08.2024 [F00230765] перенос счетчиков ОИ (по среднему) ++
#Область СлужебныйПрограммныйИнтерфейс

// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Услуга - СправочникСсылка.КВП_Услуги
//      * ИдентификаторЛС - Строка
//      * КонтрагентКод - Строка
//      * ОбъектАбонентаКод - Строка
//      * МетодРасчета - Строка
//      * МетодРасчетаКан - Строка
//      * НеНачислять - Булево
//      * НеНачислять - Булево
//      * ТолькоДляКанализации - Число
//      * ЭтоПлатаЗаХолодноеВодоснабжениеОИ - Булево
Функция ПолучитьДанныеСозданияСчетчиковОИ() Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст = ПолучитьТекстЗапросаДанныхСозданияСчетчиковОИ();

    СтруктураУслугиХВОИ = ГП_МиграцияОбщегоНазначения.ПолучитьУслугуПлатаЗаХолодноеВодоснабжениеОИ();
    Запрос.УстановитьПараметр("УслугаХВОИ", СтруктураУслугиХВОИ.Ссылка);

    РезультатЗапроса = Запрос.Выполнить();
    ТаблицаСчетчиковОИ = РезультатЗапроса.Выгрузить();

    Возврат ТаблицаСчетчиковОИ;
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
Функция ПолучитьДанныеУстановкиВиртуальныхСчетчиковОИ() Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст = ПолучитьТекстЗапросаДанныхУстановкиВиртуальныхСчетчиковОИ();
    РезультатЗапроса = Запрос.Выполнить();

    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

// Возвращаемое значение:
//  - ТаблицаЗначений
Функция ПолучитьДанныеУстановкиЗависимостиКанализацииОИ(Знач ДанныеСчетчиковОИ) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ДанныеСчетчиковОИ.ЛицевойСчет КАК ЛицевойСчет,
        |	ДанныеСчетчиковОИ.КонтрагентКод КАК КонтрагентКод,
        |	ДанныеСчетчиковОИ.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ДанныеСчетчиковОИ.ОбъектАбонентаКодОИ КАК ОбъектАбонентаКодОИ,
        |	ДанныеСчетчиковОИ.Счетчик КАК Счетчик
        |ПОМЕСТИТЬ ВТ_СчетчикиОИ
        |ИЗ
        |	&ДанныеСчетчиковОИ КАК ДанныеСчетчиковОИ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_СчетчикиОИ.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_СчетчикиОИ.ЛицевойСчет.Адрес КАК Помещение,
        |	ВТ_СчетчикиОИ.ЛицевойСчет.Адрес.Владелец КАК Здание,
        |   ВЫБОР
        |       КОГДА ВТ_СчетчикиОИ.Счетчик.ВидУслуги = &УслугаХВОИ ТОГДА ЗданияБП77.ПроцентХВ
        |       ИНАЧЕ 0
        |   КОНЕЦ КАК Процент,
        |	ВТ_СчетчикиОИ.Счетчик КАК Счетчик,
        |	ВТ_СчетчикиОИ.Счетчик.ВидУслуги КАК ОсновнаяУслуга,
        |	&УслугаКанализация КАК ЗависимаяУслуга
        |ИЗ
        |	ВТ_СчетчикиОИ КАК ВТ_СчетчикиОИ
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГП_ЗданияБП77 КАК ЗданияБП77
        |		ПО ВТ_СчетчикиОИ.КонтрагентКод = ЗданияБП77.КонтрагентКод
        |			И ВТ_СчетчикиОИ.ОбъектАбонентаКодОИ = ЗданияБП77.ОбъектАбонентаКод
        |			И (ЗданияБП77.МетодРасчетаКан = ""По проценту"")
        |";

    Запрос.УстановитьПараметр("УслугаХВОИ", ГП_МиграцияОбщегоНазначения.ПолучитьУслугуПлатаЗаХолодноеВодоснабжениеОИ().Ссылка);
    Запрос.УстановитьПараметр("УслугаКанализация", ГП_МиграцияОбщегоНазначения.ПолучитьУслугуКанализации().Ссылка);
    Запрос.УстановитьПараметр("ДанныеСчетчиковОИ", ДанныеСчетчиковОИ);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 02.08.2024 [F00230765] перенос счетчиков ОИ (по среднему) --

// Гарант+ Килипенко 02.08.2024 [F00230765] перенос счетчиков ОИ (по среднему) ++
#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
//  - Строка
Функция ПолучитьТекстЗапросаДанныхСозданияСчетчиковОИ()
    ТекстЗапроса =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КВП_Счетчики.Ссылка КАК Ссылка,
        |	КВП_Счетчики.Наименование КАК Наименование,
        |	КВП_Счетчики.ГП_Комментарий КАК Комментарий,
        |	КВП_Счетчики.ГП_ЭтоВиртуальныйСчетчик КАК ГП_ЭтоВиртуальныйСчетчик
        |ПОМЕСТИТЬ ВТ_СуществующиеСчетчикиОИ
        |ИЗ
        |	Справочник.КВП_Счетчики КАК КВП_Счетчики
        |ГДЕ
        |	КВП_Счетчики.ЭтоГруппа = ЛОЖЬ
        |	И КВП_Счетчики.ПометкаУдаления = ЛОЖЬ
        |	И КВП_Счетчики.ГП_ЭтоПлатаЗаВодоснабжениеОИ = ИСТИНА
        |	И КВП_Счетчики.ГП_ЭтоВиртуальныйСчетчик = ИСТИНА
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЗданияБП77.КонтрагентКод КАК КонтрагентКод,
        |	ЗданияБП77.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ЗданияБП77.ОбъектАбонентаКод + ""_"" + ЗданияБП77.КонтрагентКод КАК ИдентификаторЛС,
        |	ЗданияБП77.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ЗданияБП77.ДоговорКод КАК ДоговорКод,
        |	ЗданияБП77.ТолькоДляКанализации КАК ТолькоДляКанализации,
        |	ЗданияБП77.ПроцентХВ КАК ПроцентХВ,
        |	ЗданияБП77.ПроцентГВ КАК ПроцентГВ,
        |	ЗданияБП77.ЭтоНегативноеВоздействиеЦСВ КАК ЭтоНегативноеВоздействиеЦСВ,
        |	ЗданияБП77.ЭтоПлатаЗаХолодноеВодоснабжениеОИ КАК ЭтоПлатаЗаХолодноеВодоснабжениеОИ,
        |	ЗданияБП77.МетодРасчетаХВ КАК МетодРасчетаХВ,
        |	ЗданияБП77.МетодРасчетаГВ КАК МетодРасчетаГВ,
        |	ЗданияБП77.МетодРасчетаКан КАК МетодРасчетаКан,
        |	ЗданияБП77.НеНачислять КАК НеНачислять,
        |	ЗданияБП77.СрКоличествоХВ КАК СрКоличествоХВ,
        |	ЗданияБП77.СрКоличествоГВ КАК СрКоличествоГВ,
        |	ЗданияБП77.ПроцентОтХВ КАК ПроцентОтХВ
        |ПОМЕСТИТЬ ВТ_ЗданияБП77ДляОИ
        |ИЗ
        |	РегистрСведений.ГП_ЗданияБП77 КАК ЗданияБП77
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГП_КонтрагентыБП77 КАК КонтрагентыБП77
        |		ПО ЗданияБП77.КонтрагентКод = КонтрагентыБП77.Код
        |			И (ЗданияБП77.ЭтоПлатаЗаХолодноеВодоснабжениеОИ)
        |			//И (ЗданияБП77.СрКоличествоХВ + ЗданияБП77.СрКоличествоХВ > 0)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |// Результат [0] Плата за холодное водоснабжение ОИ
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ЗданияБП77ДляОИ.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_ЗданияБП77ДляОИ.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_ЗданияБП77ДляОИ.ИдентификаторЛС КАК ИдентификаторЛС,
        |	ВТ_ЗданияБП77ДляОИ.ОбъектАбонентаНаименование КАК Наименование,
        |	ВТ_СуществующиеСчетчикиОИ.Ссылка КАК Ссылка,
        |	ВТ_ЗданияБП77ДляОИ.ТолькоДляКанализации КАК ТолькоДляКанализации,
        |	ВТ_ЗданияБП77ДляОИ.МетодРасчетаХВ КАК МетодРасчета,
        |	ВТ_ЗданияБП77ДляОИ.МетодРасчетаКан КАК МетодРасчетаКан,
        |	ВТ_ЗданияБП77ДляОИ.НеНачислять КАК НеНачислять,
        |	ВТ_ЗданияБП77ДляОИ.СрКоличествоХВ КАК КоличествоПоСреднему,
        |	&УслугаХВОИ КАК Услуга
        |ИЗ
        |	ВТ_ЗданияБП77ДляОИ КАК ВТ_ЗданияБП77ДляОИ
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуществующиеСчетчикиОИ КАК ВТ_СуществующиеСчетчикиОИ
        |		ПО (ВТ_СуществующиеСчетчикиОИ.Наименование = ВЫРАЗИТЬ(""[[Плата за ОИ]] "" + ВТ_ЗданияБП77ДляОИ.ОбъектАбонентаНаименование КАК СТРОКА(100)))
        |			И (ВТ_СуществующиеСчетчикиОИ.Комментарий ПОДОБНО ""%(ид: ("" + ВТ_ЗданияБП77ДляОИ.ИдентификаторЛС + ""))"")
        |ГДЕ
        |	ВТ_ЗданияБП77ДляОИ.МетодРасчетаХВ <> ""Нет""
        |	И ВТ_СуществующиеСчетчикиОИ.Ссылка ЕСТЬ NULL
        |";

    Возврат ТекстЗапроса;
КонецФункции

Функция ПолучитьТекстЗапросаДанныхУстановкиВиртуальныхСчетчиковОИ()
    РезультатФункции =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КВП_Счетчики.Ссылка КАК Ссылка,
        |	КВП_Счетчики.Наименование КАК Наименование,
        |	КВП_Счетчики.ГП_Комментарий КАК Комментарий,
        |	КВП_Счетчики.ГП_ЭтоВиртуальныйСчетчик КАК ГП_ЭтоВиртуальныйСчетчик
        |ПОМЕСТИТЬ ВТ_СуществующиеСчетчикиОИ
        |ИЗ
        |	Справочник.КВП_Счетчики КАК КВП_Счетчики
        |ГДЕ
        |	КВП_Счетчики.ЭтоГруппа = ЛОЖЬ
        |	И КВП_Счетчики.ПометкаУдаления = ЛОЖЬ
        |	И КВП_Счетчики.ГП_ЭтоПлатаЗаВодоснабжениеОИ = ИСТИНА
        |	И КВП_Счетчики.ГП_ЭтоВиртуальныйСчетчик = ИСТИНА
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ЗданияБП77.КонтрагентКод КАК КонтрагентКод,
        |	ЗданияБП77.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ЗданияБП77.ОбъектАбонентаКод + ""_"" + ЗданияБП77.КонтрагентКод КАК ИдентификаторЛС,
        |	ЗданияБП77.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ЗданияБП77.ДоговорКод КАК ДоговорКод,
        |	ЗданияБП77.ТолькоДляКанализации КАК ТолькоДляКанализации,
        |	ЗданияБП77.ПроцентХВ КАК ПроцентХВ,
        |	ЗданияБП77.ПроцентГВ КАК ПроцентГВ,
        |	ЗданияБП77.ЭтоНегативноеВоздействиеЦСВ КАК ЭтоНегативноеВоздействиеЦСВ,
        |	ЗданияБП77.ЭтоПлатаЗаХолодноеВодоснабжениеОИ КАК ЭтоПлатаЗаХолодноеВодоснабжениеОИ,
        |	ЗданияБП77.МетодРасчетаХВ КАК МетодРасчетаХВ,
        |	ЗданияБП77.МетодРасчетаГВ КАК МетодРасчетаГВ,
        |	ЗданияБП77.МетодРасчетаКан КАК МетодРасчетаКан,
        |	ЗданияБП77.НеНачислять КАК НеНачислять,
        |	ЗданияБП77.СрКоличествоХВ КАК СрКоличествоХВ,
        |	ЗданияБП77.СрКоличествоГВ КАК СрКоличествоГВ,
        |	ЗданияБП77.ПроцентОтХВ КАК ПроцентОтХВ
        |ПОМЕСТИТЬ ВТ_ЗданияБП77ДляОИ
        |ИЗ
        |	РегистрСведений.ГП_ЗданияБП77 КАК ЗданияБП77
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГП_КонтрагентыБП77 КАК КонтрагентыБП77
        |		ПО ЗданияБП77.КонтрагентКод = КонтрагентыБП77.Код
        |			И (ЗданияБП77.ЭтоПлатаЗаХолодноеВодоснабжениеОИ)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ЗданияБП77ДляОИ.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_ЗданияБП77ДляОИ.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_ЗданияБП77ДляОИ.ИдентификаторЛС КАК ИдентификаторЛС,
        |	ВТ_ЗданияБП77ДляОИ.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ВТ_СуществующиеСчетчикиОИ.Ссылка КАК Счетчик
        |ПОМЕСТИТЬ ВТ_СчетчикиОИЗданияБП77
        |ИЗ
        |	ВТ_СуществующиеСчетчикиОИ КАК ВТ_СуществующиеСчетчикиОИ
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗданияБП77ДляОИ КАК ВТ_ЗданияБП77ДляОИ
        |		ПО (ВТ_СуществующиеСчетчикиОИ.Наименование = (ВЫРАЗИТЬ(""[[Плата за ОИ]] "" + ВТ_ЗданияБП77ДляОИ.ОбъектАбонентаНаименование КАК СТРОКА(100))))
        |			И (ВТ_СуществующиеСчетчикиОИ.Комментарий ПОДОБНО ""%(ид: ("" + ВТ_ЗданияБП77ДляОИ.ИдентификаторЛС + ""))"")
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_СчетчикиОИЗданияБП77.КонтрагентКод КАК КонтрагентКод,
        |	ГП_ЗданияБП77.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_СчетчикиОИЗданияБП77.ОбъектАбонентаКод КАК ОбъектАбонентаКодОИ,
        |	ГП_ЗданияБП77.ОбъектАбонентаКод + ""_"" + ГП_ЗданияБП77.КонтрагентКод КАК ИдентификаторЛС,
        |	ВТ_СчетчикиОИЗданияБП77.ИдентификаторЛС КАК ИдентификаторЛССчетчикаОИ,
        |	ГП_ЗданияБП77.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ВТ_СчетчикиОИЗданияБП77.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименованиеОИ,
        |	ВТ_СчетчикиОИЗданияБП77.Счетчик КАК Счетчик,
        |	АВТОНОМЕРЗАПИСИ() КАК АвтоНомер
        |ПОМЕСТИТЬ ВТ_СчетчикиОИДляУстановкиПодгтовка
        |ИЗ
        |	ВТ_СчетчикиОИЗданияБП77 КАК ВТ_СчетчикиОИЗданияБП77
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГП_ЗданияБП77 КАК ГП_ЗданияБП77
        |		ПО ВТ_СчетчикиОИЗданияБП77.КонтрагентКод = ГП_ЗданияБП77.КонтрагентКод
        |			И (ГП_ЗданияБП77.ЭтоПлатаЗаХолодноеВодоснабжениеОИ = ЛОЖЬ)
        |			И (ГП_ЗданияБП77.ЭтоНегативноеВоздействиеЦСВ = ЛОЖЬ)
        |			И ВТ_СчетчикиОИЗданияБП77.ОбъектАбонентаКод <> ГП_ЗданияБП77.ОбъектАбонентаКод
        |			И ВТ_СчетчикиОИЗданияБП77.ОбъектАбонентаНаименование ПОДОБНО ГП_ЗданияБП77.ОбъектАбонентаНаименование + ""%([Пп]лат%[Оо][Ии]%""
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_СчетчикиОИДляУстановкиПодгтовка.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_СчетчикиОИДляУстановкиПодгтовка.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_СчетчикиОИДляУстановкиПодгтовка.ОбъектАбонентаКодОИ КАК ОбъектАбонентаКодОИ,
        |	ВТ_СчетчикиОИДляУстановкиПодгтовка.ИдентификаторЛС КАК ИдентификаторЛС,
        |	ВТ_СчетчикиОИДляУстановкиПодгтовка.ИдентификаторЛССчетчикаОИ КАК ИдентификаторЛССчетчикаОИ,
        |	ВТ_СчетчикиОИДляУстановкиПодгтовка.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ВТ_СчетчикиОИДляУстановкиПодгтовка.ОбъектАбонентаНаименованиеОИ КАК ОбъектАбонентаНаименованиеОИ,
        |	ВТ_СчетчикиОИДляУстановкиПодгтовка.Счетчик КАК Счетчик
        |ПОМЕСТИТЬ ВТ_СчетчикиОИДляУстановки
        |ИЗ
        |	ВТ_СчетчикиОИДляУстановкиПодгтовка КАК ВТ_СчетчикиОИДляУстановкиПодгтовка
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетчикиОИДляУстановкиПодгтовка КАК Т
        |		ПО ВТ_СчетчикиОИДляУстановкиПодгтовка.ИдентификаторЛС = Т.ИдентификаторЛС
        |			И ВТ_СчетчикиОИДляУстановкиПодгтовка.АвтоНомер < Т.АвтоНомер
        |ГДЕ
        |	Т.Счетчик ЕСТЬ NULL
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КВП_ЛицевыеСчета.Ссылка КАК ЛицевойСчет,
        |	КВП_ЛицевыеСчета.Адрес КАК Помещение,
        |	КВП_ЛицевыеСчета.Адрес.Владелец КАК Здание,
        |	КВП_ЛицевыеСчета.Идентификатор КАК Идентификатор
        |ПОМЕСТИТЬ ВТ_ЛицевыеСчетаДляУстановки
        |ИЗ
        |	Справочник.КВП_ЛицевыеСчета КАК КВП_ЛицевыеСчета
        |ГДЕ
        |	КВП_ЛицевыеСчета.ЭтоГруппа = ЛОЖЬ
        |	И КВП_ЛицевыеСчета.ПометкаУдаления = ЛОЖЬ
        |	И КВП_ЛицевыеСчета.Идентификатор В
        |			(ВЫБРАТЬ
        |				Т.ИдентификаторЛС
        |			ИЗ
        |				ВТ_СчетчикиОИДляУстановки КАК Т)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ЛицевыеСчетаДляУстановки.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_ЛицевыеСчетаДляУстановки.Помещение КАК Помещение,
        |	ВТ_ЛицевыеСчетаДляУстановки.Здание КАК Здание,
        |	ВТ_ЛицевыеСчетаДляУстановки.Идентификатор КАК Идентификатор,
        |	ВТ_СчетчикиОИДляУстановки.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_СчетчикиОИДляУстановки.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_СчетчикиОИДляУстановки.ОбъектАбонентаКодОИ КАК ОбъектАбонентаКодОИ,
        |	ВТ_СчетчикиОИДляУстановки.ИдентификаторЛС КАК ИдентификаторЛС,
        |	ВТ_СчетчикиОИДляУстановки.ИдентификаторЛССчетчикаОИ КАК ИдентификаторЛССчетчикаОИ,
        |	ВТ_СчетчикиОИДляУстановки.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ВТ_СчетчикиОИДляУстановки.ОбъектАбонентаНаименованиеОИ КАК ОбъектАбонентаНаименованиеОИ,
        |	ВТ_СчетчикиОИДляУстановки.Счетчик КАК Счетчик,
        |	ВТ_СчетчикиОИДляУстановки.Счетчик.ВидУслуги КАК Услуга
        |ИЗ
        |	ВТ_СчетчикиОИДляУстановки КАК ВТ_СчетчикиОИДляУстановки
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЛицевыеСчетаДляУстановки КАК ВТ_ЛицевыеСчетаДляУстановки
        |		ПО ВТ_СчетчикиОИДляУстановки.ИдентификаторЛС = ВТ_ЛицевыеСчетаДляУстановки.Идентификатор
        |";

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 02.08.2024 [F00230765] перенос счетчиков ОИ (по среднему) --
