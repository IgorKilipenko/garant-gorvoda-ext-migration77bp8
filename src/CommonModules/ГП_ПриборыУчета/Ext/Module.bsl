// Гарант+ Килипенко 11.09.2024 [F00227694] Доработка документа ввод показаний счетчика ++
#Область ПрограммныйИнтерфейс

// Параметры:
//  ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета
//  ТолькоДействующиеСчетчики - Булево, Неопределено - По умолчанию Истина
//  ТолькоДействующиеУслуги - Булево, Неопределено - По умолчанию Истина
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Объект - СправочникСсылка.КВП_ЛицевыеСчета
//      * ПриборУчета - СправочникСсылка.КВП_Счетчики
//      * Организация - СправочникСсылка.Организации
//      * Действует - Булево
//      * ДатаНачала - Дата
//      * ДатаПоверки - Дата
//      * НомерПломбы - Строка
//      * ПричинаОтключения - ПеречислениеСсылка.УПЖКХ_ПричиныОтключенияПриборовУчета
//      * Услуга - ПеречислениеСсылка.КВП_Услуги
//      * УслугаДействует - Булево
Функция ПолучитьПриборыУчетаДоговораПоЛицевомуСчету(
        Знач ЛицевойСчет, Знач ТолькоДействующиеСчетчики = Неопределено, ТолькоДействующиеУслуги = Неопределено) Экспорт

    ТолькоДействующиеСчетчики = ?(ТолькоДействующиеСчетчики = Неопределено, Истина, ТолькоДействующиеСчетчики);
    ТолькоДействующиеУслуги = ?(ТолькоДействующиеУслуги = Неопределено, Истина, ТолькоДействующиеУслуги);

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	СведенияДляВзаиморасчетовПоЛС.Договор КАК Договор,
        |	СведенияДляВзаиморасчетовПоЛС.Организация КАК Организация,
        |	СведенияДляВзаиморасчетовПоЛС.Контрагент КАК Контрагент
        |ПОМЕСТИТЬ ВТ_ДоговорыЛС
        |ИЗ
        |	РегистрСведений.УПЖКХ_СведенияДляВзаиморасчетовПоЛС.СрезПоследних(, ЛицевойСчет = &ЛицевойСчет) КАК СведенияДляВзаиморасчетовПоЛС
        |ГДЕ
        |	СведенияДляВзаиморасчетовПоЛС.ЛицевойСчет = &ЛицевойСчет
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	СведенияДляВзаиморасчетовПоЛС.Период КАК Период,
        |	СведенияДляВзаиморасчетовПоЛС.Регистратор КАК Регистратор,
        |	СведенияДляВзаиморасчетовПоЛС.Организация КАК Организация,
        |	СведенияДляВзаиморасчетовПоЛС.ЛицевойСчет КАК ЛицевойСчет,
        |	СведенияДляВзаиморасчетовПоЛС.Договор КАК Договор,
        |	СведенияДляВзаиморасчетовПоЛС.Контрагент КАК Контрагент
        |ПОМЕСТИТЬ ВТ_ЛицевыеСчетаДоговора
        |ИЗ
        |	РегистрСведений.УПЖКХ_СведенияДляВзаиморасчетовПоЛС.СрезПоследних КАК СведенияДляВзаиморасчетовПоЛС
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДоговорыЛС КАК ВТ_ДоговорыЛС
        |		ПО СведенияДляВзаиморасчетовПоЛС.Договор = ВТ_ДоговорыЛС.Договор
        |			И СведенияДляВзаиморасчетовПоЛС.Контрагент = ВТ_ДоговорыЛС.Контрагент
        |			И СведенияДляВзаиморасчетовПоЛС.Организация = ВТ_ДоговорыЛС.Организация
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ИсторияСостоянийПриборовУчета.Период КАК Период,
        |	ИсторияСостоянийПриборовУчета.Регистратор КАК Регистратор,
        |	ИсторияСостоянийПриборовУчета.Объект КАК Объект,
        |	ИсторияСостоянийПриборовУчета.ПриборУчета КАК ПриборУчета,
        |	ИсторияСостоянийПриборовУчета.Действует КАК Действует,
        |	ИсторияСостоянийПриборовУчета.ДатаНачала КАК ДатаНачала,
        |	ИсторияСостоянийПриборовУчета.ДатаПоверки КАК ДатаПоверки,
        |	ИсторияСостоянийПриборовУчета.НомерПломбы КАК НомерПломбы,
        |	ИсторияСостоянийПриборовУчета.ПричинаОтключения КАК ПричинаОтключения
        |ПОМЕСТИТЬ ВТ_ИсторияСостоянийПриборовУчета
        |ИЗ
        |	РегистрСведений.УПЖКХ_ИсторияСостоянийПриборовУчета.СрезПоследних КАК ИсторияСостоянийПриборовУчета
        |ГДЕ
        |	ИсторияСостоянийПриборовУчета.Объект В
        |			(ВЫБРАТЬ
        |				ВТ_ЛицевыеСчетаДоговора.ЛицевойСчет
        |			ИЗ
        |				ВТ_ЛицевыеСчетаДоговора)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ИсторияСостоянийПриборовУчета.Период КАК ПериодСчетчика,
        |	НазначенныеНачисления.Организация КАК Организация,
        |	ВТ_ИсторияСостоянийПриборовУчета.Объект КАК Объект,
        |	ВТ_ИсторияСостоянийПриборовУчета.ПриборУчета КАК ПриборУчета,
        |	ВТ_ИсторияСостоянийПриборовУчета.Действует КАК СчетчикДействует,
        |	ВТ_ИсторияСостоянийПриборовУчета.ДатаНачала КАК ДатаНачала,
        |	ВТ_ИсторияСостоянийПриборовУчета.ДатаПоверки КАК ДатаПоверки,
        |	ВТ_ИсторияСостоянийПриборовУчета.НомерПломбы КАК НомерПломбы,
        |	ВТ_ИсторияСостоянийПриборовУчета.ПричинаОтключения КАК ПричинаОтключения,
        |	НазначенныеНачисления.Услуга КАК Услуга,
        |	НазначенныеНачисления.Действует КАК УслугаДействует,
        |	НазначенныеНачисления.ДатаИзменения КАК ДатаИзменения
        |ИЗ
        |	ВТ_ИсторияСостоянийПриборовУчета КАК ВТ_ИсторияСостоянийПриборовУчета
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КВП_НазначенныеНачисления.СрезПоследних КАК НазначенныеНачисления
        |		ПО ВТ_ИсторияСостоянийПриборовУчета.Объект = НазначенныеНачисления.Объект
        |			И ВТ_ИсторияСостоянийПриборовУчета.ПриборУчета.ВидУслуги = НазначенныеНачисления.Услуга
        |			И (НазначенныеНачисления.Действует = ИСТИНА)
        |";

    Запрос.УстановитьПараметр("ЛицевойСчет", ЛицевойСчет);
    Если ТолькоДействующиеСчетчики = Ложь Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ИсторияСостоянийПриборовУчета.Действует = ИСТИНА", "");
    КонецЕсли;
    Если ТолькоДействующиеУслуги = Ложь Тогда
        Запрос.Текст = СтрЗаменитьПоРегулярномуВыражению(Запрос.Текст, "И\s+\(?НазначенныеНачисления.Действует = ИСТИНА\)?", "");
    КонецЕсли;

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();

    Возврат РезультатФункции;
КонецФункции

// Гарант+ Килипенко 18.11.2024 [F00231124] Отбор счетчиков по договорам ++
//
// Параметры:
//  ДоговорСсылка - СправочникСсылка.ДоговорыКонтрагентов
//  ДатаАктуальности - Дата, Неопределено
// Возвращаемое значение:
//  Массив из СправочникСсылка.КВП_Счетчики
Функция ПолучитьСписокПриборовУчетаДоговора(Знач ДоговорСсылка, Знач ДатаАктуальности = Неопределено) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст = ПолучитьТекстЗапросаПриборовУчетаДоговора(ДатаАктуальности <> Неопределено);

    Если ДатаАктуальности <> Неопределено Тогда
        Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
    КонецЕсли;

    Запрос.УстановитьПараметр("ДоговорыОтбора", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДоговорСсылка));

    РезультатЗапроса = Запрос.Выполнить();
    ДанныеПриборовУчета = РезультатЗапроса.Выгрузить();

    ИмяПоляРезультата = "ПриборУчета";
    ДанныеПриборовУчета.Свернуть(ИмяПоляРезультата);
    РезультатФункции = ДанныеПриборовУчета.ВыгрузитьКолонку(ИмяПоляРезультата);

    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 18.11.2024 [F00231124] Отбор счетчиков по договорам --

// Гарант+ Килипенко 01.10.2024 [F00228899] Формирование комментария со списком договоров док. ввода показаний ++
//
// Параметры:
//  МассивПриборовУчета - Массив из СправочникСсылка.КВП_Счетчики
//  ДатаАктуальности - Дата, Неопределено
// Возвращаемое значение:
//  - Массив из СправочникСсылка.ДоговорыКонтрагентов
Функция ПолучитьМассивДоговоровВзаиморасчетовДляПриборовУчетаПоЛС(Знач МассивПриборовУчета, Знач ДатаАктуальности = Неопределено) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	УПЖКХ_ИсторияСостоянийПриборовУчета.Объект КАК Объект,
        |	УПЖКХ_ИсторияСостоянийПриборовУчета.ПриборУчета КАК ПриборУчета,
        |	УПЖКХ_ИсторияСостоянийПриборовУчета.Действует КАК Действует,
        |	УПЖКХ_ИсторияСостоянийПриборовУчета.ДатаНачала КАК ДатаНачала,
        |	УПЖКХ_ИсторияСостоянийПриборовУчета.ДатаПоверки КАК ДатаПоверки,
        |	УПЖКХ_ИсторияСостоянийПриборовУчета.ПричинаОтключения КАК ПричинаОтключения
        |ПОМЕСТИТЬ ВТ_СведенияПУ
        |ИЗ
        |	РегистрСведений.УПЖКХ_ИсторияСостоянийПриборовУчета.СрезПоследних(&ДатаАктуальности, ПриборУчета В (&МассивПриборовУчета)) КАК УПЖКХ_ИсторияСостоянийПриборовУчета
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВЫРАЗИТЬ(ВТ_СведенияПУ.Объект КАК Справочник.КВП_ЛицевыеСчета) КАК ЛицевойСчет,
        |	ВТ_СведенияПУ.ПриборУчета КАК ПриборУчета
        |ПОМЕСТИТЬ ВТ_ПУЛицевыхСчетов
        |ИЗ
        |	ВТ_СведенияПУ КАК ВТ_СведенияПУ
        |ГДЕ
        |	ВТ_СведенияПУ.Объект ССЫЛКА Справочник.КВП_ЛицевыеСчета
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	КВП_ЛицевыеСчета.ЛицевойСчет КАК ЛицевойСчет
        |ПОМЕСТИТЬ ВТ_ЛицевыеСчета
        |ИЗ
        |	РегистрСведений.КВП_ЛицевыеСчета.СрезПоследних(
        |			&ДатаАктуальности,
        |			ЛицевойСчет В
        |				(ВЫБРАТЬ
        |					ВТ_ПУЛицевыхСчетов.ЛицевойСчет
        |				ИЗ
        |					ВТ_ПУЛицевыхСчетов)) КАК КВП_ЛицевыеСчета
        |ГДЕ
        |	КВП_ЛицевыеСчета.Действует = ИСТИНА
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	СведенияДляВзаиморасчетовПоЛС.Договор КАК Договор
        |ИЗ
        |	РегистрСведений.УПЖКХ_СведенияДляВзаиморасчетовПоЛС.СрезПоследних(
        |			&ДатаАктуальности,
        |			ЛицевойСчет В
        |				(ВЫБРАТЬ
        |					ВТ_ЛицевыеСчета.ЛицевойСчет
        |				ИЗ
        |					ВТ_ЛицевыеСчета)) КАК СведенияДляВзаиморасчетовПоЛС
        |";

    Если ДатаАктуальности = Неопределено Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДатаАктуальности", "");
    Иначе
        Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
    КонецЕсли;
    Запрос.УстановитьПараметр("МассивПриборовУчета", МассивПриборовУчета);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Договор");
    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 01.10.2024 [F00228899] Формирование комментария со списком договоров док. ввода показаний --

// Гарант+ Килипенко 15.10.2024 [F00229737] Формирование комментария со списком договоров ++
//
// Параметры:
//  КоллекцияСчетчиков - Массив из СправочникСсылка.КВП_Счетчики
// Возвращаемое значение:
//  - Строка, Неопределено
Функция СформироватьСтрокуСпискаДоговоровПоПУ(Знач КоллекцияСчетчиков) Экспорт
    МассивПУ = Новый Массив;
    Для Каждого Счетчик Из КоллекцияСчетчиков Цикл
        Если Счетчик = Справочники.КВП_Счетчики.ПустаяСсылка() Тогда
            Продолжить;
        КонецЕсли;

        МассивПУ.Добавить(Счетчик);
    КонецЦикла;

    Если МассивПУ.Количество() = 0 Тогда
        Возврат Неопределено;
    КонецЕсли;

    МассивДоговоров = ПолучитьМассивДоговоровВзаиморасчетовДляПриборовУчетаПоЛС(МассивПУ);

    СтрокаСпискаДоговоров = СформироватьСтрокуСпискаДоговоров(МассивДоговоров);

    Возврат СтрокаСпискаДоговоров;
КонецФункции // Гарант+ Килипенко 15.10.2024 [F00229737] Формирование комментария со списком договоров --

// Параметры:
//  МассивДоговоров - Массив из СправочникСсылка.ДоговорыКонтрагентов
// Возвращаемое значение:
//  - Строка
Функция СформироватьСтрокуСпискаДоговоров(Знач МассивДоговоров) Экспорт
    СтрокаСпискаДоговоров = "";

    Для Каждого Договор Из МассивДоговоров Цикл
        СтрокаСпискаДоговоров = СтрШаблон("%1; %2", СтрокаСпискаДоговоров, Строка(Договор));
    КонецЦикла;
    Если ПустаяСтрока(СтрокаСпискаДоговоров) = Ложь Тогда
        СтрокаСпискаДоговоров = Сред(СтрокаСпискаДоговоров, 3);
    Иначе
        СтрокаСпискаДоговоров = Неопределено;
    КонецЕсли;

    Возврат СтрокаСпискаДоговоров;
КонецФункции

// Параметры:
//  ДанныеЗаполнения - Структура
//      * Наименование - Строка
//      * Услуга - СправочникСсылка.КВП_Услуги
//      * ТолькоДляКанализации - Булево
//      * КоличествоПоСреднему - Число
//      * Комментарий - Строка - Опционально
//      * ИдентификаторЛС - Строка - Опционально
//  ДопЧислоДляГенерацииИдентификаторов - Число, Неопределено
// Возвращаемое значение:
//  - СправочникСсылка.КВП_Счетчики
Функция СоздатьСчетчикОИ(Знач ДанныеЗаполнения, Знач ДопЧислоДляГенерацииИдентификаторов = Неопределено) Экспорт
    ДанныеЗаполнения.Наименование = СтрШаблон("[[Плата за ОИ]] %1", ДанныеЗаполнения.Наименование);

    НовыйСчетчикОИ = НовыйВиртуальныйСчетчик(ДанныеЗаполнения, ДопЧислоДляГенерацииИдентификаторов);
    НовыйСчетчикОИ.ГП_ЭтоПлатаЗаВодоснабжениеОИ = Истина;

    НовыйСчетчикОИ.Записать();

    Возврат НовыйСчетчикОИ.Ссылка;
КонецФункции

// Гарант+ Килипенко 07.10.2024 [F00230765] перенос счетчиков Потерь воды (по среднему) ++
//
// Параметры:
//  ДанныеЗаполнения - Структура
//      * Наименование - Строка
//      * Услуга - СправочникСсылка.КВП_Услуги
//      * ТолькоДляКанализации - Булево
//      * КоличествоПоСреднему - Число
//      * Комментарий - Строка - Опционально
//      * ИдентификаторЛС - Строка - Опционально
//  ДопЧислоДляГенерацииИдентификаторов - Число, Неопределено
// Возвращаемое значение:
//  - СправочникСсылка.КВП_Счетчики
Функция СоздатьСчетчикВиртуальныйСчетчикПотерь(Знач ДанныеЗаполнения, Знач ДопЧислоДляГенерацииИдентификаторов = Неопределено) Экспорт
    ДанныеЗаполнения.Наименование = СтрШаблон("[[Потери воды]] %1", ДанныеЗаполнения.Наименование);

    НовыйСчетчикПотерь = НовыйВиртуальныйСчетчик(ДанныеЗаполнения, ДопЧислоДляГенерацииИдентификаторов);
    НовыйСчетчикПотерь.ГП_ЭтоСчетчикПотерьВоды = Истина;

    НовыйСчетчикПотерь.Записать();

    Возврат НовыйСчетчикПотерь.Ссылка;
КонецФункции // Гарант+ Килипенко 07.10.2024 [F00230765] перенос счетчиков Потерь воды (по среднему) --

// Гарант+ Килипенко 07.10.2024 [F00230765] перенос счетчиков Потерь воды (по среднему) ++
//
// Параметры:
//  ДанныеЗаполнения - Структура
//      * Наименование - Строка
//      * Услуга - СправочникСсылка.КВП_Услуги
//      * ТолькоДляКанализации - Булево
//      * КоличествоПоСреднему - Число
//      * Комментарий - Строка - Опционально
//      * ИдентификаторЛС - Строка - Опционально
//  ДопЧислоДляГенерацииИдентификаторов - Число, Неопределено
// Возвращаемое значение:
//  - СправочникОбъект.КВП_Счетчики
Функция НовыйВиртуальныйСчетчик(Знач ДанныеЗаполнения, Знач ДопЧислоДляГенерацииИдентификаторов = Неопределено) Экспорт
    НовыйВиртуальныйСчетчик = Справочники.КВП_Счетчики.СоздатьЭлемент();

    ДопЧислоДляГенерацииИдентификаторов = ?(ДопЧислоДляГенерацииИдентификаторов = Неопределено, 0, ДопЧислоДляГенерацииИдентификаторов);
    НовыйВиртуальныйСчетчик.Идентификатор =
        УПЖКХ_ОбщегоНазначенияСервер.ПолучитьИдентификаторСчетчика( ,
            НовыйВиртуальныйСчетчик.Код, ДопЧислоДляГенерацииИдентификаторов, Истина);

    НовыйВиртуальныйСчетчик.ВидУслуги = ДанныеЗаполнения.Услуга;

    НовыйВиртуальныйСчетчик.Разрядность = 6; // По ТЗ
    НовыйВиртуальныйСчетчик.Коэффициент = 1; // По ТЗ
    НовыйВиртуальныйСчетчик.ИспользоватьТемпературныйКоэффициент = Ложь;

    // Тарифность (по умолчанию 1-тарифный)
    НовыйВиртуальныйСчетчик.Тарифность = Перечисления.КВП_ТарифностьСчетчиков.Однотарифный; // По ТЗ
    НовыйВиртуальныйСчетчик.СпособРегистрацииПоказаний = Перечисления.КВП_СпособыРегистрацииПоказанийСчетчиков.РасходЗаПериодРасчета;

    НовыйВиртуальныйСчетчик.Наименование = ДанныеЗаполнения.Наименование;

    // Комментарий
    СтрокаКомментария = ?(ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДанныеЗаполнения, "Комментарий"),
            ДанныеЗаполнения.Комментарий, "");
    Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДанныеЗаполнения, "ИдентификаторЛС") Тогда
        СтрокаКомментария = СтрШаблон("%1 (ид: (%2))",
                СтрокаКомментария, ДанныеЗаполнения.ИдентификаторЛС);
    КонецЕсли;
    НовыйВиртуальныйСчетчик.ГП_Комментарий = СтрокаКомментария;

    НовыйВиртуальныйСчетчик.ГП_ТолькоДляКанализации = ДанныеЗаполнения.ТолькоДляКанализации;
    НовыйВиртуальныйСчетчик.ГП_ЭтоВиртуальныйСчетчик = Истина;
    НовыйВиртуальныйСчетчик.ГП_КоличествоПоСреднему = ДанныеЗаполнения.КоличествоПоСреднему;

    Возврат НовыйВиртуальныйСчетчик;
КонецФункции // Гарант+ Килипенко 07.10.2024 [F00230765] перенос счетчиков Потерь воды (по среднему) --

// Гарант+ Килипенко 11.11.2024 [F00230850] Сохранению показаний счетчика ++
//
// Параметры:
//  СчетчикСсылка - СправочникСсылка.КВП_Счетчики
// Возвращаемое значение:
//  - Булево
Функция ПолучитьЭтоСчетчикДляПерерасчетов(Знач СчетчикСсылка) Экспорт
    РезультатФункции = Ложь;

    Если СчетчикСсылка = Справочники.КВП_Счетчики.ПустаяСсылка() Тогда
        Возврат РезультатФункции;
    КонецЕсли;

    РезультатФункции = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СчетчикСсылка, "ГП_ЭтоСчетчикДляПерерасчетов");
    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 11.11.2024 [F00230850] Сохранению показаний счетчика --

// Гарант+ Килипенко 11.11.2024 [F00230766] Перенос признака ТолькоДляКанализации ++
//
// Параметры:
//  КакМассив - Булево
// Возвращаемое значение:
//  Массив из СправочникСсылка.КВП_Счетчики, ТаблицаЗначений
//      * Ссылка - СправочникСсылка.КВП_Счетчики
//      * Код - Строка
//      * Код - Наименование
//      * ВидУслуги - СправочникСсылка.КВП_Услуги
//      * Разрядность - Число
//      * Коэффициент - Число
//      * Модель
//      * Идентификатор - Строка
//      * ЗаводскойНомер - Строка
//      * СпособРегистрацииПоказаний
//      * Тарифность
//      * ПризнакВыходногоСчетчика - Булево
//      * Марка
//      * МежпроверочныйИнтервал
//      * ДатаВводаВЭксплуатацию - Дата
//      * ДатаВводаВЭксплуатацию - ДатаПервойПоверки
//      * ИспользуетсяДляПерерасчетаРасходовНаОплатуСОИ - Булево
//      * ПринимаетПоказанияОтСистемыСбораПоказанийСчетчиков - Булево
//      * ГП_ТолькоДляКанализации - Булево
//      * ГП_ЭтоПлатаЗаВодоснабжениеОИ - Булево
//      * ГП_КоличествоПоСреднему - Число
//      * ГП_ЭтоВиртуальныйСчетчик - Булево
//      * ГП_ЭтоСчетчикПотерьВоды - Булево
//      * ГП_ЭтоСчетчикДляПерерасчетов - Булево
//      * ГП_ИдентификаторБП77 - Строка
//      * ГП_ДатаУстановки - Дата
//      * ГП_Комментарий - Строка
//      * ГП_СозданАвтоматически - Булево
Функция ПолучитьВсеФизическиеСчетчики(Знач КакМассив = Ложь) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	Счетчики.Ссылка КАК Ссылка
        |	,&ПоляДанных
        |ИЗ
        |	Справочник.КВП_Счетчики КАК Счетчики
        |ГДЕ
        |	ИСТИНА
        |	И Счетчики.ЭтоГруппа = ЛОЖЬ
        |	И Счетчики.ПометкаУдаления = ЛОЖЬ
        |	И Счетчики.ГП_ЭтоВиртуальныйСчетчик = ЛОЖЬ
        |";

    ПоляДанных =
        "	Счетчики.Код КАК Код,
        |	Счетчики.Наименование КАК Наименование,
        |	Счетчики.ВидУслуги КАК ВидУслуги,
        |	Счетчики.Разрядность КАК Разрядность,
        |	Счетчики.Коэффициент КАК Коэффициент,
        |	Счетчики.Модель КАК Модель,
        |	Счетчики.Идентификатор КАК Идентификатор,
        |	Счетчики.ЗаводскойНомер КАК ЗаводскойНомер,
        |	Счетчики.СпособРегистрацииПоказаний КАК СпособРегистрацииПоказаний,
        |	Счетчики.Тарифность КАК Тарифность,
        |	Счетчики.ПризнакВыходногоСчетчика КАК ПризнакВыходногоСчетчика,
        |	Счетчики.Марка КАК Марка,
        |	Счетчики.МежпроверочныйИнтервал КАК МежпроверочныйИнтервал,
        |	Счетчики.ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию,
        |	Счетчики.ДатаПервойПоверки КАК ДатаПервойПоверки,
        |	Счетчики.ИспользуетсяДляПерерасчетаРасходовНаОплатуСОИ КАК ИспользуетсяДляПерерасчетаРасходовНаОплатуСОИ,
        |	Счетчики.ПринимаетПоказанияОтСистемыСбораПоказанийСчетчиков КАК ПринимаетПоказанияОтСистемыСбораПоказанийСчетчиков,
        |	Счетчики.ГП_ТолькоДляКанализации КАК ГП_ТолькоДляКанализации,
        |	Счетчики.ГП_ЭтоПлатаЗаВодоснабжениеОИ КАК ГП_ЭтоПлатаЗаВодоснабжениеОИ,
        |	Счетчики.ГП_КоличествоПоСреднему КАК ГП_КоличествоПоСреднему,
        |	Счетчики.ГП_ЭтоВиртуальныйСчетчик КАК ГП_ЭтоВиртуальныйСчетчик,
        |	Счетчики.ГП_ЭтоСчетчикПотерьВоды КАК ГП_ЭтоСчетчикПотерьВоды,
        |	Счетчики.ГП_ЭтоСчетчикДляПерерасчетов КАК ГП_ЭтоСчетчикДляПерерасчетов,
        |	Счетчики.ГП_ИдентификаторБП77 КАК ГП_ИдентификаторБП77,
        |	Счетчики.ГП_ДатаУстановки КАК ГП_ДатаУстановки,
        |	Счетчики.ГП_Комментарий КАК ГП_Комментарий,
        |	Счетчики.ГП_СозданАвтоматически КАК ГП_СозданАвтоматически";

    Если КакМассив = Ложь Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, ",&ПоляДанных", ПоляДанных);
    Иначе
        Запрос.Текст = СтрЗаменить(Запрос.Текст, ",&ПоляДанных", "");
    КонецЕсли;

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();

    Если КакМассив = Ложь Тогда
        Возврат РезультатФункции;
    Иначе
        Возврат РезультатФункции.ВыгрузитьКолонку("Ссылка");
    КонецЕсли;
КонецФункции // Гарант+ Килипенко 11.11.2024 [F00230766] Перенос признака ТолькоДляКанализации --

// Параметры:
//  ПрефиксНаименования - Строка
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Ссылка - СправочникСсылка.КВП_Счетчики
//      * Услуга - СправочникСсылка.КВП_Услуги
//      * Наименование - Строка
Функция ПолучитьВиртуальныеСчетчикиПоПрефиксуНаименования(Знач ПрефиксНаименования) Экспорт
    ШаблонПрефиксНаименования = СтрЗаменитьПоРегулярномуВыражению(ПрефиксНаименования, "([\[\]])", "~$1") + "%";

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	Счетчики.Ссылка КАК Ссылка,
        |	Счетчики.ВидУслуги КАК Услуга,
        |	Счетчики.Наименование КАК Наименование
        |ИЗ
        |	Справочник.КВП_Счетчики КАК Счетчики
        |ГДЕ
        |	Счетчики.ЭтоГруппа = ЛОЖЬ
        |	И Счетчики.ПометкаУдаления = ЛОЖЬ
        |	И Счетчики.ГП_ЭтоВиртуальныйСчетчик = ИСТИНА
        |	И Счетчики.Наименование ПОДОБНО &ШаблонПрефиксНаименования СПЕЦСИМВОЛ ""~""
        |";

    Запрос.УстановитьПараметр("ШаблонПрефиксНаименования", ШаблонПрефиксНаименования);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  ПрефиксНаименования - Строка
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоПомеченных - Число
//      * ТекстСообщения - Строка, Неопределено
Функция УдалитьВиртуальныеСчетчикиПоПрефиксуНаименования(Знач ПрефиксНаименования) Экспорт
    РезультатФункции = Новый Структура("Успех, КоличествоПомеченных, ТекстСообщения", Истина, 0);

    СчетчикиДляУдаления = ПолучитьВиртуальныеСчетчикиПоПрефиксуНаименования(ПрефиксНаименования);

    НачатьТранзакцию();
    Попытка
        Для Каждого СтрокаДанных Из СчетчикиДляУдаления Цикл
            СчетчикОбъект = СтрокаДанных.Ссылка.ПолучитьОбъект();
            СчетчикОбъект.УстановитьПометкуУдаления(Истина);
        КонецЦикла;

        ЗафиксироватьТранзакцию();

    Исключение
        ОтменитьТранзакцию();

        РезультатФункции.Успех = Ложь;
        РезультатФункции.КоличествоПомеченных = 0;
        РезультатФункции.ТекстСообщения = СтрШаблон(
                "Ошибка при удалении виртуальных счетчиков.
                |Информация: %1", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции

// Гарант+ Килипенко 19.11.2024 [F00231121] История количества по среднему счетчиков ++
//
// Параметры:
//  ПриборУчета - СправочникСсылка.КВП_Счетчики
//  ДатаАктуальности - Дата, Неопределено
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * Значение - Число
Функция ПолучитьТекущееКоличествоПоСреднемуСчетчика(Знач ПриборУчета, Знач ДатаАктуальности = Неопределено) Экспорт
    РезультатФункции = Новый Структура("Успех, Значение", Истина);

    ДанныеСчетчиков = ПолучитьИсториюКоличествоПоСреднемуСчетчиков(
            ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПриборУчета), ДатаАктуальности);

    Если ДанныеСчетчиков.Количество() = 0 Тогда
        РезультатФункции.Успех = Ложь;
        Возврат РезультатФункции;
    КонецЕсли;

    РезультатФункции.Значение = ДанныеСчетчиков[0].КоличествоПоСреднему;
    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 19.11.2024 [F00231121] История количества по среднему счетчиков --

// Гарант+ Килипенко 19.11.2024 [F00231121] История количества по среднему счетчиков ++
//
// Параметры:
//  ПриборыУчета - Массив из СправочникСсылка.КВП_Счетчики, Неопределено
//  ДатаАктуальности - Дата, Неопределено
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Период - Дата
//      * ПриборУчета - СправочникСсылка.КВП_Счетчики
//      * КоличествоПоСреднему - Число
Функция ПолучитьИсториюКоличествоПоСреднемуСчетчиков(Знач ПриборыУчета = Неопределено, ДатаАктуальности = Неопределено) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ИсторияЗначенийПоСреднемуСчетчиков.Период КАК Период,
        |	ИсторияЗначенийПоСреднемуСчетчиков.ПриборУчета КАК ПриборУчета,
        |	ИсторияЗначенийПоСреднемуСчетчиков.КоличествоПоСреднему КАК КоличествоПоСреднему
        |ИЗ
        |	РегистрСведений.ГП_ИсторияЗначенийПоСреднемуСчетчиков.СрезПоследних(&ДатаАктуальности, ) КАК ИсторияЗначенийПоСреднемуСчетчиков
        |ГДЕ
        |	ИСТИНА
        |	И ИсторияЗначенийПоСреднемуСчетчиков.ПриборУчета В(&ПриборыУчета)
        |";

    Если ДатаАктуальности = Неопределено Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДатаАктуальности", "");
    Иначе
        Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
    КонецЕсли;

    Если ПриборыУчета = Неопределено Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ИсторияЗначенийПоСреднемуСчетчиков.ПриборУчета В(&ПриборыУчета)", "");
    Иначе
        Запрос.УстановитьПараметр("ПриборыУчета", ПриборыУчета);
    КонецЕсли;

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 19.11.2024 [F00231121] История количества по среднему счетчиков --

// Гарант+ Килипенко 09.12.2024 [F00232154] Загрузка заводских номеров счетчиков и выгрузка в старт ++
//
// Заполняет заводские номера счетчиков из значения поля `ГП_Комментарий`
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * ТекстСообщения - Строка, Неопределено
//      * ИзмененныеСчетчики - Массив из СправочникСсылка.КВП_Счетчики
Функция ЗаполнитьЗаводскиеНомераСчетчиковИзКомментария() Экспорт
    РезультатФункции = Новый Структура("Успех, ИзмененныеСчетчики, ТекстСообщения", Истина, Новый Массив);

    ДанныеСчетчиков = ПолучитьДанныеДляЗаполненияЗаводскихНомеровСчетчика();

    // Запись данных
    НачатьТранзакцию();
    Попытка
        Для Каждого СтрокаДанных Из ДанныеСчетчиков Цикл
            Если СтрокаДанных.ЗаводскойНомер = СтрокаДанных.ЗаводскойНомерКомментария Тогда
                Продолжить; // Нет изменений
            КонецЕсли;

            СчетчикОбъект = СтрокаДанных.Счетчик.ПолучитьОбъект();
            СчетчикОбъект.ЗаводскойНомер = СтрокаДанных.ЗаводскойНомерКомментария;

            СчетчикОбъект.Записать();
            РезультатФункции.ИзмененныеСчетчики.Добавить(СчетчикОбъект.Ссылка);
        КонецЦикла;

        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();

        РезультатФункции.Успех = Ложь;
        РезультатФункции.ИзмененныеСчетчики.Очистить();
        РезультатФункции.ТекстСообщения = СтрШаблон(
            "Ошибка при заполнении заводских номеров счетчиков.
            |Информация: %1", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 09.12.2024 [F00232154] Загрузка заводских номеров счетчиков и выгрузка в старт --

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 11.09.2024 [F00227694] Доработка документа ввод показаний счетчика --

// Параметры:
//  СтрокаДанных - Строка
// Возвращаемое значение:
//   - Строка
Функция СтрокаСодержитПоказанияСчетчиков(Знач СтрокаДанных) Экспорт
    ШаблонПоиска = ПолучитьШаблонПоискаПоказанийСчетчиков();
    РезультатПоиска = СтрНайтиПоРегулярномуВыражению(СтрокаДанных, ШаблонПоиска);

    Возврат РезультатПоиска.НачальнаяПозиция > 0;
КонецФункции

// Параметры:
//  СтрокаДанных - Строка
// Возвращаемое значение:
//   - Структура
//      * Успех - Булево
//      * Значение - Строка, Неопределено
Функция УдалитьПоказанияСчетчиковИзСтроки(Знач СтрокаДанных) Экспорт
    РезультатФункции = Новый Структура("Успех, Значение", Ложь);

    ШаблонПоиска = ПолучитьШаблонПоискаПоказанийСчетчиков(Ложь);
    РезультатЗамены = СтрЗаменитьПоРегулярномуВыражению(СтрокаДанных, ШаблонПоиска, "");

    РезультатФункции.Успех = СтрокаДанных <> РезультатЗамены;
    Если РезультатФункции.Успех = Истина Тогда
        РезультатФункции.Значение = РезультатЗамены;
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

// Возвращаемое значение:
//   - Строка
Функция ПолучитьШаблонПоискаПоказанийСчетчиков(Знач Строгий = Ложь) Экспорт
    ШаблонПоиска = "\s*,*\s*Показания\s+счетчиков[:]\s+([0-9\s,\.]*\s+-\s+[0-9\s,\.]+(;\s+)?)+\s*";

    Если Строгий = Истина Тогда
        Возврат ШаблонПоиска + "$";
    КонецЕсли;

    Возврат ШаблонПоиска;
КонецФункции

// Гарант+ Килипенко 18.11.2024 [F00231124] Отбор счетчиков по договорам ++
#Область СлужебныеПроцедурыИФункции

// Параметры:
//  НаДатуАктуальности - Булево
// Возвращаемое значение:
//  - Строка
Функция ПолучитьТекстЗапросаПриборовУчетаДоговора(Знач НаДатуАктуальности = Истина)
    ТекстЗапроса =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	СведенияДляВзаиморасчетовПоЛС.Период КАК Период,
        |	СведенияДляВзаиморасчетовПоЛС.ЛицевойСчет КАК ЛицевойСчет,
        |	СведенияДляВзаиморасчетовПоЛС.Договор КАК Договор,
        |	СведенияДляВзаиморасчетовПоЛС.Контрагент КАК Контрагент
        |ПОМЕСТИТЬ ВТ_СведенияДляВзаиморасчетовПоЛС
        |ИЗ
        |	РегистрСведений.УПЖКХ_СведенияДляВзаиморасчетовПоЛС.СрезПоследних(&ДатаАктуальности, ) КАК СведенияДляВзаиморасчетовПоЛС
        |ГДЕ
        |	ИСТИНА
        |	И СведенияДляВзаиморасчетовПоЛС.Договор В(&ДоговорыОтбора)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ИсторияСостоянийПриборовУчета.Период КАК Период,
        |	ИсторияСостоянийПриборовУчета.Регистратор КАК Регистратор,
        |	ИсторияСостоянийПриборовУчета.НомерСтроки КАК НомерСтроки,
        |	ВЫРАЗИТЬ(ИсторияСостоянийПриборовУчета.Объект КАК Справочник.КВП_ЛицевыеСчета) КАК ЛицевойСчет,
        |	ЕСТЬNULL(ВЫРАЗИТЬ(ИсторияСостоянийПриборовУчета.Объект КАК Справочник.КВП_ЛицевыеСчета).Адрес, ЗНАЧЕНИЕ(Справочник.УПЖКХ_Помещения.ПустаяСсылка)) КАК Помещение,
        |	ЕСТЬNULL(ВЫРАЗИТЬ(ИсторияСостоянийПриборовУчета.Объект КАК Справочник.КВП_ЛицевыеСчета).Адрес.Владелец, ЗНАЧЕНИЕ(Справочник.КВП_Здания.ПустаяСсылка)) КАК Здание,
        |	ИсторияСостоянийПриборовУчета.ПриборУчета КАК ПриборУчета,
        |	ИсторияСостоянийПриборовУчета.Действует КАК Действует,
        |	ИсторияСостоянийПриборовУчета.ДатаНачала КАК ДатаНачала,
        |	ИсторияСостоянийПриборовУчета.ДатаПоверки КАК ДатаПоверки,
        |	ИсторияСостоянийПриборовУчета.НомерПломбы КАК НомерПломбы,
        |	ИсторияСостоянийПриборовУчета.ПричинаОтключения КАК ПричинаОтключения
        |ПОМЕСТИТЬ ВТ_ИсторияСостоянийПриборовУчетаЛС
        |ИЗ
        |	РегистрСведений.УПЖКХ_ИсторияСостоянийПриборовУчета.СрезПоследних(&ДатаАктуальности, ) КАК ИсторияСостоянийПриборовУчета
        |ГДЕ
        |	ИсторияСостоянийПриборовУчета.Объект ССЫЛКА Справочник.КВП_ЛицевыеСчета
        |	И ИсторияСостоянийПриборовУчета.Объект <> ЗНАЧЕНИЕ(Справочник.КВП_ЛицевыеСчета.ПустаяСсылка)
        |	И ИсторияСостоянийПриборовУчета.Объект В
        |			(ВЫБРАТЬ
        |				Т.ЛицевойСчет
        |			ИЗ
        |				ВТ_СведенияДляВзаиморасчетовПоЛС КАК Т)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ИсторияСостоянийПриборовУчета.Период КАК Период,
        |	ИсторияСостоянийПриборовУчета.Регистратор КАК Регистратор,
        |	ИсторияСостоянийПриборовУчета.НомерСтроки КАК НомерСтроки,
        |	ЗНАЧЕНИЕ(Справочник.КВП_ЛицевыеСчета.ПустаяСсылка) КАК ЛицевойСчет,
        |	ЗНАЧЕНИЕ(Справочник.УПЖКХ_Помещения.ПустаяСсылка) КАК Помещение,
        |	ВЫРАЗИТЬ(ИсторияСостоянийПриборовУчета.Объект КАК Справочник.КВП_Здания) КАК Здание,
        |	ИсторияСостоянийПриборовУчета.ПриборУчета КАК ПриборУчета,
        |	ИсторияСостоянийПриборовУчета.Действует КАК Действует,
        |	ИсторияСостоянийПриборовУчета.ДатаНачала КАК ДатаНачала,
        |	ИсторияСостоянийПриборовУчета.ДатаПоверки КАК ДатаПоверки,
        |	ИсторияСостоянийПриборовУчета.НомерПломбы КАК НомерПломбы,
        |	ИсторияСостоянийПриборовУчета.ПричинаОтключения КАК ПричинаОтключения
        |ПОМЕСТИТЬ ВТ_ИсторияСостоянийПриборовУчетаЗдания
        |ИЗ
        |	РегистрСведений.УПЖКХ_ИсторияСостоянийПриборовУчета.СрезПоследних(&ДатаАктуальности, ) КАК ИсторияСостоянийПриборовУчета
        |ГДЕ
        |	ИсторияСостоянийПриборовУчета.Объект ССЫЛКА Справочник.КВП_Здания
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ИсторияСостоянийПриборовУчета.Период КАК Период,
        |	ИсторияСостоянийПриборовУчета.Регистратор КАК Регистратор,
        |	ИсторияСостоянийПриборовУчета.НомерСтроки КАК НомерСтроки,
        |	ЗНАЧЕНИЕ(Справочник.КВП_ЛицевыеСчета.ПустаяСсылка) КАК ЛицевойСчет,
        |	ВЫРАЗИТЬ(ИсторияСостоянийПриборовУчета.Объект КАК Справочник.УПЖКХ_Помещения) КАК Помещение,
        |	ЗНАЧЕНИЕ(Справочник.КВП_Здания.ПустаяСсылка) КАК Здание,
        |	ИсторияСостоянийПриборовУчета.ПриборУчета КАК ПриборУчета,
        |	ИсторияСостоянийПриборовУчета.Действует КАК Действует,
        |	ИсторияСостоянийПриборовУчета.ДатаНачала КАК ДатаНачала,
        |	ИсторияСостоянийПриборовУчета.ДатаПоверки КАК ДатаПоверки,
        |	ИсторияСостоянийПриборовУчета.НомерПломбы КАК НомерПломбы,
        |	ИсторияСостоянийПриборовУчета.ПричинаОтключения КАК ПричинаОтключения
        |ПОМЕСТИТЬ ВТ_ИсторияСостоянийПриборовУчетаПомещения
        |ИЗ
        |	РегистрСведений.УПЖКХ_ИсторияСостоянийПриборовУчета.СрезПоследних(&ДатаАктуальности, ) КАК ИсторияСостоянийПриборовУчета
        |ГДЕ
        |	ИсторияСостоянийПриборовУчета.Объект ССЫЛКА Справочник.УПЖКХ_Помещения
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
        |	ДоговорыКонтрагентов.Владелец КАК Контрагент
        |ПОМЕСТИТЬ ВТ_ДоговорыКонтрагентов
        |ИЗ
        |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
        |ГДЕ
        |	ДоговорыКонтрагентов.ЭтоГруппа = ЛОЖЬ
        |	И ДоговорыКонтрагентов.Владелец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
        |	И ДоговорыКонтрагентов.Владелец В
        |			(ВЫБРАТЬ
        |				Т.Контрагент
        |			ИЗ
        |				ВТ_СведенияДляВзаиморасчетовПоЛС КАК Т)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	ВТ_ИсторияСостоянийПриборовУчетаЛС.ПриборУчета КАК ПриборУчета,
        |	ВТ_СведенияДляВзаиморасчетовПоЛС.Договор КАК Договор
        |ИЗ
        |	ВТ_ИсторияСостоянийПриборовУчетаЛС КАК ВТ_ИсторияСостоянийПриборовУчетаЛС
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СведенияДляВзаиморасчетовПоЛС КАК ВТ_СведенияДляВзаиморасчетовПоЛС
        |		ПО ВТ_ИсторияСостоянийПриборовУчетаЛС.ЛицевойСчет = ВТ_СведенияДляВзаиморасчетовПоЛС.ЛицевойСчет
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДоговорыКонтрагентов КАК ВТ_ДоговорыКонтрагентов
        |		ПО (ВТ_СведенияДляВзаиморасчетовПоЛС.Контрагент = ВТ_ДоговорыКонтрагентов.Контрагент)
        |";

    Если НаДатуАктуальности = Ложь Тогда
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДатаАктуальности", "");
    КонецЕсли;

    Возврат ТекстЗапроса;
КонецФункции

// Гарант+ Килипенко 09.12.2024 [F00232154] Загрузка заводских номеров счетчиков и выгрузка в старт ++
//
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Счетчик - СправочникСсылка.Счетчики
//      * ЗаводскойНомер - Строка - Исходный номер
//      * ЗаводскойНомерКомментария - Строка - Номер полученный из комментария
//      * Комментарий - Строка
Функция ПолучитьДанныеДляЗаполненияЗаводскихНомеровСчетчика()
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	Счетчики.Ссылка КАК Ссылка,
        |	Счетчики.Наименование КАК Наименование,
        |	Счетчики.ВидУслуги КАК ВидУслуги,
        |	Счетчики.Модель КАК Модель,
        |	Счетчики.ЗаводскойНомер КАК ЗаводскойНомер,
        |	ВЫРАЗИТЬ("""" КАК СТРОКА(50)) КАК ЗаводскойНомерКомментария,
        |	Счетчики.СпособРегистрацииПоказаний КАК СпособРегистрацииПоказаний,
        |	Счетчики.Тарифность КАК Тарифность,
        |	Счетчики.ПризнакВыходногоСчетчика КАК ПризнакВыходногоСчетчика,
        |	Счетчики.ИспользоватьТемпературныйКоэффициент КАК ИспользоватьТемпературныйКоэффициент,
        |	Счетчики.Марка КАК Марка,
        |	Счетчики.МежпроверочныйИнтервал КАК МежпроверочныйИнтервал,
        |	Счетчики.ДатаОпломбированияЗаводом КАК ДатаОпломбированияЗаводом,
        |	Счетчики.ДатаВводаВЭксплуатациюОтличаетсяОтДатыУстановки КАК ДатаВводаВЭксплуатациюОтличаетсяОтДатыУстановки,
        |	Счетчики.ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию,
        |	Счетчики.ДатаПервойПоверки КАК ДатаПервойПоверки,
        |	Счетчики.ИспользуетсяДляПерерасчетаРасходовНаОплатуСОИ КАК ИспользуетсяДляПерерасчетаРасходовНаОплатуСОИ,
        |	Счетчики.ГП_ТолькоДляКанализации КАК ГП_ТолькоДляКанализации,
        |	Счетчики.ГП_ЭтоПлатаЗаВодоснабжениеОИ КАК ГП_ЭтоПлатаЗаВодоснабжениеОИ,
        |	Счетчики.ГП_КоличествоПоСреднему КАК ГП_КоличествоПоСреднему,
        |	Счетчики.ГП_ЭтоВиртуальныйСчетчик КАК ГП_ЭтоВиртуальныйСчетчик,
        |	Счетчики.ГП_ЭтоСчетчикПотерьВоды КАК ГП_ЭтоСчетчикПотерьВоды,
        |	Счетчики.ГП_ЭтоСчетчикДляПерерасчетов КАК ГП_ЭтоСчетчикДляПерерасчетов,
        |	Счетчики.ГП_ИдентификаторБП77 КАК ГП_ИдентификаторБП77,
        |	Счетчики.ГП_ДатаУстановки КАК ГП_ДатаУстановки,
        |	Счетчики.ГП_Комментарий КАК ГП_Комментарий,
        |	Счетчики.ГП_СозданАвтоматически КАК ГП_СозданАвтоматически
        |ИЗ
        |	Справочник.КВП_Счетчики КАК Счетчики
        |ГДЕ
        |	Счетчики.ЭтоГруппа = ЛОЖЬ
        |	И Счетчики.ПометкаУдаления = ЛОЖЬ
        |	И ВЫРАЗИТЬ(Счетчики.ГП_Комментарий КАК СТРОКА(500)) <> """"
        |";

    РезультатЗапроса = Запрос.Выполнить();
    ДанныеСчетчиков = РезультатЗапроса.Выгрузить();

    // Расшифровка и заполнение заводских номеров счетчиков
    Для Каждого СтрокаДанных Из ДанныеСчетчиков Цикл
        СтруктураНомера = ГП_МиграцияПриборовУчета.ПолучитьЗаводскойНомерИзКомментарияБП77(СтрокаДанных.ГП_Комментарий);
        Если СтруктураНомера.Успех = Истина Тогда
            СтрокаДанных.ЗаводскойНомерКомментария =
                ?(СтрокаДанных.ЗаводскойНомер <> СтруктураНомера.Номер, СтруктураНомера.Номер, СтрокаДанных.ЗаводскойНомер);
        КонецЕсли;
    КонецЦикла;

    // Фильтрация данных для заполнения заводских номеров счетчиков
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	Счетчики.Ссылка КАК Счетчик,
        |	Счетчики.ЗаводскойНомер КАК ЗаводскойНомер,
        |	Счетчики.ЗаводскойНомерКомментария КАК ЗаводскойНомерКомментария,
        |	Счетчики.ГП_Комментарий КАК Комментарий
        |ПОМЕСТИТЬ ВТ_Счетчики
        |ИЗ
        |	&ДанныеСчетчиков КАК Счетчики
        |ГДЕ
        |	Счетчики.ЗаводскойНомерКомментария <> Счетчики.ЗаводскойНомер
        |;
        |
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   *
        |ИЗ
        |   ВТ_Счетчики КАК ВТ_Счетчики
        |";

    Запрос.УстановитьПараметр("ДанныеСчетчиков", ДанныеСчетчиков);
    РезультатЗапроса = Запрос.Выполнить();
    ДанныеСчетчиков = РезультатЗапроса.Выгрузить();

    Возврат ДанныеСчетчиков;
КонецФункции // Гарант+ Килипенко 09.12.2024 [F00232154] Загрузка заводских номеров счетчиков и выгрузка в старт --

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 18.11.2024 [F00231124] Отбор счетчиков по договорам --
