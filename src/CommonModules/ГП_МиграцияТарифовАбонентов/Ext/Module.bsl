// Гарант+ Килипенко 16.08.2024 [F00226620] назначение тарифов ++
#Область ПрограммныйИнтерфейс

// Выполняет чтение данных тарифов объектов абонентов (из БП 7.7) из файла и записывает
//  данные в регистр `ГП_ТарифыОбъектовАбонентовБП77`
// Параметры:
//  ПараметрыЗагрузки - Структура
//      * ДвоичныеДанныеФайла - ДвоичныеДанные
//  АдресХранилища - Строка, Неопределено
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанных - Число
//      * ТекстСообщения - Строка, Неопределено
//  - Неопределено
Функция ЗагрузитьДанныеТарифовОбъектовАбонентовВРегистр(ПараметрыЗагрузки, АдресХранилища = Неопределено) Экспорт
    РезультатФункции = Новый Структура("Успех, КоличествоЗаписанных, ТекстСообщения", Ложь, 0);

    // Чтение данных из файла XML
    РезультатЧтенияДанных = ГП_МиграцияОбщегоНазначения.ПрочитатьДанныеИзФайлаXML(
            ПараметрыЗагрузки.ДвоичныеДанныеФайла, "ТарифОбъектаАбонента");
    Если РезультатЧтенияДанных.Успех = Ложь Тогда
        РезультатФункции.ТекстСообщения = РезультатЧтенияДанных.ТекстСообщения;
        Возврат ГП_МиграцияОбщегоНазначения.ПоместитьВХранилищеИВернуть(РезультатФункции, АдресХранилища);
    КонецЕсли;

    // Проверка структуры данных
    Если ТипЗнч(РезультатЧтенияДанных.Данные) <> Тип("СписокXDTO") Тогда
        РезультатФункции.ТекстСообщения = "Ошибка структуры данных.";
        Возврат ГП_МиграцияОбщегоНазначения.ПоместитьВХранилищеИВернуть(РезультатФункции, АдресХранилища);
    КонецЕсли;

    // Запись данных в регистр
    ТарифыОбъектовАбонентовБП77 = РезультатЧтенияДанных.Данные;
    РезультатЗаписи = ЗаписатьДанныеТарифовОбъектовАбонентовВРегистр(ТарифыОбъектовАбонентовБП77);

    // Формирование результата
    РезультатФункции.Успех = РезультатЗаписи.Успех;
    РезультатФункции.ТекстСообщения = РезультатЗаписи.СообщениеОбОшибке;
    РезультатФункции.КоличествоЗаписанных = РезультатЗаписи.КоличествоЗаписанных;

    Возврат ГП_МиграцияОбщегоНазначения.ПоместитьВХранилищеИВернуть(РезультатФункции, АдресХранилища);
КонецФункции

// Создает документы установки тарифов для лицевых счетов (один документ для каждой услуги) по данным БП77
// Параметры:
//  МассивВидовУслугБП77 - Массив из Строка
//  ОрганизацияСсылка - СправочникСсылка.Организации, Неопределено
//  ДатаСоздания - Дата, Неопределено - по умолчанию 01.01.2024
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * СообщенияОбОшибках - Массив из Строка
//      * ТекстСообщения - Строка - Текст сообщения об ошибке при выполнении транзакции записи документов
//      * СозданныеДокументы - Массив из ДокументСсылка.КВП_УстановкаТарифов
Функция СоздатьДокументыУстановкиТарифамиПоДаннымБП77(
        Знач МассивВидовУслугБП77 = Неопределено, Знач ОрганизацияСсылка = Неопределено, Знач ДатаСоздания = Неопределено) Экспорт

    РезультатФункции = Новый Структура(
            "Успех, СообщенияОбОшибках, ТекстСообщения, СозданныеДокументы",
            Истина, Новый Массив, "", Новый Массив);

    // Услуги для установки тарифов по умолчанию
    Если МассивВидовУслугБП77 = Неопределено Тогда
        МассивВидовУслугБП77 = Новый Массив;
        МассивВидовУслугБП77.Добавить("ХолоднаяВода");
        МассивВидовУслугБП77.Добавить("ГорячаяВода");
        МассивВидовУслугБП77.Добавить("Канализация");
        МассивВидовУслугБП77.Добавить("ХолоднаяВодаВодоотвод");
        МассивВидовУслугБП77.Добавить("ПодогревХВ");
        МассивВидовУслугБП77.Добавить("НегативноеВоздействие");
    КонецЕсли;

    // Сбор данных для заполнения
    ДанныеДляЗаполнения = ПолучитьДанныеЗаполненияУстановкиТарифов();
    Если ДанныеДляЗаполнения.Успех = Ложь Тогда
        РезультатФункции.Успех = Ложь;
        Возврат РезультатФункции; // Отсутствуют данные для заполнения
    КонецЕсли;

    // Соответствие для определения кода услуги
    КодыСоответствияУслуг = ГП_МиграцияПриборовУчета.ПолучитьСоответствиеКодовУслугСчетчиковБП77();
    //! Уточнить! Замена услуги `Водоотведения` на `Канализацию`
    //  (По ТЗ F00225713 назначался код 00-004, по ТЗ F00226285 код: "00-008")
    КодыСоответствияУслуг["Канализация"] = "00-008";

    ОрганизацияСсылка = ?(ОрганизацияСсылка = Неопределено,
            УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию(), ОрганизацияСсылка);
    ДатаСоздания = ?(ДатаСоздания = Неопределено, Дата(2024, 1, 1), ДатаСоздания); // Константа по условиям ТЗ

    // Дневной и Общий тарифы (дано по ТЗ)
    ВидыТарифовДляУстановки = Новый Массив;
    ВидыТарифовДляУстановки.Добавить(Перечисления.КВП_ВидыТарифов.Дневной);
    ВидыТарифовДляУстановки.Добавить(Перечисления.КВП_ВидыТарифов.Общий);

    // Создание и заполнение документа для указанных услуг
    НачатьТранзакцию();
    Попытка
        Для Каждого ВидУслуги Из МассивВидовУслугБП77 Цикл
            Если ДанныеДляЗаполнения.Свойство(ВидУслуги) = Ложь Тогда
                РезультатФункции.СообщенияОбОшибках.Добавить(СтрШаблон("Вид услуги имеет неправильное значение: ""%1"".", ВидУслуги));
                Продолжить; // Виду услуги указан не правильно
            КонецЕсли;

            Если ДанныеДляЗаполнения[ВидУслуги].Строки.Количество() = 0 Тогда
                Продолжить; // Нет данных для заполнения
            КонецЕсли;

            // Получение услуги для назначения тарифов
            КодТекущейУслуги = КодыСоответствияУслуг[ВидУслуги];
            Если КодТекущейУслуги = Неопределено Тогда
                РезультатФункции.СообщенияОбОшибках.Добавить(СтрШаблон("Не найдено соответствие для услуги: ""%1"".", ВидУслуги));
                Продолжить; // Не найдено соответствие для вида услуги
            КонецЕсли;

            СтруктураТекущейУслуги = ГП_МиграцияОбщегоНазначения.ПолучитьУслугуПоКоду(КодТекущейУслуги);
            Если ТипЗнч(СтруктураТекущейУслуги) <> Тип("Структура") ИЛИ ЗначениеЗаполнено(СтруктураТекущейУслуги.Ссылка) = Ложь Тогда
                РезультатФункции.СообщенияОбОшибках.Добавить(СтрШаблон("Не найдена услуга с кодом: ""%1"".", КодТекущейУслуги));
                Продолжить; // Не найдена услуга по коду
            КонецЕсли;

            // Создание документов для всех тарифов услуги (обход дерева значений)
            Для Каждого СтрокаТарифаДляЗаполнения Из ДанныеДляЗаполнения[ВидУслуги].Строки Цикл
                Если СтрокаТарифаДляЗаполнения.Строки.Количество() = 0 Тогда
                    Продолжить;
                КонецЕсли;

                // Создаем новый элемент документа
                НовыйДокументОбъект = Документы.КВП_УстановкаТарифов.СоздатьДокумент();
                НовыйДокументОбъект.Дата = ДатаСоздания;
                НовыйДокументОбъект.Организация = ОрганизацияСсылка;
                НовыйДокументОбъект.ВидОперации = Перечисления.УПЖКХ_ВидыОперацийУстановкиТарифов.УстановкаТарифа;
                НовыйДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
                НовыйДокументОбъект.Комментарий = СтрШаблон(
                        "#создан автоматически для вида услуги: ""%1"", для вида тарифа: ""%2"" БП 7.7. (ГарантПлюс)",
                        ВидУслуги, СтрокаТарифаДляЗаполнения.ТарифНаименование);
                НовыйДокументОбъект.Услуга = СтруктураТекущейУслуги.Ссылка;

                // Добавление тарифов (ТЧ СписокУслуг)
                Для Каждого ВидТарифаУстановки Из ВидыТарифовДляУстановки Цикл
                    НоваяСтрокаТарифа = НовыйДокументОбъект.СписокУслуг.Добавить();
                    НоваяСтрокаТарифа.ВидТарифа = ВидТарифаУстановки;
                    НоваяСтрокаТарифа.ИспользоватьФормулу = Ложь;
                    НоваяСтрокаТарифа.Тариф = СтрокаТарифаДляЗаполнения.Тариф;
                КонецЦикла;

                // Заполнение списка объектов (зданий, помещений ТЧ СписокОбъектов)
                Для Каждого ДанныеДляЗаполненияСпискаОбъектов Из СтрокаТарифаДляЗаполнения.Строки Цикл
                    НоваяСтрокаОбъекты = НовыйДокументОбъект.СписокОбъектов.Добавить();
                    НоваяСтрокаОбъекты.Здание = ДанныеДляЗаполненияСпискаОбъектов.Здание;
                    НоваяСтрокаОбъекты.Помещение = ДанныеДляЗаполненияСпискаОбъектов.Помещение;
                КонецЦикла;

                // Записываем документ
                НовыйДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
                РезультатФункции.СозданныеДокументы.Добавить(НовыйДокументОбъект.Ссылка);
            КонецЦикла;
        КонецЦикла;

        ЗафиксироватьТранзакцию(); // Записано успешно
    Исключение
        ОтменитьТранзакцию();

        ОбщаяЧастьСообщения = "Ошибка при записи документов Установка тарифов.";
        СтруктураОшибки = ГП_МиграцияОбщегоНазначения.ЗаписатьОшибкуВЖурнал(
                ОбщаяЧастьСообщения, ИнформацияОбОшибке(), Ложь, Истина);

        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = СтрШаблон(
                "%1
                |Информация об ошибке: %2",
                ОбщаяЧастьСообщения,
                СтруктураОшибки.КраткоеПредставлениеОшибки);

        РезультатФункции.СозданныеДокументы.Очистить();
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции

// Гарант+ Килипенко 16.09.2024 [F00227727] Доработать заполнение документа начисление по приборам учета ++
//
// Выполняет создание отсутствующих элементов справочника lc_ВидыТарифов по данным БП77
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * СозданныеЭлементы - Массив из СправочникСсылка.lc_ВидыТарифов
//      * ТекстСообщения - Строка, Неопределено
Функция СоздатьВидыТарифовПотребителей() Экспорт
    РезультатФункции = Новый Структура(
            "Успех, СозданныеЭлементы, ТекстСообщения",
            Истина, Новый Массив);

    ДанныеДляЗаполнения = ПолучитьДанныеЗаполненияВидовТарифовПотребителей();
    НачатьТранзакцию();
    Попытка
        Для Каждого ВидТарифаПотребителяБП77 Из ДанныеДляЗаполнения Цикл
            НовыйЭлементОбъект = Справочники.lc_ВидыТарифов.СоздатьЭлемент();
            НовыйЭлементОбъект.Код = ВидТарифаПотребителяБП77.Код;
            НовыйЭлементОбъект.Наименование = ВидТарифаПотребителяБП77.Наименование;
            НовыйЭлементОбъект.Записать();

            РезультатФункции.СозданныеЭлементы.Добавить(НовыйЭлементОбъект.Ссылка);
        КонецЦикла;

        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();

        ОбщаяЧастьСообщения = "Ошибка при создании видов тарифов потребителей.";
        СтруктураОшибки = ГП_МиграцияОбщегоНазначения.ЗаписатьОшибкуВЖурнал(
                ОбщаяЧастьСообщения, ИнформацияОбОшибке(), Ложь, Истина);

        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = СтрШаблон(
                "%1
                |Информация об ошибке: %2",
                ОбщаяЧастьСообщения,
                СтруктураОшибки.КраткоеПредставлениеОшибки);

        РезультатФункции.СозданныеДокументы.Очистить();
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 16.09.2024 [F00227727] Доработать заполнение документа начисление по приборам учета --

// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа ++
//
// Заполняет регистр сведений `ГП_ВидыТарифовПотребителейЛицевыхСчетов` данными для формирования
//  связи: Лицевой счет - Вид тарифа потребителя (БП77)
// Параметры:
//  Период - Дата - Период заполнения (дата актуальности)
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * КоличествоЗаписанных - Число
//      * ТекстСообщения - Строка, Неопределено
Функция ЗаполнитьВидыТарифовПотребителейЛицевыхСчетов(Знач Период) Экспорт
    РезультатФункции = Новый Структура(
        "Успех, КоличествоЗаписанных, СообщениеОбОшибке", Истина, 0);

    ДанныеДляЗаполнения = ПолучитьДанныеЗаполненияВидовТарифовЛицевыхСчетов();

    НачатьТранзакцию();
    Попытка
        Для Каждого СтрокаДанных Из ДанныеДляЗаполнения Цикл
            Если ЗначениеЗаполнено(СтрокаДанных.ЛицевойСчет) = Ложь ИЛИ ЗначениеЗаполнено(СтрокаДанных.ВидТарифа) = Ложь Тогда
                Продолжить;
            КонецЕсли;

            НовыйНаборЗаписей = СоздатьНаборЗаписейВидовТарифовПотребителейЛицевыхСчетов(Период, СтрокаДанных.ЛицевойСчет);
            НоваяЗапись = НовыйНаборЗаписей.Добавить();
            НоваяЗапись.Период = Период;
            НоваяЗапись.ЛицевойСчет = СтрокаДанных.ЛицевойСчет;
            НоваяЗапись.ВидТарифаПотребителя = СтрокаДанных.ВидТарифа;

            НовыйНаборЗаписей.Записать("Истина");
            РезультатФункции.КоличествоЗаписанных = РезультатФункции.КоличествоЗаписанных + 1;
        КонецЦикла;

        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();

        ОбщаяЧастьСообщения = "Ошибка при записи данных назначения видов тарифов потребителей на лицевые счета.";
        СтруктураОшибки = ГП_МиграцияОбщегоНазначения.ЗаписатьОшибкуВЖурнал(
                ОбщаяЧастьСообщения, ИнформацияОбОшибке(), Ложь, Истина);

        РезультатФункции.Успех = Ложь;
        РезультатФункции.СообщениеОбОшибке = СтрШаблон(
                "%1
                |Информация об ошибке: %2",
                ОбщаяЧастьСообщения,
                СтруктураОшибки.КраткоеПредставлениеОшибки);

        РезультатФункции.КоличествоЗаписанных = 0;
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа --

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 16.08.2024 [F00226620] назначение тарифов --

// Гарант+ Килипенко 16.08.2024 [F00226620] назначение тарифов ++
#Область СлужебныйПрограммныйИнтерфейс

// Выполняет запись исходных данных тарифов объектов абонентов в регистр `ГП_ТарифыОбъектовАбонентовБП77` (по данным из БП77)
//  Существующие записи по отбору составного кода будут перезаписаны
// Параметры:
//  ИсходныеДанныеТарифовОбъектовАбонентов - Массив из Структура - Данные БП77
// Возвращаемое значение:
//  Структура:
//      * Успех - Булево
//      * КоличествоЗаписанных - Число
//      * СообщениеОбОшибке - Строка, Неопределено
Функция ЗаписатьДанныеТарифовОбъектовАбонентовВРегистр(Знач ИсходныеДанныеТарифовОбъектовАбонентов) Экспорт
    РезультатФункции = Новый Структура(
            "Успех, КоличествоЗаписанных, ТекстСообщения", Истина, 0);

    Если ИсходныеДанныеТарифовОбъектовАбонентов = Неопределено ИЛИ ИсходныеДанныеТарифовОбъектовАбонентов.Количество() = 0 Тогда
        Возврат РезультатФункции; // Нет данных
    КонецЕсли;

    // Поля для предобработки (приведения типов)
    КлючиЧисел = "ТарифВода,ТарифКанализация";

    // Транзакция записи в регистр
    НачатьТранзакцию();
    Попытка

        Для Каждого ТарифОбъектаАбонентаБП77 Из ИсходныеДанныеТарифовОбъектовАбонентов Цикл
            НаборЗаписейТарифовОбъектовАбонентов = СоздатьНаборЗаписейТарифовОбъектовАбонентовБП77(ТарифОбъектаАбонентаБП77);
            НоваяЗапись = НаборЗаписейТарифовОбъектовАбонентов.Добавить();

            // Заполнение данных
            ЗаполнитьЗначенияСвойств(НоваяЗапись, ТарифОбъектаАбонентаБП77, ,
                СтрШаблон("%1", КлючиЧисел));

            // Заполнение полей с преобразованием типов
            Для Каждого Ключ Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КлючиЧисел, ",", Ложь, Истина) Цикл
                НоваяЗапись[Ключ] = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ТарифОбъектаАбонентаБП77[Ключ]);
            КонецЦикла;

            НаборЗаписейТарифовОбъектовАбонентов.Записать(Истина);
            РезультатФункции.КоличествоЗаписанных = РезультатФункции.КоличествоЗаписанных + 1;
        КонецЦикла;

        ЗафиксироватьТранзакцию(); // Записано успешно
    Исключение
        ОтменитьТранзакцию();

        ОбщаяЧастьСообщения = "Ошибка бри записи назначений видов тарифов потребителей на лицевые счета.";
        СтруктураОшибки = ГП_МиграцияОбщегоНазначения.ЗаписатьОшибкуВЖурнал(
                ОбщаяЧастьСообщения, ИнформацияОбОшибке(), Ложь, Истина);

        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = СтрШаблон(
                "%1
                |Информация об ошибке: %2",
                ОбщаяЧастьСообщения,
                СтруктураОшибки.КраткоеПредставлениеОшибки);

        РезультатФункции.КоличествоЗаписанных = 0;
    КонецПопытки;

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  ТарифОбъектаАбонентаБП77 - Структура
//      * КонтрагентКод - Строка
//      * ОбъектАбонентаКод - Строка
// Возвращаемое значение:
//  - РегистрСведений.ГП_ТарифыОбъектовАбонентовБП77.НаборЗаписей
Функция СоздатьНаборЗаписейТарифовОбъектовАбонентовБП77(Знач ТарифОбъектаАбонентаБП77) Экспорт
    НаборЗаписей = РегистрыСведений.ГП_ТарифыОбъектовАбонентовБП77.СоздатьНаборЗаписей();
    НаборЗаписей.Отбор.КонтрагентКод.Установить(ТарифОбъектаАбонентаБП77.КонтрагентКод);
    НаборЗаписей.Отбор.ОбъектАбонентаКод.Установить(ТарифОбъектаАбонентаБП77.ОбъектАбонентаКод);

    Возврат НаборЗаписей;
КонецФункции

// Получает данные для заполнения документов установки тарифов
// Параметры:
//  ДатаАктуальности - Дата, Неопределено
//  ОрганизацияСсылка - СправочникСсылка.Организации, Неопределено
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * ХолоднаяВода - ДеревоЗначений
//      * ГорячаяВода - ДеревоЗначений
//      * Канализация - ДеревоЗначений
//      * ХолоднаяВодаВодоотвод - ДеревоЗначений
//      * ПодогревХВ - ДеревоЗначений
//      * НегативноеВоздействие - ДеревоЗначений
Функция ПолучитьДанныеЗаполненияУстановкиТарифов(
        Знач ДатаАктуальности = Неопределено, ОрганизацияСсылка = Неопределено) Экспорт

    РезультатФункции = Новый Структура(
            "Успех, ХолоднаяВода, ГорячаяВода, Канализация, ХолоднаяВодаВодоотвод, ПодогревХВ, НегативноеВоздействие", Истина);

    Если ОрганизацияСсылка = Неопределено Тогда
        ОрганизацияСсылка = УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию();
    КонецЕсли;

    МВТ = Новый МенеджерВременныхТаблиц();
    СтруктураТекстаЗапросов = ПолучитьТекстЗапросаЗаполненияУстановкиТарифов();

    // Формирование временных таблиц;
    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = МВТ;

    Запрос.Текст = СтруктураТекстаЗапросов.ВременныеТаблицы;

    Запрос.УстановитьПараметр("ПустаяСсылкаЛС", Справочники.КВП_ЛицевыеСчета.ПустаяСсылка());
    Запрос.Выполнить();

    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = МВТ;
    Запрос.Текст = СтруктураТекстаЗапросов.ОсновныеДанные;

    Если ДатаАктуальности = Неопределено Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДатаАктуальности", "");
    Иначе
        Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
    КонецЕсли;
    Запрос.УстановитьПараметр("Организация", ОрганизацияСсылка);
    Запрос.УстановитьПараметр("ШаблонНегативногоВоздействия", "негатив%возд%");

    ТаблицыПакета = Запрос.ВыполнитьПакет();
    РезультатФункции.ХолоднаяВода = ТаблицыПакета[0].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
    РезультатФункции.ГорячаяВода = ТаблицыПакета[1].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
    РезультатФункции.Канализация = ТаблицыПакета[2].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
    РезультатФункции.ХолоднаяВодаВодоотвод = ТаблицыПакета[3].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
    РезультатФункции.ПодогревХВ = ТаблицыПакета[4].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
    РезультатФункции.НегативноеВоздействие = ТаблицыПакета[5].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);

    РезультатФункции.Успех = (РезультатФункции.ХолоднаяВода.Строки.Количество()
            + РезультатФункции.ГорячаяВода.Строки.Количество()
            + РезультатФункции.Канализация.Строки.Количество()
            + РезультатФункции.ХолоднаяВодаВодоотвод.Строки.Количество()
            + РезультатФункции.ПодогревХВ.Строки.Количество()
            + РезультатФункции.НегативноеВоздействие.Строки.Количество()) > 0;

    Возврат РезультатФункции;
КонецФункции

// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа ++
//
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьДанныеЗаполненияВидовТарифовПотребителей() Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   ВидыТарифов.Код КАК Код,
        |   ВидыТарифов.Наименование КАК Наименование
        |ИЗ
        |   Справочник.lc_ВидыТарифов КАК ВидыТарифов
        |ГДЕ
        |   ВидыТарифов.ПометкаУдаления = ЛОЖЬ
        |";

    РезультатЗапроса = Запрос.Выполнить();
    ТаблицаТарифовПодготовка = РезультатЗапроса.Выгрузить();
    Для Каждого СтрокаДанных Из ТаблицаТарифовПодготовка Цикл
        СтрокаДанных.Код = СтрЗаменитьПоРегулярномуВыражению(СтрокаДанных.Код, "\s*[0]+([0-9]+)\s*", "$1");
    КонецЦикла;

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   *
        |ПОМЕСТИТЬ ВТ_ТаблицаТарифовПодготовка
        |ИЗ
        |   &ТаблицаТарифовПодготовка КАК ТаблицаТарифовПодготовка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КонтрагентыБП77.Код КАК Код
        |ПОМЕСТИТЬ АктивныеКонтрагентыБП77
        |ИЗ
        |	РегистрСведений.ГП_КонтрагентыБП77 КАК КонтрагентыБП77
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ТарифыОбъектовАбонентовБП77.ТарифНаименование КАК ТарифНаименование,
        |	ТарифыОбъектовАбонентовБП77.ТарифКод КАК ТарифКод
        |ПОМЕСТИТЬ ВТ_ВидыТарифовПотребителейБП77
        |ИЗ
        |	РегистрСведений.ГП_ТарифыОбъектовАбонентовБП77 КАК ТарифыОбъектовАбонентовБП77
        |ГДЕ
        |	ТарифыОбъектовАбонентовБП77.ТарифКод <> """"
        |	И ТарифыОбъектовАбонентовБП77.КонтрагентКод В
        |			(ВЫБРАТЬ
        |				АктивныеКонтрагентыБП77.Код
        |			ИЗ
        |				АктивныеКонтрагентыБП77)
        |
        |СГРУППИРОВАТЬ ПО
        |	ТарифыОбъектовАбонентовБП77.ТарифНаименование,
        |	ТарифыОбъектовАбонентовБП77.ТарифКод
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	ВТ_ВидыТарифовПотребителейБП77.ТарифНаименование КАК Наименование,
        |	ВТ_ВидыТарифовПотребителейБП77.ТарифКод КАК Код
        |ИЗ
        |	ВТ_ВидыТарифовПотребителейБП77 КАК ВТ_ВидыТарифовПотребителейБП77
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаТарифовПодготовка КАК ВидыТарифов
        |		ПО ВТ_ВидыТарифовПотребителейБП77.ТарифКод = ВидыТарифов.Код
        |			И ВТ_ВидыТарифовПотребителейБП77.ТарифНаименование = ВидыТарифов.Наименование
        |ГДЕ
        |	ВидыТарифов.Код ЕСТЬ NULL
        |";

    Запрос.УстановитьПараметр("ТаблицаТарифовПодготовка", ТаблицаТарифовПодготовка);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();

    Для Каждого СтрокаДанных Из РезультатФункции Цикл
        СтрокаДанных.Код = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(
                СтрокаДанных.Код, 3, 0, "Слева");
    КонецЦикла;

    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа --

// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа ++
//
// Получает виды тарифов лицевых счетов (на основании данных (связей) БП77 / РС.ГП_ТарифыОбъектовАбонентов)
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета
//      * Помещение - СправочникСсылка.КВП_Помещения
//      * Здание - СправочникСсылка.КВП_Здания
//      * ВидТарифа - СправочникСсылка.lc_ВидыТарифов
Функция ПолучитьДанныеЗаполненияВидовТарифовЛицевыхСчетов() Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст = ПолучитьТекстЗапросаЗаполненияВидовТарифовПотребителейДляЛицевыхСчетов();
    РезультатЗапроса = Запрос.Выполнить();

    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа --

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
// Гарант+ Килипенко 16.08.2024 [F00226620] назначение тарифов --

// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа ++
#Область СлужебныеПроцедурыИФункции

// Параметры:
//  Период - Дата
//  ЛицевойСчетСсылка - СправочникСсылка.КВП_ЛицевыеСчета
// Возвращаемое значение:
//  - РегистрСведений.ГП_ВидыТарифовПотребителейЛицевыхСчетов.НаборЗаписей
Функция СоздатьНаборЗаписейВидовТарифовПотребителейЛицевыхСчетов(Знач Период, Знач ЛицевойСчетСсылка)
    НаборЗаписей = РегистрыСведений.ГП_ВидыТарифовПотребителейЛицевыхСчетов.СоздатьНаборЗаписей();
    НаборЗаписей.Отбор.Период.Установить(Период);
    НаборЗаписей.Отбор.ЛицевойСчет.Установить(ЛицевойСчетСсылка);

    Возврат НаборЗаписей;
КонецФункции

Функция ПолучитьТекстЗапросаЗаполненияВидовТарифовПотребителейДляЛицевыхСчетов()
    РезультатФункции =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КонтрагентыБП77.Код КАК Код
        |ПОМЕСТИТЬ АктивныеКонтрагентыБП77
        |ИЗ
        |	РегистрСведений.ГП_КонтрагентыБП77 КАК КонтрагентыБП77
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ТарифыОбъектовАбонентовБП77.ТарифНаименование КАК ТарифНаименование,
        |	ТарифыОбъектовАбонентовБП77.ТарифКод КАК ТарифКод
        |ПОМЕСТИТЬ ВТ_ВидыТарифовПотребителейБП77
        |ИЗ
        |	РегистрСведений.ГП_ТарифыОбъектовАбонентовБП77 КАК ТарифыОбъектовАбонентовБП77
        |ГДЕ
        |	ТарифыОбъектовАбонентовБП77.ТарифКод <> """"
        |	И ТарифыОбъектовАбонентовБП77.КонтрагентКод В
        |			(ВЫБРАТЬ
        |				АктивныеКонтрагентыБП77.Код
        |			ИЗ
        |				АктивныеКонтрагентыБП77)
        |
        |СГРУППИРОВАТЬ ПО
        |	ТарифыОбъектовАбонентовБП77.ТарифНаименование,
        |	ТарифыОбъектовАбонентовБП77.ТарифКод
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ВидыТарифовПотребителейБП77.ТарифНаименование КАК Наименование,
        |	ВТ_ВидыТарифовПотребителейБП77.ТарифКод КАК Код,
        |	ВидыТарифов.Ссылка КАК ВидТарифа
        |ПОМЕСТИТЬ ВТ_ВидыТарифовПотребителей
        |ИЗ
        |	ВТ_ВидыТарифовПотребителейБП77 КАК ВТ_ВидыТарифовПотребителейБП77
        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.lc_ВидыТарифов КАК ВидыТарифов
        |		ПО ВТ_ВидыТарифовПотребителейБП77.ТарифНаименование = ВидыТарифов.Наименование
        |			И ВидыТарифов.Код ПОДОБНО ""%"" + ВТ_ВидыТарифовПотребителейБП77.ТарифКод
        |			И (ВидыТарифов.ПометкаУдаления = ЛОЖЬ)
        |ГДЕ
        |	НЕ ВидыТарифов.Ссылка ЕСТЬ NULL
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ВидыТарифовПотребителей.ВидТарифа КАК ВидТарифа,
        |	ТарифыОбъектовАбонентовБП77.ОбъектАбонентаКод + ""_"" + ТарифыОбъектовАбонентовБП77.КонтрагентКод КАК ИдентификаторЛС
        |ПОМЕСТИТЬ НаименованияВидовТарифовБП77
        |ИЗ
        |	РегистрСведений.ГП_ТарифыОбъектовАбонентовБП77 КАК ТарифыОбъектовАбонентовБП77
        |	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидыТарифовПотребителей КАК ВТ_ВидыТарифовПотребителей
        |	ПО ТарифыОбъектовАбонентовБП77.ТарифКод = ВТ_ВидыТарифовПотребителей.Код
        |	И ТарифыОбъектовАбонентовБП77.ТарифНаименование = ВТ_ВидыТарифовПотребителей.Наименование
        |ГДЕ
        |	ТарифыОбъектовАбонентовБП77.КонтрагентКод В
        |			(ВЫБРАТЬ
        |				АктивныеКонтрагентыБП77.Код
        |			ИЗ
        |				АктивныеКонтрагентыБП77)
        |	И НЕ ВТ_ВидыТарифовПотребителей.ВидТарифа ЕСТЬ NULL
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КВП_ЛицевыеСчета.Ссылка КАК ЛицевойСчет,
        |	КВП_ЛицевыеСчета.Адрес КАК Помещение,
        |	КВП_ЛицевыеСчета.Адрес.Владелец КАК Здание,
        |	НаименованияВидовТарифовБП77.ВидТарифа КАК ВидТарифа
        |ИЗ
        |	Справочник.КВП_ЛицевыеСчета КАК КВП_ЛицевыеСчета
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НаименованияВидовТарифовБП77 КАК НаименованияВидовТарифовБП77
        |		ПО КВП_ЛицевыеСчета.Идентификатор = НаименованияВидовТарифовБП77.ИдентификаторЛС
        |ГДЕ
        |	КВП_ЛицевыеСчета.ПометкаУдаления = ЛОЖЬ
        |	И КВП_ЛицевыеСчета.ЭтоГруппа = ЛОЖЬ
        |	И НЕ НаименованияВидовТарифовБП77.ВидТарифа ЕСТЬ NULL
        |";

    Возврат РезультатФункции;
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * ОсновныеДанные - Строка - Текст основного запроса
//      * ВременныеТаблицы - Строка - Текст запроса формирования временных таблиц
Функция ПолучитьТекстЗапросаЗаполненияУстановкиТарифов()
    РезультатФункции = Новый Структура("ОсновныеДанные, ВременныеТаблицы");

    #Область ТекстЗапросаВТ
    РезультатФункции.ВременныеТаблицы =
        "////////////////////////////////////////////////////////////////////////////////
        |// Услуги БП77 (без платы за ОИ)
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ГП_УслугиБП77.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ГП_УслугиБП77.КонтрагентКод КАК КонтрагентКод,
        |	ГП_УслугиБП77.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ГП_УслугиБП77.ЛицевойСчет КАК ЛицевойСчетСвязь,
        |	ГП_УслугиБП77.ТолькоДляКанализации КАК ТолькоДляКанализации,
        |	ГП_УслугиБП77.МетодРасчетаХВ КАК МетодРасчетаХВ,
        |	ГП_УслугиБП77.МетодРасчетаГВ КАК МетодРасчетаГВ,
        |	ГП_УслугиБП77.МетодРасчетаКан КАК МетодРасчетаКан,
        |	ГП_УслугиБП77.НаПодогрев КАК НаПодогрев,
        |	ГП_УслугиБП77.ЭтоПлатаЗаХолодноеВодоснабжениеОИ КАК ЭтоПлатаЗаХолодноеВодоснабжениеОИ,
        |	ГП_УслугиБП77.ЭтоНегативноеВоздействиеЦСВ КАК ЭтоНегативноеВоздействиеЦСВ,
        |	ГП_УслугиБП77.ОбъектАбонентаКод + ""_"" + ГП_УслугиБП77.КонтрагентКод КАК СоставнойКодЛС
        |ПОМЕСТИТЬ ВТ_УслугиБП77
        |ИЗ
        |	РегистрСведений.ГП_УслугиБП77 КАК ГП_УслугиБП77
        |ГДЕ
        |	ГП_УслугиБП77.ЭтоПлатаЗаХолодноеВодоснабжениеОИ = ЛОЖЬ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |// Лицевые счета ИБ
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КВП_ЛицевыеСчета.Ссылка КАК Ссылка,
        |	КВП_ЛицевыеСчета.Идентификатор КАК Идентификатор
        |ПОМЕСТИТЬ ВТ_ЛицевыеСчета
        |ИЗ
        |	Справочник.КВП_ЛицевыеСчета КАК КВП_ЛицевыеСчета
        |ГДЕ
        |	КВП_ЛицевыеСчета.ЭтоГруппа = ЛОЖЬ
        |	И КВП_ЛицевыеСчета.ПометкаУдаления = ЛОЖЬ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |// Связь лицевых счетов и услуг БП77 (без платы за ОИ)
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ЛицевыеСчета.Ссылка КАК ЛицевойСчет,
        |	ВТ_ЛицевыеСчета.Идентификатор КАК Идентификатор,
        |	ВТ_УслугиБП77.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_УслугиБП77.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_УслугиБП77.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ВТ_УслугиБП77.ТолькоДляКанализации КАК ТолькоДляКанализации,
        |	ВТ_УслугиБП77.МетодРасчетаХВ КАК МетодРасчетаХВ,
        |	ВТ_УслугиБП77.МетодРасчетаГВ КАК МетодРасчетаГВ,
        |	ВТ_УслугиБП77.МетодРасчетаКан КАК МетодРасчетаКан,
        |	ВТ_УслугиБП77.НаПодогрев КАК НаПодогрев,
        |	ВТ_УслугиБП77.ЭтоНегативноеВоздействиеЦСВ КАК ЭтоНегативноеВоздействиеЦСВ,
        |	ВТ_УслугиБП77.СоставнойКодЛС КАК СоставнойКодЛС
        |ПОМЕСТИТЬ ВТ_УслугиЛицевыхСчетов
        |ИЗ
        |	ВТ_ЛицевыеСчета КАК ВТ_ЛицевыеСчета
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_УслугиБП77 КАК ВТ_УслугиБП77
        |		ПО (ВТ_УслугиБП77.СоставнойКодЛС = ВТ_ЛицевыеСчета.Идентификатор)
        |			И (ВТ_УслугиБП77.ЭтоНегативноеВоздействиеЦСВ = ЛОЖЬ)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |// Услуги лицевых счетов (без негативного воздействия и платы за ОИ)
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	ВТ_УслугиЛицевыхСчетов.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_УслугиЛицевыхСчетов.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_УслугиЛицевыхСчетов.ОбъектАбонентаНаименование КАК ОбъектАбонентаНаименование,
        |	ВТ_УслугиЛицевыхСчетов.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_УслугиЛицевыхСчетов.ТолькоДляКанализации КАК ТолькоДляКанализации,
        |	ВТ_УслугиЛицевыхСчетов.МетодРасчетаХВ КАК МетодРасчетаХВ,
        |	ВТ_УслугиЛицевыхСчетов.МетодРасчетаГВ КАК МетодРасчетаГВ,
        |	ВТ_УслугиЛицевыхСчетов.МетодРасчетаКан КАК МетодРасчетаКан,
        |	ВТ_УслугиЛицевыхСчетов.НаПодогрев КАК НаПодогрев,
        |	ГП_ТарифыОбъектовАбонентовБП77.ТарифКод КАК ТарифКод,
        |	ГП_ТарифыОбъектовАбонентовБП77.ТарифНаименование КАК ТарифНаименование,
        |	ГП_ТарифыОбъектовАбонентовБП77.ТарифВода КАК ТарифВода,
        |	ГП_ТарифыОбъектовАбонентовБП77.ТарифКанализация КАК ТарифКанализация
        |ПОМЕСТИТЬ ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ
        |ИЗ
        |	ВТ_УслугиЛицевыхСчетов КАК ВТ_УслугиЛицевыхСчетов
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГП_ТарифыОбъектовАбонентовБП77 КАК ГП_ТарифыОбъектовАбонентовБП77
        |		ПО ВТ_УслугиЛицевыхСчетов.КонтрагентКод = ГП_ТарифыОбъектовАбонентовБП77.КонтрагентКод
        |			И ВТ_УслугиЛицевыхСчетов.ОбъектАбонентаКод = ГП_ТарифыОбъектовАбонентовБП77.ОбъектАбонентаКод
        |			И (ГП_ТарифыОбъектовАбонентовБП77.ТарифКод <> """")
        |ГДЕ
        |	ВТ_УслугиЛицевыхСчетов.ЛицевойСчет <> &ПустаяСсылкаЛС
        |	И ВТ_УслугиЛицевыхСчетов.ЭтоНегативноеВоздействиеЦСВ = ЛОЖЬ
        |	И (ВТ_УслугиЛицевыхСчетов.МетодРасчетаХВ <> ""Нет""
        |			ИЛИ ВТ_УслугиЛицевыхСчетов.МетодРасчетаГВ <> ""Нет""
        |			ИЛИ ВТ_УслугиЛицевыхСчетов.МетодРасчетаКан <> ""Нет""
        |				И ВТ_УслугиЛицевыхСчетов.МетодРасчетаКан <> """")
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |// Подготовка данных для назначения услуг (кроме негативного воздействия и платы за ОИ)
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.ЛицевойСчет КАК ЛицевойСчет,
        |	ВЫБОР
        |		КОГДА ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.МетодРасчетаХВ <> ""Нет""
        |				И ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.НаПодогрев = ЛОЖЬ
        |				И ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.ТолькоДляКанализации = ЛОЖЬ
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ КАК ЭтоХолоднаяВода,
        |	ВЫБОР
        |		КОГДА ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.МетодРасчетаХВ <> ""Нет""
        |				И ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.ТолькоДляКанализации = ИСТИНА
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ КАК ЭтоЭтоХолоднаяВодаВодоотвод,
        |	ВЫБОР
        |		КОГДА ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.МетодРасчетаГВ <> ""Нет""
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ КАК ЭтоГорячаяВода,
        |	ВЫБОР
        |		КОГДА ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.МетодРасчетаКан <> ""Нет""
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ КАК ЭтоКанализация,
        |	ВЫБОР
        |		КОГДА ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.МетодРасчетаХВ <> ""Нет""
        |				И ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.НаПодогрев = ИСТИНА
        |				И ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.ТолькоДляКанализации = ЛОЖЬ
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ КАК ЭтоПодогревХВ,
        |	ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.ТарифКод КАК ТарифКод,
        |	ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.ТарифНаименование КАК ТарифНаименование,
        |	ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.ТарифВода КАК ТарифВода,
        |	ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ.ТарифКанализация КАК ТарифКанализация
        |ПОМЕСТИТЬ ВТ_УслугиОбъектыАбонентов
        |ИЗ
        |	ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ КАК ВТ_ОбъектыАбонентовПодготовкаБезНВиОИ
        |;";
    #КонецОбласти // ТекстЗапросаВТ

    #Область ТекстЗапроса
    РезультатФункции.ОсновныеДанные =
        "////////////////////////////////////////////////////////////////////////////////
        |// Результат [0] ХолоднаяВода
        |ВЫБРАТЬ
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет.Адрес КАК Помещение,
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет.Адрес.Владелец КАК Здание,
        |	ВТ_УслугиОбъектыАбонентов.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_УслугиОбъектыАбонентов.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_УслугиОбъектыАбонентов.ТарифКод КАК ТарифКод,
        |	ВТ_УслугиОбъектыАбонентов.ТарифНаименование КАК ТарифНаименование,
        |	ВТ_УслугиОбъектыАбонентов.ТарифВода КАК Тариф
        |ИЗ
        |	ВТ_УслугиОбъектыАбонентов КАК ВТ_УслугиОбъектыАбонентов
        |ГДЕ
        |	ВТ_УслугиОбъектыАбонентов.ЭтоХолоднаяВода = ИСТИНА
        |
        |УПОРЯДОЧИТЬ ПО
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет
        |
        |ИТОГИ
        |	МАКСИМУМ(ТарифНаименование),
        |	МАКСИМУМ(Тариф)
        |ПО
        |	ТарифКод
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |// Результат [1] ГорячаяВода
        |ВЫБРАТЬ
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет.Адрес КАК Помещение,
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет.Адрес.Владелец КАК Здание,
        |	ВТ_УслугиОбъектыАбонентов.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_УслугиОбъектыАбонентов.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_УслугиОбъектыАбонентов.ТарифКод КАК ТарифКод,
        |	ВТ_УслугиОбъектыАбонентов.ТарифНаименование КАК ТарифНаименование,
        |	ВТ_УслугиОбъектыАбонентов.ТарифВода КАК Тариф
        |ИЗ
        |	ВТ_УслугиОбъектыАбонентов КАК ВТ_УслугиОбъектыАбонентов
        |ГДЕ
        |	ВТ_УслугиОбъектыАбонентов.ЭтоГорячаяВода = ИСТИНА
        |
        |УПОРЯДОЧИТЬ ПО
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет
        |
        |ИТОГИ
        |	МАКСИМУМ(ТарифНаименование),
        |	МАКСИМУМ(Тариф)
        |ПО
        |	ТарифКод
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |// Результат [2] Канализация
        |ВЫБРАТЬ
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет.Адрес КАК Помещение,
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет.Адрес.Владелец КАК Здание,
        |	ВТ_УслугиОбъектыАбонентов.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_УслугиОбъектыАбонентов.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_УслугиОбъектыАбонентов.ТарифКод КАК ТарифКод,
        |	ВТ_УслугиОбъектыАбонентов.ТарифНаименование КАК ТарифНаименование,
        |	ВТ_УслугиОбъектыАбонентов.ТарифКанализация КАК Тариф
        |ИЗ
        |	ВТ_УслугиОбъектыАбонентов КАК ВТ_УслугиОбъектыАбонентов
        |ГДЕ
        |	ВТ_УслугиОбъектыАбонентов.ЭтоКанализация = ИСТИНА
        |
        |УПОРЯДОЧИТЬ ПО
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет
        |
        |ИТОГИ
        |	МАКСИМУМ(ТарифНаименование),
        |	МАКСИМУМ(Тариф)
        |ПО
        |	ТарифКод
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |// Результат [3] ХолоднаяВодаВодоотвод
        |ВЫБРАТЬ
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет.Адрес КАК Помещение,
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет.Адрес.Владелец КАК Здание,
        |	ВТ_УслугиОбъектыАбонентов.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_УслугиОбъектыАбонентов.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_УслугиОбъектыАбонентов.ТарифКод КАК ТарифКод,
        |	ВТ_УслугиОбъектыАбонентов.ТарифНаименование КАК ТарифНаименование,
        |	ВТ_УслугиОбъектыАбонентов.ТарифВода КАК Тариф
        |ИЗ
        |	ВТ_УслугиОбъектыАбонентов КАК ВТ_УслугиОбъектыАбонентов
        |ГДЕ
        |	ВТ_УслугиОбъектыАбонентов.ЭтоЭтоХолоднаяВодаВодоотвод = ИСТИНА
        |
        |УПОРЯДОЧИТЬ ПО
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет
        |
        |ИТОГИ
        |	МАКСИМУМ(ТарифНаименование),
        |	МАКСИМУМ(Тариф)
        |ПО
        |	ТарифКод
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |// Результат [4] Счетчик ХВ (Подогрев)
        |ВЫБРАТЬ
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет.Адрес КАК Помещение,
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет.Адрес.Владелец КАК Здание,
        |	ВТ_УслугиОбъектыАбонентов.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_УслугиОбъектыАбонентов.КонтрагентКод КАК КонтрагентКод,
        |	ВТ_УслугиОбъектыАбонентов.ТарифКод КАК ТарифКод,
        |	ВТ_УслугиОбъектыАбонентов.ТарифНаименование КАК ТарифНаименование,
        |	ВТ_УслугиОбъектыАбонентов.ТарифВода КАК Тариф
        |ИЗ
        |	ВТ_УслугиОбъектыАбонентов КАК ВТ_УслугиОбъектыАбонентов
        |ГДЕ
        |	ВТ_УслугиОбъектыАбонентов.ЭтоПодогревХВ = ИСТИНА
        |
        |УПОРЯДОЧИТЬ ПО
        |	ВТ_УслугиОбъектыАбонентов.ЛицевойСчет
        |
        |ИТОГИ
        |	МАКСИМУМ(ТарифНаименование),
        |	МАКСИМУМ(Тариф)
        |ПО
        |	ТарифКод
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |// Результат [5] негативное воздействие на ЦСВ
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_УслугиЛицевыхСчетов.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_УслугиЛицевыхСчетов.ЛицевойСчет.Адрес КАК Помещение,
        |	ВТ_УслугиЛицевыхСчетов.ЛицевойСчет.Адрес.Владелец КАК Здание,
        |	ВТ_УслугиЛицевыхСчетов.ОбъектАбонентаКод КАК ОбъектАбонентаКод,
        |	ВТ_УслугиЛицевыхСчетов.КонтрагентКод КАК КонтрагентКод,
        |	ГП_ТарифыОбъектовАбонентовБП77.ТарифКод КАК ТарифКод,
        |	ГП_ТарифыОбъектовАбонентовБП77.ТарифНаименование КАК ТарифНаименование,
        |	ГП_ТарифыОбъектовАбонентовБП77.ТарифКанализация КАК Тариф
        |ИЗ
        |	ВТ_УслугиЛицевыхСчетов КАК ВТ_УслугиЛицевыхСчетов
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_УслугиБП77 КАК ВТ_УслугиБП77_НВ
        |		ПО (ВТ_УслугиБП77_НВ.ЭтоНегативноеВоздействиеЦСВ = ИСТИНА)
        |			И (ВТ_УслугиЛицевыхСчетов.ЭтоНегативноеВоздействиеЦСВ = ЛОЖЬ)
        |			И ВТ_УслугиЛицевыхСчетов.КонтрагентКод = ВТ_УслугиБП77_НВ.КонтрагентКод
        |			И ВТ_УслугиЛицевыхСчетов.ОбъектАбонентаКод <> ВТ_УслугиБП77_НВ.ОбъектАбонентаКод
        |			И (ВТ_УслугиБП77_НВ.ОбъектАбонентаНаименование ПОДОБНО ВТ_УслугиЛицевыхСчетов.ОбъектАбонентаНаименование + "" [(]"" + &ШаблонНегативногоВоздействия
        |				ИЛИ ВТ_УслугиБП77_НВ.ОбъектАбонентаНаименование ПОДОБНО ВТ_УслугиЛицевыхСчетов.ОбъектАбонентаНаименование + "" [(] "" + &ШаблонНегативногоВоздействия
        |				ИЛИ ВТ_УслугиБП77_НВ.ОбъектАбонентаНаименование ПОДОБНО ВТ_УслугиЛицевыхСчетов.ОбъектАбонентаНаименование + ""   [(]"" + &ШаблонНегативногоВоздействия
        |				ИЛИ ВТ_УслугиБП77_НВ.ОбъектАбонентаНаименование ПОДОБНО ВТ_УслугиЛицевыхСчетов.ОбъектАбонентаНаименование + ""  [(]"" + &ШаблонНегативногоВоздействия)
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГП_ТарифыОбъектовАбонентовБП77 КАК ГП_ТарифыОбъектовАбонентовБП77
        |		ПО (ВТ_УслугиБП77_НВ.КонтрагентКод = ГП_ТарифыОбъектовАбонентовБП77.КонтрагентКод)
        |			И (ВТ_УслугиБП77_НВ.ОбъектАбонентаКод = ГП_ТарифыОбъектовАбонентовБП77.ОбъектАбонентаКод)
        |			И (ГП_ТарифыОбъектовАбонентовБП77.ТарифКод <> """")
        |
        |УПОРЯДОЧИТЬ ПО
        |	ВТ_УслугиЛицевыхСчетов.ЛицевойСчет
        |
        |ИТОГИ
        |	МАКСИМУМ(ТарифНаименование),
        |	МАКСИМУМ(Тариф)
        |ПО
        |	ТарифКод
        |;";
    УдалитьИсправленияОшибкиРедактора = ")))))"; // ~~~ Только для исправления проблемы редактора ~~~
    #КонецОбласти // ТекстЗапроса

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа --
