// Гарант+ Килипенко 07.10.2024 [F00230765] перенос счетчиков Потерь воды (по среднему) ++
#Область ПрограммныйИнтерфейс

// Параметры:
//  ДанныеЗаполнения - ТаблицаЗначений
//      * ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета
//      * Услуга - СправочникСсылка.КВП_Услуги - Для контроля
//  Услуга - СправочникСсылка.КВП_Услуги
//  ДатаДокумента - Дата
//  ДатаНачалаДействияПоУмолчанию - Дата
//  ВыводитьСообщенияОбОшибках - Булево
// Возвращаемое значение:
//  - Структура
//      * Успех - Булево
//      * СообщенияОбОшибках - Массив из Строка
//      * ТекстСообщения - Строка
//      * СозданныеДокументыУправленияУслугами - Массив из ДокументСсылка.КВП_УправлениеУслугами
Функция СоздатьДокументНазначенияУслугиДляЛицевыхСчетов(Знач ДанныеЗаполнения, Знач Услуга, 
        Знач ДатаДокумента, ДатаНачалаДействияПоУмолчанию, Знач ВыводитьСообщенияОбОшибках = Ложь) Экспорт

    РезультатФункции = Новый Структура(
            "Успех, СообщенияОбОшибках, ТекстСообщения, СозданныеДокументыУправленияУслугами",
            Истина, Новый Массив, "", Новый Массив);

    ОрганизацияСсылка = ?(ОрганизацияСсылка = Неопределено,
            УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию(), ОрганизацияСсылка);

    // Создаем новый элемент документа
    НовыйДокументОбъект = Документы.КВП_УправлениеУслугами.СоздатьДокумент();
    НовыйДокументОбъект.Дата = ДатаДокумента;
    НовыйДокументОбъект.Организация = ОрганизацияСсылка;
    НовыйДокументОбъект.ВидОперации = Перечисления.КВП_ВидыОперацийУправленияУслугами.НазначениеНаЛицевыеСчета;
    НовыйДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
    НовыйДокументОбъект.Комментарий = СтрШаблон("#создан автоматически для вида услуги БП 7.7: ""%1"". (ГарантПлюс)", Услуга);

    // Заполняем услугу документа
    НоваяСтрокаУслуги = НовыйДокументОбъект.Услуги.Добавить();
    НоваяСтрокаУслуги.Услуга = Услуга; // Плата за холодное водоснабжение ОИ

    Попытка
        // Заполняем объекты документа
        Для Каждого СтрокаДанных Из ДанныеЗаполнения Цикл
            Если ТипЗнч(СтрокаДанных.ЛицевойСчет) <> Тип("СправочникСсылка.КВП_ЛицевыеСчета")
                ИЛИ СтрокаДанных.ЛицевойСчет.Пустая() Тогда
                Продолжить;
            КонецЕсли;

            Если СтрокаДанных.Услуга <> Услуга Тогда
                ТекстСообщенияОбОшибке = СтрШаблон(
                        "Внимание! Для л/с ""%1"" не была назначена услуга ""%2"" т.к. услуга"
                        + " указанная в счетчике не соответствует услуге ""%3""",
                        Строка(СтрокаДанных.ЛицевойСчет),
                        Строка(СтрокаДанных.Услуга),
                        Строка(Услуга));

                РезультатФункции.СообщенияОбОшибках.Добавить(ТекстСообщенияОбОшибке);

                Продолжить;
            КонецЕсли;

            НоваяСтрокаОбъекты = НовыйДокументОбъект.Объекты.Добавить();
            НоваяСтрокаОбъекты.Объект = СтрокаДанных.ЛицевойСчет;
            НоваяСтрокаОбъекты.ДатаНачала = ДатаНачалаДействияПоУмолчанию;
        КонецЦикла;

        // Записываем документ
        НовыйДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
        РезультатФункции.СозданныеДокументыУправленияУслугами.Добавить(НовыйДокументОбъект.Ссылка);
    Исключение

        ОбщаяЧастьСообщения = "Ошибка при записи документов УправлениеУслугами.";

        РезультатФункции.Успех = Ложь;
        РезультатФункции.ТекстСообщения = СтрШаблон(
                "%1
                |Информация об ошибке: %2",
                ОбщаяЧастьСообщения,
                ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));

        РезультатФункции.СозданныеДокументыУправленияУслугами.Очистить();
    КонецПопытки;

    // Сообщения пользователю (опционально)
    Если ВыводитьСообщенияОбОшибках = Истина Тогда
        Для Каждого ТекстСообщения Из РезультатФункции.СообщенияОбОшибках Цикл
            ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
        КонецЦикла;

        Если РезультатФункции.Успех = Ложь Тогда
            ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
        КонецЕсли;
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 07.10.2024 [F00230765] перенос счетчиков Потерь воды (по среднему) --
