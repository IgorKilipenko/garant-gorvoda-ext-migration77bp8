// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления ++
#Область ПрограммныйИнтерфейс

// Параметры:
//  ИмяЭлемента - Строка
//  ТипЭлемента - Тип
//  Форма - ФормаКлиентскогоПриложения
//  Родитель - Строка, Неопределено - Имя родительского элемента
//  ЭлементВставки - Строка, Неопределено
// Возвращаемое значение:
//  - ЭлементФормы
Функция СоздатьЭлементыФормы(
        Знач ИмяЭлемента, Знач ТипЭлемента, Знач Форма, Знач Родитель = Неопределено, Знач ЭлементВставки = Неопределено) Экспорт

    РезультатФункции = Неопределено;

    Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Элементы, ИмяЭлемента) = Истина Тогда
        РезультатФункции = Форма.Элементы[ИмяЭлемента];
        Возврат РезультатФункции; // Элемент уже существует
    КонецЕсли;

    Если ЭлементВставки = Неопределено Тогда
        РезультатФункции = Форма.Элементы.Добавить(
                ИмяЭлемента,
                ТипЭлемента,
                ?(Родитель = Неопределено, Форма, Форма.Элементы[Родитель]));
    Иначе
        РезультатФункции = Форма.Элементы.Вставить(
                ИмяЭлемента,
                ТипЭлемента,
                ?(Родитель = Неопределено, Форма, Форма.Элементы[Родитель]),
                Форма.Элементы[ЭлементВставки]);
    КонецЕсли;

    РезультатФункции.Видимость = Истина;

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  Имя - Строка
//  ПараметрыКнопки - Структура
//  Форма - ФормаКлиентскогоПриложения
//  Родитель - Строка, Неопределено - Имя родительского элемента
//  ЭлементВставки - Строка, Неопределено
// Возвращаемое значение:
//  - ЭлементФормы
Функция СоздатьКнопкуФормы(
        Знач Имя, Знач ПараметрыКнопки, Знач Форма, Знач Родитель = Неопределено, Знач ЭлементВставки = Неопределено) Экспорт

    НовыйЭлемент = СоздатьЭлементыФормы(Имя, Тип("КнопкаФормы"), Форма, Родитель, ЭлементВставки);

    ЗаполнитьЗначенияСвойств(НовыйЭлемент, ПараметрыКнопки);

    Возврат НовыйЭлемент;
КонецФункции

// Параметры:
//  Имя - Строка
//  ПараметрыПоля - Структура
//  Форма - ФормаКлиентскогоПриложения
//  Родитель - Строка, Неопределено - Имя родительского элемента
//  ЭлементВставки - Строка, Неопределено
// Возвращаемое значение:
//  - ЭлементФормы
Функция СоздатьПолеФормы(
        Знач Имя, Знач ПараметрыПоля, Знач Форма, Знач Родитель = Неопределено, Знач ЭлементВставки = Неопределено) Экспорт

    НовыйЭлемент = СоздатьЭлементыФормы(Имя, Тип("ПолеФормы"), Форма, Родитель, ЭлементВставки);

    Если ПараметрыПоля.Свойство("Вид") = Ложь Тогда
        ПараметрыПоля.Вставить("Вид", ВидПоляФормы.ПолеВвода);
    КонецЕсли;

    ЗаполнитьЗначенияСвойств(НовыйЭлемент, ПараметрыПоля);

    Возврат НовыйЭлемент;
КонецФункции

// Параметры:
//  Имя - Строка
//  ПараметрыГруппы - Структура
//  Форма - ФормаКлиентскогоПриложения
//  Родитель - Строка, Неопределено - Имя родительского элемента
//  ЭлементВставки - Строка, Неопределено
// Возвращаемое значение:
//  - ЭлементФормы
Функция СоздатьГруппуФормы(
        Знач Имя, Знач ПараметрыГруппы, Знач Форма, Знач Родитель = Неопределено, Знач ЭлементВставки = Неопределено) Экспорт

    НовыйЭлемент = СоздатьЭлементыФормы(Имя, Тип("ГруппаФормы"), Форма, Родитель, ЭлементВставки);

    Если ПараметрыГруппы.Свойство("Вид") = Ложь Тогда
        ПараметрыГруппы.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
    КонецЕсли;

    ЗаполнитьЗначенияСвойств(НовыйЭлемент, ПараметрыГруппы);

    Возврат НовыйЭлемент;
КонецФункции

// Параметры:
//  Имя - Строка
//  ПараметрыГруппы - Структура
//  Форма - ФормаКлиентскогоПриложения
//  Родитель - Строка, Неопределено - Имя родительского элемента
//  ЭлементВставки - Строка, Неопределено
// Возвращаемое значение:
//  - ЭлементФормы
Функция СоздатьГруппуКнопок(
        Знач Имя, Знач ПараметрыГруппы, Знач Форма, Знач Родитель = Неопределено, Знач ЭлементВставки = Неопределено) Экспорт

    ПараметрыГруппы.Вставить("Вид", ВидГруппыФормы.ГруппаКнопок);
    Возврат СоздатьГруппуФормы(Имя, ПараметрыГруппы, Форма, Родитель, ЭлементВставки);
КонецФункции

// Параметры:
//  Имя - Строка
//  ПараметрыГруппы - Структура
//  Форма - ФормаКлиентскогоПриложения
//  Родитель - Строка, Неопределено - Имя родительского элемента
//  ЭлементВставки - Строка, Неопределено
// Возвращаемое значение:
//  - ЭлементФормы
Функция СоздатьГруппуКолонок(
        Знач Имя, Знач ПараметрыГруппы, Знач Форма, Знач Родитель = Неопределено, Знач ЭлементВставки = Неопределено) Экспорт

    ПараметрыГруппы.Вставить("Вид", ВидГруппыФормы.ГруппаКолонок);
    Возврат СоздатьГруппуФормы(Имя, ПараметрыГруппы, Форма, Родитель, ЭлементВставки);
КонецФункции

// Параметры:
//  Имя - Строка
//  ПараметрыПоля - Структура
//  Форма - ФормаКлиентскогоПриложения
//  Родитель - Строка, Неопределено - Имя родительского элемента
//  ЭлементВставки - Строка, Неопределено
// Возвращаемое значение:
//  - ЭлементФормы
Функция СоздатьПолеФлажка(
        Знач Имя, Знач ПараметрыПоля, Знач Форма, Знач Родитель = Неопределено, Знач ЭлементВставки = Неопределено) Экспорт

    НовыйЭлемент = СоздатьЭлементыФормы(Имя, Тип("ПолеФормы"), Форма, Родитель, ЭлементВставки);

    Если ПараметрыПоля.Свойство("Вид") = Ложь Тогда
        ПараметрыПоля.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
    КонецЕсли;

    Если ПараметрыПоля.Свойство("ПоложениеЗаголовка") = Ложь Тогда
        ПараметрыПоля.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Право);
    КонецЕсли;

    ЗаполнитьЗначенияСвойств(НовыйЭлемент, ПараметрыПоля);

    Возврат НовыйЭлемент;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления --
