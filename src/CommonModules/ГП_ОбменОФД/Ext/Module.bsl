// Гарант+ Килипенко 11.02.2025 [F00232767] Выгрузка в ОФД доработка ++
#Область ПрограммныйИнтерфейс

// Параметры:
//  НачалоПериода - Дата
//  КонецПериода - Дата
//  ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета, Неопределено
//  Организация - СправочникСсылка.Организации, Неопределено
//  Контрагент - СправочникСсылка.Контрагенты, Неопределено
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Ссылка - ДокументСсылка.КВП_РегистрацияОплаты
//      * Объект - СправочникСсылка.КВП_ЛицевыеСчета
//      * Контрагент - СправочникСсылка.Контрагенты
//      * Договор - СправочникСсылка.ДоговорыКонтрагентов
//      * Услуга - СправочникСсылка.КВП_Услуги
//      * ДокументОплаты - ДокументСсылка
//      * ЭтоАванс - Строка
//      * МесяцНачисления - Строка
//      * Сумма - Число
//      * Пени - Число
//      * АвансСумма - Число
//      * ДолгСумма - Число
Функция ПолучитьОбщуюТаблицуРасшифровкиОплатДляОФД(
        Знач НачалоПериода, Знач КонецПериода, Знач ЛицевойСчет = Неопределено,
        Знач Организация = Неопределено, Знач Контрагент = Неопределено) Экспорт

    Организация = ?(Организация = Неопределено, УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию(), Организация);

    Запрос = Новый Запрос;
    СОтборомПоКонтрагенту = (Контрагент <> Неопределено);
    Запрос.Текст = ПолучитьТекстЗапросаОбщейТаблицыРасшифровкиОплатДляОФД(СОтборомПоКонтрагенту);

    ДополнительныеУсловияОтбора = "ИСТИНА";
    Если ЛицевойСчет <> Неопределено И НЕ ЛицевойСчет.Пустая() Тогда
        ДополнительныеУсловияОтбора = ДополнительныеУсловияОтбора + " И РегистрацияОплатыРасшифровкаПлатежа.Объект = &ЛицевойСчет";
        Запрос.УстановитьПараметр("ЛицевойСчет", ЛицевойСчет);
    КонецЕсли;

    Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДополнительныеУсловияОтбора", ДополнительныеУсловияОтбора);

    Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
    Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
    Запрос.УстановитьПараметр("Организация", Организация);
    Запрос.УстановитьПараметр("ВидыОпераций",
        ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Перечисления.КВП_ВидыОперацийРегистрацииОплаты.ПоступлениеНаБанковскийСчет));
    Если СОтборомПоКонтрагенту = Истина Тогда
        Запрос.УстановитьПараметр("Контрагент", Контрагент);
    КонецЕсли;

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  ТаблицаРасшифровкиОплат - ТаблицаЗначений
Процедура СвернутьОбщуюТаблицуРасшифровкиОплатДляОФД(ТаблицаРасшифровкиОплат) Экспорт
    ТаблицаРасшифровкиОплат.Свернуть("Ссылка, Объект, Услуга, ЭтоАванс", "Сумма, Пени, АвансСумма, ДолгСумма");
КонецПроцедуры

// Параметры:
//  НачалоПериода - Дата
//  КонецПериода - Дата
//  ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета, Неопределено
//  Организация - СправочникСсылка.Организации, Неопределено
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Ссылка - ДокументСсылка.КВП_РегистрацияОплаты
//      * Объект - СправочникСсылка.КВП_ЛицевыеСчета
//      * Услуга - СправочникСсылка.КВП_Услуги
//      * ЭтоАванс - Строка
//      * МесяцНачисления - Строка
//      * Сумма - Число
//      * Пени - Число
//      * АвансСумма - Число
//      * ДолгСумма - Число
Функция ПолучитьСвернутуюОбщуюТаблицуРасшифровкиОплатДляОФД(
        Знач НачалоПериода, Знач КонецПериода, Знач ЛицевойСчет = Неопределено, Организация = Неопределено) Экспорт

    РезультатФункции = ПолучитьОбщуюТаблицуРасшифровкиОплатДляОФД(НачалоПериода, КонецПериода, ЛицевойСчет, Организация);
    СвернутьОбщуюТаблицуРасшифровкиОплатДляОФД(РезультатФункции);

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  НачалоПериода - Дата
//  КонецПериода - Дата
//  ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета, Неопределено
//  Организация - СправочникСсылка.Организации, Неопределено
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Ссылка - ДокументСсылка.КВП_РегистрацияОплаты
//      * Объект - СправочникСсылка.КВП_ЛицевыеСчета
//      * Сумма - Число
Функция ПолучитьТаблицуЛицевыхСчетовРегистрацииОплатДляОФД(
        Знач НачалоПериода, Знач КонецПериода, Знач ЛицевойСчет = Неопределено, Организация = Неопределено) Экспорт

    ТаблицаРасшифровкиОплатДляОФД = ПолучитьСвернутуюОбщуюТаблицуРасшифровкиОплатДляОФД(
            НачалоПериода, КонецПериода, ЛицевойСчет, Организация);

    ПоляГруппировки = "Ссылка, Объект";
    ТаблицаРасшифровкиОплатДляОФД.Свернуть(ПоляГруппировки, "Сумма");
    ТаблицаРасшифровкиОплатДляОФД.Сортировать(ПоляГруппировки);

    Возврат ТаблицаРасшифровкиОплатДляОФД;
КонецФункции

Функция СобратьДанныеЧековСчетмаш(Знач ДатаНачала, Знач ДатаОкончания, Знач СтруктураОтбора) Экспорт
    РезультатФункции = Новый Структура("ТаблицаОплат, РасшифровкаОплатДляЧеков");

    ТаблицаОплатСДопДанными = ПолучитьТаблицуОплатСчетмаш(ДатаНачала, ДатаОкончания, СтруктураОтбора);

    ПараметрыПробитияЧеков = УПЖКХ_МеханизмыПечатиЧеков.ПараметрыПробитияЧеков();

    СтруктураПараметров = Новый Структура;
    СтруктураПараметров.Вставить("ПечататьЧекиИзРегистрацииОплаты", Константы.УПЖКХ_ПечататьЧекиИзРегистрацииОплаты.Получить());
    СтруктураПараметров.Вставить("ПечататьЧекиСРасшифровкойПоУслугам", Константы.УПЖКХ_ПечататьЧекиСРасшифровкойПоУслугам.Получить());
    СтруктураПараметров.Вставить("ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО",
        ПолучитьПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахСчетмаш());
    СтруктураПараметров.Вставить("УказыватьВЧекеПризнакАгентаВПлатежах", ПараметрыПробитияЧеков.УказыватьВЧекеПризнакАгентаВПлатежах);
    СтруктураПараметров.Вставить("РассчитыватьКоличествоИЦенуВПлатежах", ПараметрыПробитияЧеков.РассчитыватьКоличествоИЦенуВПлатежах);

    // В таблице расшифровок оплат использована свёртка по видам услуг, размерам НДС.
    КолонкиТаблицыОплат = "Организация, Документ, Контрагент, ЛицевойСчет, ВариантРаспределенияОплатКапРемонт";
    РезультатФункции.ТаблицаОплат = ТаблицаОплатСДопДанными.Скопировать(, КолонкиТаблицыОплат);
    РезультатФункции.ТаблицаОплат.Свернуть(КолонкиТаблицыОплат);
    РасшифровкаОплатДляЧеков = ПолучитьРасшифровкуОплатДляЧековСчетмаш(РезультатФункции.ТаблицаОплат, СтруктураПараметров);

    КолонкиТаблицыОплат = "Документ, Контрагент, ВариантРаспределенияОплатКапРемонт";
    ТаблицаОплатСДопДанными = ТаблицаОплатСДопДанными.Скопировать(, КолонкиТаблицыОплат + ", Сумма");
    РезультатФункции.ТаблицаОплат = ТаблицаОплатСДопДанными;
    РезультатФункции.ТаблицаОплат.Свернуть(КолонкиТаблицыОплат, "Сумма");
    РезультатФункции.РасшифровкаОплатДляЧеков = РасшифровкаОплатДляЧеков;

    // Переименование колонки контрагента
    РезультатФункции.РасшифровкаОплатДляЧеков.Колонки.КонтрагентДокументаОплаты.Имя = "Контрагент";

    Возврат РезультатФункции;
КонецФункции

Функция ПолучитьПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахСчетмаш() Экспорт
    ПризнакСпособаРасчета_ПоУмолчанию = Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой;

    ПризнакСпособаРасчета = Константы.УПЖКХ_ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО.Получить();

    Если НЕ ЗначениеЗаполнено(ПризнакСпособаРасчета) Тогда
        ПризнакСпособаРасчета = ПризнакСпособаРасчета_ПоУмолчанию;
    КонецЕсли;

    Если НЕ (ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ОплатаКредита
            ИЛИ ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой) Тогда

        ВызватьИсключение
        "Установлено некорректное значение настройки "
        + """Признак способа расчета в платежах по оказанию услуг в чеках из документа ""Регистрация оплаты"""". "
        + "Для выбора корректного значения перейдите "
        + "в Настройки параметров учета ЖКХ (закладка ""Регистрация оплаты"").";
    КонецЕсли;

    Возврат ПризнакСпособаРасчета;
КонецФункции

// Параметры:
//  ДатаНачала - Дата
//  ДатаОкончания - Дата
//  СтруктураОтбора - Структура
//      * Организация - СправочникСсылка.Организации, Неопределено
//      * Контрагент - СправочникСсылка.Контрагенты, Неопределено
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Организация - СправочникСсылка.Организации
//      * Документ - ДокументСсылка.КВП_РегистрацияОплаты
//      * Контрагент - СправочникСсылка.Контрагенты
//      * ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета
//      * ВариантРаспределенияОплатКапРемонт
//      * Сумма - Число
Функция ПолучитьТаблицуОплатСчетмаш(Знач ДатаНачала, Знач ДатаОкончания, Знач СтруктураОтбора) Экспорт
    РезультатФункции = Неопределено;

    Организация = ?(СтруктураОтбора.Свойство("Организация") И СтруктураОтбора.Организация <> Неопределено,
            СтруктураОтбора.Организация, УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию());
    КонтрагентОтбора = ?(СтруктураОтбора.Свойство("Контрагент"), СтруктураОтбора.Контрагент, Неопределено);

    ТаблицаРасшифровкиОплат = ПолучитьОбщуюТаблицуРасшифровкиОплатДляОФД(
            ДатаНачала, ДатаОкончания, Неопределено, Организация, КонтрагентОтбора);

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   *
        |ПОМЕСТИТЬ ВТ_ТаблицаРасшифровкиОплат
        |ИЗ
        |   &ТаблицаРасшифровкиОплат КАК ТаблицаРасшифровкиОплат
        |;
        |
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   &Организация КАК Организация,
        |   ВТ_ТаблицаРасшифровкиОплат.Ссылка КАК Документ,
        |   ВТ_ТаблицаРасшифровкиОплат.Контрагент КАК Контрагент,
        // |   ВТ_ТаблицаРасшифровкиОплат.ДокументОплаты КАК ДокументОплаты,
        |   ВТ_ТаблицаРасшифровкиОплат.Объект КАК ЛицевойСчет,
        |   ВТ_ТаблицаРасшифровкиОплат.Ссылка.ВариантРаспределенияОплатКапРемонт КАК ВариантРаспределенияОплатКапРемонт,
        |   СУММА(ВТ_ТаблицаРасшифровкиОплат.Сумма) КАК Сумма
        |ИЗ
        |   ВТ_ТаблицаРасшифровкиОплат КАК ВТ_ТаблицаРасшифровкиОплат
        |СГРУППИРОВАТЬ ПО
        |   &Организация,
        |   ВТ_ТаблицаРасшифровкиОплат.Ссылка,
        |   ВТ_ТаблицаРасшифровкиОплат.Контрагент,
        |   ВТ_ТаблицаРасшифровкиОплат.Объект,
        |   ВТ_ТаблицаРасшифровкиОплат.Ссылка.ВариантРаспределенияОплатКапРемонт
        |;
        |
        |// Контроль дублей
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   ВТ_ТаблицаРасшифровкиОплат.Ссылка КАК Документ,
        |   ВТ_ТаблицаРасшифровкиОплат.Контрагент КАК Контрагент
        |ИЗ
        |   ВТ_ТаблицаРасшифровкиОплат КАК ВТ_ТаблицаРасшифровкиОплат
        |
        |СГРУППИРОВАТЬ ПО
        |   ВТ_ТаблицаРасшифровкиОплат.Ссылка,
        |   ВТ_ТаблицаРасшифровкиОплат.Контрагент
        |ИМЕЮЩИЕ
        |   КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ТаблицаРасшифровкиОплат.Контрагент) > 1
        |;";

    Запрос.УстановитьПараметр("ТаблицаРасшифровкиОплат", ТаблицаРасшифровкиОплат);
    Запрос.УстановитьПараметр("Организация", Организация);
    Если КонтрагентОтбора <> Неопределено Тогда
        Запрос.УстановитьПараметр("Контрагент", КонтрагентОтбора);
    КонецЕсли;

    РезультатПакетаЗапроса = Запрос.ВыполнитьПакет();

    РезультатФункции = РезультатПакетаЗапроса[РезультатПакетаЗапроса.Количество() - 2].Выгрузить();
    ТаблицаКонтроля = РезультатПакетаЗапроса[РезультатПакетаЗапроса.Количество() - 1].Выгрузить();

    // Контроль
    Если ТаблицаКонтроля.Количество() <> 0 Тогда
        Для Каждого СтрокаКонтроля Из ТаблицаКонтроля Цикл
            НайденныеСтрокиДляУдаления = РезультатФункции.НайтиСтроки(Новый Структура("Документ", СтрокаКонтроля.Документ));
            Для Каждого СтрокаУдаления Из НайденныеСтрокиДляУдаления Цикл
                ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
                        "Документ: ""%1"" не может быть обработан т.к. контрагент документа не соответствует строкам расшифровки",
                        СтрокаКонтроля.Документ));
                РезультатФункции.Удалить(СтрокаУдаления);
            КонецЦикла;
        КонецЦикла;
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

Функция ПолучитьРасшифровкуОплатДляЧековСчетмаш(ТаблицаОплатСДопДанными, СтруктураПараметров) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст = ПолучитьТекстЗапросаРасшифровкиОплатДляЧековСчетмаш(СтруктураПараметров);

    ТекущаяДата = ТекущаяДатаСеанса();
    СтавкаНДСПеречисление = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеОсновнойСтавкиНДСПоУмолчанию(ТекущаяДата);
    НастройкаДобровольногоСтрахования = УПЖКХ_ПараметрыУчетаСервер.ПолучитьНастройкиУчетаНачисленийПоДобровольномуСтрахованию();

    Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата);
    Запрос.УстановитьПараметр("ТаблицаОбъектов", ТаблицаОплатСДопДанными);
    Запрос.УстановитьПараметр("УслугаДобровольногоСтрахования",
        НастройкаДобровольногоСтрахования.УслугаДобровольногоСтрахования);
    Запрос.УстановитьПараметр("ВидСтавкиНДСИзПерсональныхНастроек",
        Перечисления.ВидыСтавокНДС.ВидСтавки(СтавкаНДСПеречисление));
    Запрос.УстановитьПараметр("ВестиУчетНачисленийПоДобровольномуСтрахованию",
        НастройкаДобровольногоСтрахования.ВестиУчетНачисленийПоДобровольномуСтрахованию);
    Запрос.УстановитьПараметр("ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО",
        СтруктураПараметров.ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО);

    РасшифровкаОплатДляЧеков = Запрос.Выполнить().Выгрузить();

    РасшифровкаОплатДляЧеков.Колонки.Добавить("ЗначениеСтавкиНДС", Новый ОписаниеТипов("Число"));
    РасшифровкаОплатДляЧеков.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));

    Для Каждого ТекущаяСтрока Из РасшифровкаОплатДляЧеков Цикл
        Если ТекущаяСтрока.ЭтоПени Тогда
            ТекущаяСтрока.ВидУслугиПредставление = "" + ТекущаяСтрока.ВидУслугиПредставление + " (пени)";
        КонецЕсли;

        // Расчетные ставки НДС применяются только на версиях ФФД 1.0.5 и выше,
        // для платежей по авансу за услуги, не относящимся к услугам добровольного страхования.
        ЭтоВерсия105 = Ложь; // !!! Уточнить !!! в текущем api нет vat120
        ПрименяютсяРасчетныеСтавкиНДС = ЭтоВерсия105
            И ТекущаяСтрока.ЭтоАванс
            И НЕ ТекущаяСтрока.ЭтоДобровольноеСтрахование;

        СтавкаНДССУчетомУСН = УПЖКХ_НалоговыйУчетУСН.СтавкаНДС(ТекущаяСтрока.МесяцНачисления,
                ТекущаяСтрока.Документ.Организация,
                ТекущаяСтрока.ВидСтавкиНДС);

        ТекущаяСтрока.СтавкаНДС = СтавкаНДССУчетомУСН;
        Если ПрименяютсяРасчетныеСтавкиНДС И НЕ Перечисления.СтавкиНДС.ЭтоРасчетнаяСтавкаНДС(СтавкаНДССУчетомУСН) Тогда
            ТекущаяРасчетнаяСтавкаНДС =  УПЖКХ_ТиповыеМетодыВызовСервера.РасчетнаяСтавкаНДС(СтавкаНДССУчетомУСН);
            ТекущаяСтрока.СтавкаНДС = ?(ТекущаяРасчетнаяСтавкаНДС = Неопределено,
                ТекущаяСтрока.СтавкаНДС, ТекущаяРасчетнаяСтавкаНДС);
        КонецЕсли;

        ТекущаяСтрока.ЗначениеСтавкиНДС = УПЖКХ_ОбщегоНазначенияСервер.ОпределитьСтавкуНДСВСтрокеОплатЧека(ТекущаяСтрока.ВидСтавкиНДС,
                ТекущаяДата,
                ПрименяютсяРасчетныеСтавкиНДС,
                СтавкаНДССУчетомУСН);
    КонецЦикла;

    // Колонка не используется в дальнейших операциях печати чека.
    РасшифровкаОплатДляЧеков.Колонки.Удалить("ВидСтавкиНДС");

    СвернутьТаблицуРасшифровкаОплатДляЧековСчетмашПоТарифамУслуг(РасшифровкаОплатДляЧеков);

    Возврат РасшифровкаОплатДляЧеков;
КонецФункции

// Параметры:
//  РасшифровкаОплатДляЧеков - ТаблицаЗначений
// Возвращаемое значение:
//  - Булево - Истина если процесс сворачивания выполнялся
Функция СвернутьТаблицуРасшифровкаОплатДляЧековСчетмашПоТарифамУслуг(РасшифровкаОплатДляЧеков) Экспорт
    КолонкиСворачивания = Новый Массив;
    КолонкиСворачивания.Добавить("Документ");
    КолонкиСворачивания.Добавить("КонтрагентДокументаОплаты");
    // КолонкиСворачивания.Добавить("ЛицевойСчет");
    КолонкиСворачивания.Добавить("Услуга");
    КолонкиСворачивания.Добавить("ВидУслуги");
    КолонкиСворачивания.Добавить("ВидУслугиПредставление");
    КолонкиСворачивания.Добавить("ЗначениеСтавкиНДС");
    КолонкиСворачивания.Добавить("СтавкаНДС");
    КолонкиСворачивания.Добавить("ЭтоПени");
    КолонкиСворачивания.Добавить("ЭтоАванс");
    КолонкиСворачивания.Добавить("ПризнакПредметаРасчета");
    КолонкиСворачивания.Добавить("ПризнакСпособаРасчета");
    // КолонкиСворачивания.Добавить("Тариф");
    КолонкиСворачивания.Добавить("ЭтоДобровольноеСтрахование");
    КолонкиСворачивания.Добавить("УказыватьВЧекеПризнакАгентаВПлатежах");

    КолонкиСуммирования = Новый Массив;
    КолонкиСуммирования.Добавить("Сумма");

    СтрокаКолонокСворачивания = ГП_ВспомогательныеФункцииКлиентСервер.МассивВСтроку(КолонкиСворачивания, ", ");
    СтрокаКолонокСуммирования = ГП_ВспомогательныеФункцииКлиентСервер.МассивВСтроку(КолонкиСуммирования, ", ");

    РасшифровкаОплатДляЧеков.Свернуть(СтрокаКолонокСворачивания, СтрокаКолонокСуммирования);

    // Установка Тариф = Сумма
    РасшифровкаОплатДляЧеков.Колонки.Добавить("Тариф", Новый ОписаниеТипов("Число"));
    Для Каждого ТекущаяСтрокаРасшифровки Из РасшифровкаОплатДляЧеков Цикл
    	ТекущаяСтрокаРасшифровки.Тариф = ТекущаяСтрокаРасшифровки.Сумма;
    КонецЦикла;

    Возврат Истина;
КонецФункции

// Параметры:
//  ДанныеДокумента - Структура
//      * Дата - Дата
//      * Номер - Строка
//  ДанныеКонтрагента - Структура
//      * Код - Строка
//  ПрефиксНомераДокумента - Строка, Неопределено
// Возвращаемое значение:
//  - Строка
Функция СформироватьВнешнийИдентификаторЧекаСчетмаш(
        Знач ДанныеДокумента, Знач ДанныеКонтрагента, Знач ПрефиксНомераДокумента = Неопределено) Экспорт

    ПрефиксНомераДокумента = ?(ПрефиксНомераДокумента = Неопределено ИЛИ ПустаяСтрока(ПрефиксНомераДокумента),
        "", СтрШаблон("#DOC-%1#_", Строка(ПрефиксНомераДокумента)));

    ПредставлениеДатыДокумента = Формат(ДанныеДокумента.Дата, "ДФ=ггг");
    ПредставлениеДатыДокумента = ПредставлениеДатыДокумента + Формат(ДанныеДокумента.Дата, "ДФ=ММ");
    ПредставлениеДатыДокумента = ПредставлениеДатыДокумента + Формат(ДанныеДокумента.Дата, "ДФ=дд");

    ПредставлениеНомераДокумента = СтрШаблон("%1%2", ПрефиксНомераДокумента, ДанныеДокумента.Номер);

    РезультатФункции = СтрШаблон("%2%1%3%1%4", "_", ПредставлениеДатыДокумента, ПредставлениеНомераДокумента, ДанныеКонтрагента.Код);
    РезультатФункции = РезультатФункции + "_V2"; // Добавление суффикса для избежания возможных коллизий со старыми ИД (по л/с)

    Возврат РезультатФункции;
КонецФункции

// Устарела. Не используется
// Параметры:
//  ДанныеДокумента - Структура
//      * Дата - Дата
//      * Номер - Строка
//  ДанныеКонтрагента - Структура
//      * Код - Строка
//  ИдентификаторМагазина - Строка, Число
// Возвращаемое значение:
//  - Строка
Функция Удалить_СформироватьВнешнийИдентификаторЧекаСчетмаш(
        Знач ДанныеДокумента, Знач ДанныеКонтрагента, Знач ИдентификаторМагазина) Экспорт

    ПредставлениеДатыДокумента = Формат(ДанныеДокумента.Дата, "ДФ=гг");

    Если ПустаяСтрока(ИдентификаторМагазина)
            ИЛИ (ТипЗнч(ИдентификаторМагазина) <> Тип("Строка") И ТипЗнч(ИдентификаторМагазина) <> Тип("Число")) Тогда
        ВызватьИсключение("Ошибка при формировании внешнего идентификатора Счетмаш. Не заполнен ""Идентификатор магазина"".");

    ИначеЕсли ТипЗнч(ИдентификаторМагазина) = Тип("Число") Тогда
        ИдентификаторМагазина = Формат(ИдентификаторМагазина, "ЧРГ=0");
    КонецЕсли;

    РезультатФункции = СтрШаблон("%2%1%3%1%4", "_", ПредставлениеДатыДокумента, ДанныеДокумента.Номер, ДанныеКонтрагента.Код);
    РезультатФункции = РезультатФункции + "_V2"; // Добавление суффикса для избежания возможных коллизий со старыми ИД (по л/с)
    РезультатФункции = СтрШаблон("%1_%2", ИдентификаторМагазина, РезультатФункции);
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 11.02.2025 [F00232767] Выгрузка в ОФД доработка --

// Гарант+ Килипенко 11.02.2025 [F00232767] Выгрузка в ОФД доработка ++
#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстЗапросаОбщейТаблицыРасшифровкиОплатДляОФД(Знач СОтборомПоКонтрагенту = Ложь)
    ТекстЗапроса =
        "ВЫБРАТЬ
        |	РегистрацияОплатыРасшифровкаПлатежа.Ссылка КАК Ссылка,
        |	РегистрацияОплатыРасшифровкаПлатежа.Объект КАК Объект,
        |	ЕСТЬNULL(РегистрацияОплатыРасшифровкаПлатежа.Сумма, 0) КАК Сумма,
        |	РегистрацияОплатыРасшифровкаПлатежа.Услуга КАК Услуга,
        |	РегистрацияОплатыРасшифровкаПлатежа.МесяцНачисления КАК МесяцНачисления,
        |	ЕСТЬNULL(РегистрацияОплатыРасшифровкаПлатежа.Пени, 0) КАК Пени,
        |	ЕСТЬNULL(РегистрацияОплатыРасшифровкаПлатежа.АвансСумма, 0) КАК АвансСумма,
        |	ЕСТЬNULL(РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма, 0) КАК ДолгСумма,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма, 0) = 0
        |				И ЕСТЬNULL(РегистрацияОплатыРасшифровкаПлатежа.Сумма, 0) > 0
        |			ТОГДА ""Да""
        |		ИНАЧЕ ""Нет""
        |	КОНЕЦ КАК ЭтоАванс
        |ПОМЕСТИТЬ ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка
        |ИЗ
        |	Документ.КВП_РегистрацияОплаты.РасшифровкаПлатежа КАК РегистрацияОплатыРасшифровкаПлатежа
        |ГДЕ
        |	РегистрацияОплатыРасшифровкаПлатежа.Ссылка.Дата >= &НачалоПериода
        |	И РегистрацияОплатыРасшифровкаПлатежа.Ссылка.Дата <= &КонецПериода
        |	И РегистрацияОплатыРасшифровкаПлатежа.Ссылка.Проведен = ИСТИНА
        |	И РегистрацияОплатыРасшифровкаПлатежа.Ссылка.Организация = &Организация
        |	И РегистрацияОплатыРасшифровкаПлатежа.Ссылка.ВидОперации В (&ВидыОпераций)
        |	И &ДополнительныеУсловияОтбора
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	РегистрацияОплатыЛицевыеСчета.Ссылка КАК Ссылка,
        |	РегистрацияОплатыЛицевыеСчета.Объект КАК Объект,
        |	МАКСИМУМ(РегистрацияОплатыЛицевыеСчета.ДокументОплаты) КАК ДокументОплаты
        |ПОМЕСТИТЬ ВТ_РегистрацияОплатыЛицевыеСчета
        |ИЗ
        |	Документ.КВП_РегистрацияОплаты.ЛицевыеСчета КАК РегистрацияОплатыЛицевыеСчета
        |ГДЕ
        |	(РегистрацияОплатыЛицевыеСчета.Ссылка, РегистрацияОплатыЛицевыеСчета.Объект) В
        |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
        |				Т.Ссылка,
        |				Т.Объект
        |			ИЗ
        |				ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка КАК Т)
        |
        |СГРУППИРОВАТЬ ПО
        |	РегистрацияОплатыЛицевыеСчета.Ссылка,
        |	РегистрацияОплатыЛицевыеСчета.Объект
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка.*,
        |	ВЫБОР
        |		КОГДА ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка.Ссылка.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
        |			ТОГДА ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка.Ссылка.Контрагент
        |		ИНАЧЕ
        |			ЕСТЬNULL(ВТ_РегистрацияОплатыЛицевыеСчета.ДокументОплаты.ДоговорКонтрагента.Владелец, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
        |	КОНЕЦ КАК Контрагент,
        |	ЕСТЬNULL(ВТ_РегистрацияОплатыЛицевыеСчета.ДокументОплаты.ДоговорКонтрагента, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК Договор,
        |	ВТ_РегистрацияОплатыЛицевыеСчета.ДокументОплаты КАК ДокументОплаты
        |ПОМЕСТИТЬ ВТ_РегистрацияОплатыРасшифровкаПлатежа
        |ИЗ
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка КАК ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_РегистрацияОплатыЛицевыеСчета КАК ВТ_РегистрацияОплатыЛицевыеСчета
        |		ПО ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка.Ссылка = ВТ_РегистрацияОплатыЛицевыеСчета.Ссылка
        |			И ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка.Объект = ВТ_РегистрацияОплатыЛицевыеСчета.Объект
        |ГДЕ
        |	ВЫБОР
        |		КОГДА ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка.Ссылка.ГП_ОплатаОтПокупателяФизЛица = ИСТИНА ТОГДА ИСТИНА
        |		КОГДА ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка.Ссылка.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
        |			ТОГДА
        |				// Только физ. лица
        |				ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка.Ссылка.Контрагент.ЮридическоеФизическоеЛицо
        |					= ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
        |						И НЕ ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка.Ссылка.Контрагент.ИндивидуальныйПредприниматель
        |						И НЕ ВТ_РегистрацияОплатыРасшифровкаПлатежа_Подготовка.Ссылка.Контрагент.Самозанятый
        |		ИНАЧЕ
        |			ВЫБОР
        |				КОГДА
        |					ЕСТЬNULL(ВТ_РегистрацияОплатыЛицевыеСчета.ДокументОплаты.ДоговорКонтрагента.Владелец, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
        |							= ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА ЛОЖЬ
        |				ИНАЧЕ
        |					// Только физ. лица
        |					ВТ_РегистрацияОплатыЛицевыеСчета.ДокументОплаты.ДоговорКонтрагента.Владелец.ЮридическоеФизическоеЛицо
        |						= ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
        |							И НЕ ВТ_РегистрацияОплатыЛицевыеСчета.ДокументОплаты.ДоговорКонтрагента.Владелец.ИндивидуальныйПредприниматель
        |							И НЕ ВТ_РегистрацияОплатыЛицевыеСчета.ДокументОплаты.ДоговорКонтрагента.Владелец.Самозанятый
        |			КОНЕЦ
        |	КОНЕЦ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.Ссылка КАК Ссылка,
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.Объект КАК Объект,
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.Услуга КАК Услуга,
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.ЭтоАванс КАК ЭтоАванс,
        |   ВТ_РегистрацияОплатыРасшифровкаПлатежа.МесяцНачисления КАК МесяцНачисления,
        |	СУММА(ВТ_РегистрацияОплатыРасшифровкаПлатежа.Сумма) КАК Сумма,
        |	СУММА(ВТ_РегистрацияОплатыРасшифровкаПлатежа.Пени) КАК Пени,
        |	СУММА(ВТ_РегистрацияОплатыРасшифровкаПлатежа.АвансСумма) КАК АвансСумма,
        |	СУММА(ВТ_РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма) КАК ДолгСумма,
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.ДокументОплаты КАК ДокументОплаты,
        |   ВТ_РегистрацияОплатыРасшифровкаПлатежа.Контрагент КАК Контрагент,
        |   ВТ_РегистрацияОплатыРасшифровкаПлатежа.Договор КАК Договор
        |ИЗ
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа КАК ВТ_РегистрацияОплатыРасшифровкаПлатежа
        |
        |СГРУППИРОВАТЬ ПО
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.Ссылка,
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.Объект,
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.ЭтоАванс,
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.Услуга,
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.ДокументОплаты,
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.Контрагент,
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.Договор,
        |	ВТ_РегистрацияОплатыРасшифровкаПлатежа.МесяцНачисления
        |ИМЕЮЩИЕ
        |   ИСТИНА
        |";

    Если СОтборомПоКонтрагенту = Истина Тогда
        ТекстЗапроса = ТекстЗапроса +
            "
            |   И ВТ_РегистрацияОплатыРасшифровкаПлатежа.Контрагент = &Контрагент
            |";
    КонецЕсли;

    Возврат ТекстЗапроса;
КонецФункции

// Возвращаемое значение:
//  - Строка
Функция ПолучитьТекстЗапросаРасшифровкиОплатДляЧековСчетмаш(Знач Удалить_СтруктураПараметров)
    ТекстЗапроса =
        "ВЫБРАТЬ
        |	ТаблицаОбъектов.Организация КАК Организация,
        |	ТаблицаОбъектов.Документ КАК Документ,
        |	ТаблицаОбъектов.Контрагент КАК КонтрагентДокументаОплаты,
        |	ТаблицаОбъектов.ЛицевойСчет КАК ЛицевойСчет,
        |	ТаблицаОбъектов.ВариантРаспределенияОплатКапРемонт КАК ВариантРаспределенияОплатКапРемонт
        |ПОМЕСТИТЬ ТаблицаОбъектов
        |ИЗ
        |	&ТаблицаОбъектов КАК ТаблицаОбъектов
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КВП_УчетнаяПолитикаТСЖСрезПоследних.Организация КАК Организация,
        |	ВЫБОР
        |		КОГДА КВП_УчетнаяПолитикаТСЖСрезПоследних.СтавкаНДСДляОтраженияПени = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_СтавкиНДСДляПениПриОтраженииВРеглУчете.БезНДС)
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ КАК ОтражатьПениПоСтавкеБезНДС
        |ПОМЕСТИТЬ врОтражатьПениПоСтавкеБезНДС
        |ИЗ
        |	РегистрСведений.КВП_УчетнаяПолитикаТСЖ.СрезПоследних(
        |			&ТекущаяДата,
        |			Организация В
        |				(ВЫБРАТЬ
        |					ТаблицаОбъектов.Организация КАК ДокументОрганизация
        |				ИЗ
        |					ТаблицаОбъектов КАК ТаблицаОбъектов)) КАК КВП_УчетнаяПолитикаТСЖСрезПоследних
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ТаблицаОбъектов.Документ КАК Документ,
        |	ТаблицаОбъектов.Организация КАК Организация,
        |	ТаблицаОбъектов.КонтрагентДокументаОплаты КАК КонтрагентДокументаОплаты,
        |	ТаблицаОбъектов.ЛицевойСчет КАК ЛицевойСчет,
        |	КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга КАК Услуга,
        |	КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги КАК ВидУслуги,
        |	ПРЕДСТАВЛЕНИЕ(КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги) КАК ВидУслугиПредставление,
        |	КВП_РегистрацияОплатыРасшифровкаПлатежа.МесяцНачисления КАК МесяцНачисления,
        |	ВЫБОР
        |		КОГДА НЕ КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги = ЗНАЧЕНИЕ(Справочник.КВП_ВидыУслуг.ПустаяСсылка)
        |				И КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги.СпособВыводаВКвитанциях = ""Тариф сворачивать, количество суммировать""
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ КАК СуммироватьКоличество,
        |	ВЫБОР
        |		КОГДА НЕ КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги = ЗНАЧЕНИЕ(Справочник.КВП_ВидыУслуг.ПустаяСсылка)
        |				И КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги.СпособВыводаВКвитанциях = ""Количество сворачивать, тариф суммировать""
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ КАК СуммироватьТариф,
        |	СУММА(ВЫБОР
        |			КОГДА НЕ КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма = 0
        |					И КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма > КВП_РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма
        |				ТОГДА КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма - КВП_РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма
        |			ИНАЧЕ 0
        |		КОНЕЦ) КАК ПереплатаПоНачислениям,
        |	СУММА(ВЫБОР
        |			КОГДА КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма = 0
        |				ТОГДА 0
        |			КОГДА КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма <= КВП_РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма
        |				ТОГДА КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма
        |			КОГДА КВП_РегистрацияОплатыРасшифровкаПлатежа.Сумма > КВП_РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма
        |				ТОГДА КВП_РегистрацияОплатыРасшифровкаПлатежа.ДолгСумма
        |			ИНАЧЕ 0
        |		КОНЕЦ + КВП_РегистрацияОплатыРасшифровкаПлатежа.Рассрочка) КАК Сумма,
        |	СУММА(КВП_РегистрацияОплатыРасшифровкаПлатежа.Пени) КАК Пени,
        |	ЕСТЬNULL(КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.Услуга.ВидСтавкиНДС, ВЫБОР
        |			КОГДА ТаблицаОбъектов.ВариантРаспределенияОплатКапРемонт = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВариантыРаспределенияОплатыПриРаздельномУчетеКР.УслугиКапРемонт)
        |				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
        |			ИНАЧЕ &ВидСтавкиНДСИзПерсональныхНастроек
        |		КОНЕЦ) КАК ВидСтавкиНДС,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.Услуга.Услуга, ИСТИНА) = ИСТИНА
        |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.Услуга)
        |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.Товар)
        |	КОНЕЦ КАК ПризнакПредметаРасчета,
        |	ВЫБОР
        |		КОГДА &ВестиУчетНачисленийПоДобровольномуСтрахованию
        |				И КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга = &УслугаДобровольногоСтрахования
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ КАК ЭтоДобровольноеСтрахование
        |ПОМЕСТИТЬ втТаблицаРасшифровка
        |ИЗ
        |	ТаблицаОбъектов КАК ТаблицаОбъектов
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КВП_РегистрацияОплаты.РасшифровкаПлатежа КАК КВП_РегистрацияОплатыРасшифровкаПлатежа
        |		ПО ТаблицаОбъектов.Документ = КВП_РегистрацияОплатыРасшифровкаПлатежа.Ссылка
        |			И ТаблицаОбъектов.ЛицевойСчет = КВП_РегистрацияОплатыРасшифровкаПлатежа.Объект
        |
        |СГРУППИРОВАТЬ ПО
        |	ТаблицаОбъектов.Документ,
        |	ТаблицаОбъектов.Организация,
        |	ТаблицаОбъектов.КонтрагентДокументаОплаты,
        |	ТаблицаОбъектов.ЛицевойСчет,
        |	КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга,
        |	КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги,
        |	КВП_РегистрацияОплатыРасшифровкаПлатежа.МесяцНачисления,
        |	ВЫБОР
        |		КОГДА НЕ КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги = ЗНАЧЕНИЕ(Справочник.КВП_ВидыУслуг.ПустаяСсылка)
        |				И (КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги.СпособВыводаВКвитанциях = ""Тариф сворачивать, количество суммировать""
        |					ИЛИ КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги.СпособВыводаВКвитанциях = ""Количество сворачивать, тариф суммировать"")
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ,
        |	ЕСТЬNULL(КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.Услуга.ВидСтавкиНДС, ВЫБОР
        |			КОГДА ТаблицаОбъектов.ВариантРаспределенияОплатКапРемонт = ЗНАЧЕНИЕ(Перечисление.УПЖКХ_ВариантыРаспределенияОплатыПриРаздельномУчетеКР.УслугиКапРемонт)
        |				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
        |			ИНАЧЕ &ВидСтавкиНДСИзПерсональныхНастроек
        |		КОНЕЦ),
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.Услуга.Услуга, ИСТИНА) = ИСТИНА
        |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.Услуга)
        |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.Товар)
        |	КОНЕЦ,
        |	ВЫБОР
        |		КОГДА НЕ КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги = ЗНАЧЕНИЕ(Справочник.КВП_ВидыУслуг.ПустаяСсылка)
        |				И КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги.СпособВыводаВКвитанциях = ""Тариф сворачивать, количество суммировать""
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ,
        |	ВЫБОР
        |		КОГДА НЕ КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги = ЗНАЧЕНИЕ(Справочник.КВП_ВидыУслуг.ПустаяСсылка)
        |				И КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга.ВидУслуги.СпособВыводаВКвитанциях = ""Количество сворачивать, тариф суммировать""
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ,
        |	ВЫБОР
        |		КОГДА &ВестиУчетНачисленийПоДобровольномуСтрахованию
        |				И КВП_РегистрацияОплатыРасшифровкаПлатежа.Услуга = &УслугаДобровольногоСтрахования
        |			ТОГДА ИСТИНА
        |		ИНАЧЕ ЛОЖЬ
        |	КОНЕЦ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	втТаблицаРасшифровка.Документ КАК Документ,
        |	втТаблицаРасшифровка.КонтрагентДокументаОплаты КАК КонтрагентДокументаОплаты,
        |	втТаблицаРасшифровка.ЛицевойСчет КАК ЛицевойСчет,
        |	втТаблицаРасшифровка.Услуга КАК Услуга,
        |	втТаблицаРасшифровка.ВидУслуги КАК ВидУслуги,
        |	втТаблицаРасшифровка.ВидУслугиПредставление КАК ВидУслугиПредставление,
        |	втТаблицаРасшифровка.МесяцНачисления КАК МесяцНачисления,
        |	втТаблицаРасшифровка.СуммироватьКоличество КАК СуммироватьКоличество,
        |	втТаблицаРасшифровка.СуммироватьТариф КАК СуммироватьТариф,
        |	втТаблицаРасшифровка.ВидСтавкиНДС КАК ВидСтавкиНДС,
        |	втТаблицаРасшифровка.ПереплатаПоНачислениям КАК Сумма,
        |	ЛОЖЬ КАК ЭтоПени,
        |	ИСТИНА КАК ЭтоАванс,
        |	втТаблицаРасшифровка.ПризнакПредметаРасчета КАК ПризнакПредметаРасчета,
        |	ЗНАЧЕНИЕ(Перечисление.ПризнакиСпособаРасчета.Аванс) КАК ПризнакСпособаРасчета,
        |	втТаблицаРасшифровка.ЭтоДобровольноеСтрахование КАК ЭтоДобровольноеСтрахование
        |ПОМЕСТИТЬ втДанныеПоВидамОплатБезТарифа
        |ИЗ
        |	втТаблицаРасшифровка КАК втТаблицаРасшифровка
        |ГДЕ
        |	втТаблицаРасшифровка.ПереплатаПоНачислениям > 0
        |	И НЕ втТаблицаРасшифровка.ЭтоДобровольноеСтрахование
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	втТаблицаРасшифровка.Документ,
        |	втТаблицаРасшифровка.КонтрагентДокументаОплаты,
        |	втТаблицаРасшифровка.ЛицевойСчет,
        |	втТаблицаРасшифровка.Услуга,
        |	втТаблицаРасшифровка.ВидУслуги,
        |	втТаблицаРасшифровка.ВидУслугиПредставление,
        |	втТаблицаРасшифровка.МесяцНачисления,
        |	втТаблицаРасшифровка.СуммироватьКоличество,
        |	втТаблицаРасшифровка.СуммироватьТариф,
        |	втТаблицаРасшифровка.ВидСтавкиНДС,
        |	втТаблицаРасшифровка.Сумма,
        |	ЛОЖЬ,
        |	ЛОЖЬ,
        |	втТаблицаРасшифровка.ПризнакПредметаРасчета,
        |	&ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО,
        |	втТаблицаРасшифровка.ЭтоДобровольноеСтрахование
        |ИЗ
        |	втТаблицаРасшифровка КАК втТаблицаРасшифровка
        |ГДЕ
        |	втТаблицаРасшифровка.Сумма > 0
        |	И НЕ втТаблицаРасшифровка.ЭтоДобровольноеСтрахование
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	втТаблицаРасшифровка.Документ,
        |	втТаблицаРасшифровка.КонтрагентДокументаОплаты,
        |	втТаблицаРасшифровка.ЛицевойСчет,
        |	втТаблицаРасшифровка.Услуга,
        |	втТаблицаРасшифровка.ВидУслуги,
        |	втТаблицаРасшифровка.ВидУслугиПредставление,
        |	втТаблицаРасшифровка.МесяцНачисления,
        |	втТаблицаРасшифровка.СуммироватьКоличество,
        |	втТаблицаРасшифровка.СуммироватьТариф,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(врОтражатьПениПоСтавкеБезНДС.ОтражатьПениПоСтавкеБезНДС, ИСТИНА) = ИСТИНА
        |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
        |		ИНАЧЕ втТаблицаРасшифровка.ВидСтавкиНДС
        |	КОНЕЦ,
        |	втТаблицаРасшифровка.Пени,
        |	ИСТИНА,
        |	ЛОЖЬ,
        |	втТаблицаРасшифровка.ПризнакПредметаРасчета,
        |	&ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО,
        |	втТаблицаРасшифровка.ЭтоДобровольноеСтрахование
        |ИЗ
        |	втТаблицаРасшифровка КАК втТаблицаРасшифровка
        |		ЛЕВОЕ СОЕДИНЕНИЕ врОтражатьПениПоСтавкеБезНДС КАК врОтражатьПениПоСтавкеБезНДС
        |		ПО втТаблицаРасшифровка.Организация = врОтражатьПениПоСтавкеБезНДС.Организация
        |ГДЕ
        |	втТаблицаРасшифровка.Пени > 0
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	втТаблицаРасшифровка.Документ,
        |	втТаблицаРасшифровка.КонтрагентДокументаОплаты,
        |	втТаблицаРасшифровка.ЛицевойСчет,
        |	втТаблицаРасшифровка.Услуга,
        |	втТаблицаРасшифровка.ВидУслуги,
        |	втТаблицаРасшифровка.ВидУслугиПредставление,
        |	втТаблицаРасшифровка.МесяцНачисления,
        |	втТаблицаРасшифровка.СуммироватьКоличество,
        |	втТаблицаРасшифровка.СуммироватьТариф,
        |	втТаблицаРасшифровка.ВидСтавкиНДС,
        |	ВЫБОР
        |		КОГДА втТаблицаРасшифровка.ПереплатаПоНачислениям > 0
        |			ТОГДА втТаблицаРасшифровка.ПереплатаПоНачислениям
        |		ИНАЧЕ втТаблицаРасшифровка.Сумма
        |	КОНЕЦ,
        |	ЛОЖЬ,
        |	ИСТИНА,
        |	ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.ПлатежВыплата),
        |	ЗНАЧЕНИЕ(Перечисление.ПризнакиСпособаРасчета.ПредоплатаПолная),
        |	втТаблицаРасшифровка.ЭтоДобровольноеСтрахование
        |ИЗ
        |	втТаблицаРасшифровка КАК втТаблицаРасшифровка
        |ГДЕ
        |	(втТаблицаРасшифровка.ПереплатаПоНачислениям > 0
        |			ИЛИ втТаблицаРасшифровка.Сумма > 0)
        |	И втТаблицаРасшифровка.ЭтоДобровольноеСтрахование
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |УНИЧТОЖИТЬ втТаблицаРасшифровка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |УНИЧТОЖИТЬ врОтражатьПениПоСтавкеБезНДС";

    ТекстЗапроса = ТекстЗапроса + "
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////";

    ТекстЗапроса = ТекстЗапроса + "
        |ВЫБРАТЬ РАЗЛИЧНЫЕ
        |	втДанныеПоВидамОплатБезТарифа.Документ КАК Документ,
        |	КВП_РегистрацияОплаты.Дата КАК Дата,
        |	втДанныеПоВидамОплатБезТарифа.КонтрагентДокументаОплаты КАК КонтрагентДокументаОплаты,
        |	втДанныеПоВидамОплатБезТарифа.ЛицевойСчет КАК ЛицевойСчет,
        |	втДанныеПоВидамОплатБезТарифа.Услуга КАК Услуга,
        |	втДанныеПоВидамОплатБезТарифа.МесяцНачисления КАК МесяцНачисления,
        |	втДанныеПоВидамОплатБезТарифа.ЭтоПени КАК ЭтоПени
        |ПОМЕСТИТЬ втТаблицаРасшифровкаДляТарифаИОбъема
        |ИЗ
        |	втДанныеПоВидамОплатБезТарифа КАК втДанныеПоВидамОплатБезТарифа
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КВП_РегистрацияОплаты КАК КВП_РегистрацияОплаты
        |		ПО втДанныеПоВидамОплатБезТарифа.Документ = КВП_РегистрацияОплаты.Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |" + УПЖКХ_ОбщегоНазначенияСервер.ИнформацияОТарифахПоПлатежамЧека_ТекстЗапроса() + "
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |УНИЧТОЖИТЬ втТаблицаРасшифровкаДляТарифаИОбъема
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	втДанныеПоВидамОплатБезТарифа.Документ КАК Документ,
        |	втДанныеПоВидамОплатБезТарифа.КонтрагентДокументаОплаты КАК КонтрагентДокументаОплаты,
        |	втДанныеПоВидамОплатБезТарифа.ЛицевойСчет КАК ЛицевойСчет,
        |	втДанныеПоВидамОплатБезТарифа.Услуга КАК Услуга,
        |	втДанныеПоВидамОплатБезТарифа.ВидУслуги КАК ВидУслуги,
        |	втДанныеПоВидамОплатБезТарифа.ВидУслугиПредставление КАК ВидУслугиПредставление,
        |	втДанныеПоВидамОплатБезТарифа.СуммироватьКоличество КАК СуммироватьКоличество,
        |	втДанныеПоВидамОплатБезТарифа.СуммироватьТариф КАК СуммироватьТариф,
        |	втДанныеПоВидамОплатБезТарифа.ВидСтавкиНДС КАК ВидСтавкиНДС,
        |	втДанныеПоВидамОплатБезТарифа.Сумма КАК Сумма,
        |	ЕСТЬNULL(втТариф.Тариф, 0) КАК Тариф,
        |	втДанныеПоВидамОплатБезТарифа.ЭтоПени КАК ЭтоПени,
        |	втДанныеПоВидамОплатБезТарифа.ЭтоАванс КАК ЭтоАванс,
        |	втДанныеПоВидамОплатБезТарифа.ПризнакПредметаРасчета КАК ПризнакПредметаРасчета,
        |	втДанныеПоВидамОплатБезТарифа.ПризнакСпособаРасчета КАК ПризнакСпособаРасчета,
        |	втДанныеПоВидамОплатБезТарифа.МесяцНачисления КАК МесяцНачисления,
        |	втДанныеПоВидамОплатБезТарифа.ЭтоДобровольноеСтрахование КАК ЭтоДобровольноеСтрахование
        |ПОМЕСТИТЬ втДанныеПоВидамОплат
        |ИЗ
        |	втДанныеПоВидамОплатБезТарифа КАК втДанныеПоВидамОплатБезТарифа
        |		ЛЕВОЕ СОЕДИНЕНИЕ втТариф КАК втТариф
        |		ПО втДанныеПоВидамОплатБезТарифа.Документ = втТариф.Документ
        |			И втДанныеПоВидамОплатБезТарифа.ЛицевойСчет = втТариф.ЛицевойСчет
        |			И втДанныеПоВидамОплатБезТарифа.Услуга = втТариф.Услуга
        |			И втДанныеПоВидамОплатБезТарифа.МесяцНачисления = втТариф.МесяцНачисления
        |;";

    ТекстЗапроса = ТекстЗапроса + "
        |
        |////////////////////////////////////////////////////////////////////////////////
        |УНИЧТОЖИТЬ втДанныеПоВидамОплатБезТарифа
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	втДанныеПоВидамОплат.Документ КАК Документ,
        |	втДанныеПоВидамОплат.КонтрагентДокументаОплаты КАК КонтрагентДокументаОплаты,
        |	втДанныеПоВидамОплат.ЛицевойСчет КАК ЛицевойСчет,
        |	втДанныеПоВидамОплат.Услуга КАК Услуга,
        |	втДанныеПоВидамОплат.ВидУслуги КАК ВидУслуги,
        |	втДанныеПоВидамОплат.ВидУслугиПредставление КАК ВидУслугиПредставление,
        |	втДанныеПоВидамОплат.ВидСтавкиНДС КАК ВидСтавкиНДС,
        |	СУММА(втДанныеПоВидамОплат.Сумма) КАК Сумма,
        |	МАКСИМУМ(втДанныеПоВидамОплат.Тариф) КАК Тариф,
        |	втДанныеПоВидамОплат.ЭтоПени КАК ЭтоПени,
        |	втДанныеПоВидамОплат.ЭтоАванс КАК ЭтоАванс,
        |	втДанныеПоВидамОплат.ПризнакПредметаРасчета КАК ПризнакПредметаРасчета,
        |	втДанныеПоВидамОплат.ПризнакСпособаРасчета КАК ПризнакСпособаРасчета,
        |	втДанныеПоВидамОплат.МесяцНачисления КАК МесяцНачисления,
        |	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование КАК ЭтоДобровольноеСтрахование
        |ПОМЕСТИТЬ врРасшифровкаОплатДляЧеков
        |ИЗ
        |	втДанныеПоВидамОплат КАК втДанныеПоВидамОплат
        |ГДЕ
        |	втДанныеПоВидамОплат.СуммироватьКоличество
        |
        |СГРУППИРОВАТЬ ПО
        |	втДанныеПоВидамОплат.Документ,
        |	втДанныеПоВидамОплат.КонтрагентДокументаОплаты,
        |	втДанныеПоВидамОплат.ЛицевойСчет,
        |	втДанныеПоВидамОплат.Услуга,
        |	втДанныеПоВидамОплат.ВидУслуги,
        |	втДанныеПоВидамОплат.ВидУслугиПредставление,
        |	втДанныеПоВидамОплат.ВидСтавкиНДС,
        |	втДанныеПоВидамОплат.ЭтоПени,
        |	втДанныеПоВидамОплат.ЭтоАванс,
        |	втДанныеПоВидамОплат.ПризнакПредметаРасчета,
        |	втДанныеПоВидамОплат.ПризнакСпособаРасчета,
        |	втДанныеПоВидамОплат.МесяцНачисления,
        |	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	втДанныеПоВидамОплат.Документ,
        |	втДанныеПоВидамОплат.КонтрагентДокументаОплаты,
        |	втДанныеПоВидамОплат.ЛицевойСчет,
        |	втДанныеПоВидамОплат.Услуга,
        |	втДанныеПоВидамОплат.ВидУслуги,
        |	втДанныеПоВидамОплат.ВидУслугиПредставление,
        |	втДанныеПоВидамОплат.ВидСтавкиНДС,
        |	СУММА(втДанныеПоВидамОплат.Сумма),
        |	СУММА(втДанныеПоВидамОплат.Тариф),
        |	втДанныеПоВидамОплат.ЭтоПени,
        |	втДанныеПоВидамОплат.ЭтоАванс,
        |	втДанныеПоВидамОплат.ПризнакПредметаРасчета,
        |	втДанныеПоВидамОплат.ПризнакСпособаРасчета,
        |	втДанныеПоВидамОплат.МесяцНачисления,
        |	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование
        |ИЗ
        |	втДанныеПоВидамОплат КАК втДанныеПоВидамОплат
        |ГДЕ
        |	втДанныеПоВидамОплат.СуммироватьТариф
        |
        |СГРУППИРОВАТЬ ПО
        |	втДанныеПоВидамОплат.Документ,
        |	втДанныеПоВидамОплат.КонтрагентДокументаОплаты,
        |	втДанныеПоВидамОплат.ЛицевойСчет,
        |	втДанныеПоВидамОплат.Услуга,
        |	втДанныеПоВидамОплат.ВидУслуги,
        |	втДанныеПоВидамОплат.ВидСтавкиНДС,
        |	втДанныеПоВидамОплат.ЭтоПени,
        |	втДанныеПоВидамОплат.ЭтоАванс,
        |	втДанныеПоВидамОплат.ПризнакПредметаРасчета,
        |	втДанныеПоВидамОплат.ПризнакСпособаРасчета,
        |	втДанныеПоВидамОплат.ВидУслугиПредставление,
        |	втДанныеПоВидамОплат.МесяцНачисления,
        |	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	втДанныеПоВидамОплат.Документ,
        |	втДанныеПоВидамОплат.КонтрагентДокументаОплаты,
        |	втДанныеПоВидамОплат.ЛицевойСчет,
        |	втДанныеПоВидамОплат.Услуга,
        |	втДанныеПоВидамОплат.ВидУслуги,
        |	втДанныеПоВидамОплат.ВидУслугиПредставление,
        |	втДанныеПоВидамОплат.ВидСтавкиНДС,
        |	СУММА(втДанныеПоВидамОплат.Сумма),
        |	МАКСИМУМ(втДанныеПоВидамОплат.Тариф),
        |	втДанныеПоВидамОплат.ЭтоПени,
        |	втДанныеПоВидамОплат.ЭтоАванс,
        |	втДанныеПоВидамОплат.ПризнакПредметаРасчета,
        |	втДанныеПоВидамОплат.ПризнакСпособаРасчета,
        |	втДанныеПоВидамОплат.МесяцНачисления,
        |	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование
        |ИЗ
        |	втДанныеПоВидамОплат КАК втДанныеПоВидамОплат
        |ГДЕ
        |	НЕ втДанныеПоВидамОплат.СуммироватьКоличество
        |	И НЕ втДанныеПоВидамОплат.СуммироватьТариф
        |
        |СГРУППИРОВАТЬ ПО
        |	втДанныеПоВидамОплат.Документ,
        |	втДанныеПоВидамОплат.КонтрагентДокументаОплаты,
        |	втДанныеПоВидамОплат.ЛицевойСчет,
        |	втДанныеПоВидамОплат.Услуга,
        |	втДанныеПоВидамОплат.ВидУслуги,
        |	втДанныеПоВидамОплат.ВидСтавкиНДС,
        |	втДанныеПоВидамОплат.ЭтоПени,
        |	втДанныеПоВидамОплат.ЭтоАванс,
        |	втДанныеПоВидамОплат.ПризнакПредметаРасчета,
        |	втДанныеПоВидамОплат.ПризнакСпособаРасчета,
        |	втДанныеПоВидамОплат.ВидУслугиПредставление,
        |	втДанныеПоВидамОплат.МесяцНачисления,
        |	втДанныеПоВидамОплат.ЭтоДобровольноеСтрахование";

    ТекстЗапроса = ТекстЗапроса + "
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |" +
        "ВЫБРАТЬ
        |	врРасшифровкаОплатДляЧеков.Документ КАК Документ,
        |	врРасшифровкаОплатДляЧеков.КонтрагентДокументаОплаты КАК КонтрагентДокументаОплаты,
        |	врРасшифровкаОплатДляЧеков.ЛицевойСчет КАК ЛицевойСчет,
        |	врРасшифровкаОплатДляЧеков.Услуга КАК Услуга,
        |	врРасшифровкаОплатДляЧеков.ВидУслуги КАК ВидУслуги,
        |	врРасшифровкаОплатДляЧеков.ВидУслугиПредставление КАК ВидУслугиПредставление,
        |	врРасшифровкаОплатДляЧеков.ВидСтавкиНДС КАК ВидСтавкиНДС,
        |	врРасшифровкаОплатДляЧеков.Сумма КАК Сумма,
        |	врРасшифровкаОплатДляЧеков.ЭтоПени КАК ЭтоПени,
        |	врРасшифровкаОплатДляЧеков.ЭтоАванс КАК ЭтоАванс,
        |	врРасшифровкаОплатДляЧеков.ПризнакПредметаРасчета КАК ПризнакПредметаРасчета,
        |	врРасшифровкаОплатДляЧеков.ПризнакСпособаРасчета КАК ПризнакСпособаРасчета,
        |	врРасшифровкаОплатДляЧеков.Тариф КАК Тариф,
        |	врРасшифровкаОплатДляЧеков.ЭтоДобровольноеСтрахование КАК ЭтоДобровольноеСтрахование,
        |	врРасшифровкаОплатДляЧеков.МесяцНачисления КАК МесяцНачисления,
        |	ЛОЖЬ КАК УказыватьВЧекеПризнакАгентаВПлатежах
        |ИЗ
        |	врРасшифровкаОплатДляЧеков КАК врРасшифровкаОплатДляЧеков
        |";

    Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 11.02.2025 [F00232767] Выгрузка в ОФД доработка --
