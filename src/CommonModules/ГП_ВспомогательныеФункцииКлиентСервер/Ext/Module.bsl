#Область ПрограммныйИнтерфейс

// Параметры:
//  МассивЭлементов - Массив из Строка
//  Разделитель - Строка
// Возвращаемое значение:
//  - Строка
Функция МассивВСтроку(Знач МассивЭлементов, Знач Разделитель) Экспорт
    РезультатФункции = "";

    Для Каждого ТекущийЭлемент Из МассивЭлементов Цикл
        РезультатФункции = СтрШаблон("%2%1%3", Разделитель, РезультатФункции, Строка(ТекущийЭлемент));
    КонецЦикла;
    Если СтрДлина(РезультатФункции) > 0 Тогда
        РезультатФункции = Сред(РезультатФункции, СтрДлина(Разделитель) + 1);
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  Значение - Число
// Возвращаемое значение:
//  - Число
Функция АбсолютноеЗначение(Знач Значение) Экспорт
    Возврат Макс(Значение, -Значение);
КонецФункции

// Параметры:
//  ИсходныйМассив - Массив из Произвольный
//  ЭлементыДляУдаления - Массив из Произвольный
// Возвращаемое значение:
//  - Число - Количество удаленных элементов из исходного массива
Функция УдалитьЭлементыМассива(ИсходныйМассив, Знач ЭлементыДляУдаления) Экспорт
    Если ЭлементыДляУдаления.Количество() = 0 Тогда
        Возврат 0; // Нет элементов для удаления
    КонецЕсли;

    КэшЭлементовУдаления = Новый Соответствие;
    Для Каждого ТекущийЭлемент Из ЭлементыДляУдаления Цикл
        КэшЭлементовУдаления.Вставить(ТекущийЭлемент, Истина);
    КонецЦикла;

    ИндексыЭлементовДляУдаления = Новый Массив;
    Для Сч = 0 По ИсходныйМассив.Количество() - 1 Цикл
        Если КэшЭлементовУдаления.Получить(ИсходныйМассив[Сч]) = Неопределено Тогда
            Продолжить;
        КонецЕсли;

        ИндексыЭлементовДляУдаления.Добавить(Сч);
    КонецЦикла;

    ПоравкаИндекса = 0;
    Для Каждого ИндексЭлементаДляУдаления Из ИндексыЭлементовДляУдаления Цикл
        ИсходныйМассив.Удалить(ИндексЭлементаДляУдаления - ПоравкаИндекса);
        ПоравкаИндекса = ПоравкаИндекса + 1;
    КонецЦикла;

    Возврат ИндексыЭлементовДляУдаления.Количество();
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
