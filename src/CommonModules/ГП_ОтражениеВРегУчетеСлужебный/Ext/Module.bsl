// Гарант+ Килипенко 19.09.2024 [F00228718] Доработка заполнения отражения начислений в рег. учете ++
#Область СлужебныйПрограммныйИнтерфейс

// Получает данные начислений для отражения в разрезе л/с
// Параметры:
//  ДокументОтраженияОбъект - ДокументОбъект.КВП_ОтражениеНачисленийВРеглУчете
//  СтруктураНастроекКапРемонта - Структура
//  ВыводитьСообщения - Булево - Если Истина, будут выводится сообщения для строк непрошедших контроль по остаткам к отражению
// Возвращаемое значение:
//  - ТаблицаЗначений
Функция ПолучитьДанныеДляЗаполненияОтраженияПоЛицевымСчетам(
        Знач ДокументОтраженияОбъект, Знач СтруктураНастроекКапРемонта, Знач ВыводитьСообщения = Истина) Экспорт

    МВТ = Новый МенеджерВременныхТаблиц;
    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = МВТ;
    СтруктураТекстаЗапроса = ПолучитьТекстЗапросаДанныхОтраженияПоЛицевымСетам();
    Запрос.Текст = СтруктураТекстаЗапроса.ВременныеТаблицы;

    ТекстДопУсловия = "ИСТИНА";
    Если ЗначениеЗаполнено(ДокументОтраженияОбъект.Контрагент) Тогда
        Если ДокументОтраженияОбъект.Контрагент.ЭтоГруппа Тогда
            ТекстДопУсловия = ТекстДопУсловия + " И ДоговорКонтрагента.Владелец В ИЕРАРХИИ (&Контрагент)";
        Иначе
            ТекстДопУсловия = ТекстДопУсловия + " И ДоговорКонтрагента.Владелец = &Контрагент";
        КонецЕсли;
    КонецЕсли;

    Если ЗначениеЗаполнено(ДокументОтраженияОбъект.Номенклатура) Тогда
        Если ДокументОтраженияОбъект.Номенклатура.ЭтоГруппа Тогда
            ТекстДопУсловия = ТекстДопУсловия + " И Номенклатура В ИЕРАРХИИ (&Номенклатура)";
        Иначе
            ТекстДопУсловия = ТекстДопУсловия + " И Номенклатура = &Номенклатура";
        КонецЕсли;
        Запрос.УстановитьПараметр("Номенклатура", ДокументОтраженияОбъект.Номенклатура);
    КонецЕсли;

    Если ЗначениеЗаполнено(ДокументОтраженияОбъект.НоменклатурнаяГруппа) Тогда
        Если ДокументОтраженияОбъект.НоменклатурнаяГруппа.ЭтоГруппа Тогда
            ТекстДопУсловия = ТекстДопУсловия + " И НоменклатурнаяГруппа В ИЕРАРХИИ (&НоменклатурнаяГруппа)";
        Иначе
            ТекстДопУсловия = ТекстДопУсловия + " И НоменклатурнаяГруппа = &НоменклатурнаяГруппа";
        КонецЕсли;
        Запрос.УстановитьПараметр("НоменклатурнаяГруппа", ДокументОтраженияОбъект.НоменклатурнаяГруппа);
    КонецЕсли;

    Если ЗначениеЗаполнено(ДокументОтраженияОбъект.Взаиморасчеты) Тогда
        Если ДокументОтраженияОбъект.Взаиморасчеты = 1 Тогда
            ТекстДопУсловия = ТекстДопУсловия + " И НЕ ЭтоЛьгота И НЕ ЭтоПени";
        ИначеЕсли ДокументОтраженияОбъект.Взаиморасчеты = 2 Тогда
            ТекстДопУсловия = ТекстДопУсловия + " И ЭтоЛьгота";
        ИначеЕсли ДокументОтраженияОбъект.Взаиморасчеты = 3 Тогда
            ТекстДопУсловия = ТекстДопУсловия + " И ЭтоПени";
        КонецЕсли;
    КонецЕсли;

    Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстДопУсловия", ТекстДопУсловия);

    ДатаСреза = Новый Граница(КонецДня(ДокументОтраженияОбъект.Дата), ВидГраницы.Включая);
    Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
    Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДокументОтраженияОбъект.Дата));
    Запрос.УстановитьПараметр("КонецПериода", КонецДня(ДокументОтраженияОбъект.Дата));
    Запрос.УстановитьПараметр("Контрагент", ДокументОтраженияОбъект.Контрагент);
    Запрос.УстановитьПараметр("Организация", ДокументОтраженияОбъект.Организация);
    Запрос.УстановитьПараметр("ДокументОтражения", ДокументОтраженияОбъект.Ссылка);
    Запрос.УстановитьПараметр("ВедетсяРаздельныйУчетКапРемонта", СтруктураНастроекКапРемонта.ВедетсяРаздельныйУчет);
    Запрос.УстановитьПараметр("СписокНоменклатурыУслугКапРемонта", СтруктураНастроекКапРемонта.СписокНоменклатурыУслуг);

    // Формирование временных таблиц
    Запрос.Выполнить();

    Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = МВТ;
    Запрос.Текст = СтруктураТекстаЗапроса.ОсновнойЗапрос;
    Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДокументОтраженияОбъект.Дата));
    Запрос.УстановитьПараметр("КонецПериода", КонецДня(ДокументОтраженияОбъект.Дата));
    Запрос.УстановитьПараметр("ДокументОтражения", ДокументОтраженияОбъект.Ссылка);

    РезультатПакета = Запрос.ВыполнитьПакет();

    ТаблицаКонтроля = РезультатПакета[1].Выгрузить();

    // Контроль начислений выполненных ранее в период текущего отражения отражения
    Для Каждого СтрокаКонтроля Из ТаблицаКонтроля Цикл
        Если ВыводитьСообщения Тогда
            ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
                    "Внимание! Для номенклатуры: ""%1"" договора ""%2"" за период документа ранее выполнялись отражения",
                    Строка(СтрокаКонтроля.Номенклатура), Строка(СтрокаКонтроля.ДоговорКонтрагента)));
        КонецЕсли;
    КонецЦикла;

    ДанныеДляЗаполнения = РезультатПакета[0].Выгрузить();

    Возврат ДанныеДляЗаполнения;
КонецФункции

// Параметры:
//  СтруктураПараметровСтроки - Структура
//  ДанныеПоказанийСчетчиков - ТаблицаЗначений
// Возвращаемое значение:
//  - Строка
Функция СформироватьСодержаниеУслугиСУчетомЛС(Знач СтруктураПараметровСтроки, Знач ДанныеПоказанийСчетчиков) Экспорт
    НоменклатураРасшифровки = СтруктураПараметровСтроки.СтрокаРасшифровки.Номенклатура;
    НаименованиеУслугиРасшифровки = ?(ПустаяСтрока(НоменклатураРасшифровки.НаименованиеПолное),
            НоменклатураРасшифровки.Наименование, НоменклатураРасшифровки.НаименованиеПолное);

    // Замена наименования номенклатуры для содержания (Замена выполняется в соответствии с ТЗ)
    // Изменение функционала замены синонимов выполнен по пожеланию Клиента
    //  Теперь синоним используется только для Канализации
    СинонимНегативногоВоздействия = "Водоотведение";
    Если СтрПодобнаПоРегулярномуВыражению(НаименованиеУслугиРасшифровки, "Канализация.*") Тогда
        НаименованиеУслугиРасшифровки = СинонимНегативногоВоздействия;
    КонецЕсли;

    ЛицевойСчетРасшифровки = СтруктураПараметровСтроки.СтрокаРасшифровки.lc_ЛицевойСчет;
    НаименованиеЗданияРасшифровки = ?(ЗначениеЗаполнено(ЛицевойСчетРасшифровки),
        ГП_РаботаСЛицевымиСчетами.ПолучитьНаименованиеЗданияЛицевогоСчета(ЛицевойСчетРасшифровки),
        Неопределено);

    // Добавление в содержание наименование здания л/с
    Если НаименованиеЗданияРасшифровки <> Неопределено Тогда
        Если ПустаяСтрока(НаименованиеЗданияРасшифровки) Тогда
            НаименованиеЗданияРасшифровки = "<>";
        КонецЕсли;

        НаименованиеУслугиРасшифровки = СтрШаблон("%1, %2",
                НаименованиеУслугиРасшифровки, НаименованиеЗданияРасшифровки);
    КонецЕсли;

    // !!! Требуется уточнить, возможно это лишнее т.к. при сопоставлении содержания платежей с л/с периодичность не учитывается
    // Формирование содержания с учетом периодичности.
    РезультатФункции = РаботаСНоменклатуройКлиентСерверБП.СодержаниеУслуги(НаименованиеУслугиРасшифровки,
            СтруктураПараметровСтроки.СтрокаРасшифровки.Номенклатура.ПериодичностьУслуги,
            СтруктураПараметровСтроки.ДокументОбъект.Дата);

    // Дополнение содержания признаком ОтражениеПени
    Если СтруктураПараметровСтроки.Свойство("ОтражениеПени") И СтруктураПараметровСтроки.ОтражениеПени Тогда
        РезультатФункции = РезультатФункции + " (пени)";
    КонецЕсли;

    // Формирование данных показаний счетчиков
    Если ЗначениеЗаполнено(ЛицевойСчетРасшифровки) Тогда
        СтруктураОтбора = Новый Структура;
        СтруктураОтбора.Вставить("ЛицевойСчет", ЛицевойСчетРасшифровки);
        СтруктураОтбора.Вставить("Номенклатура", НоменклатураРасшифровки);

        РезультатПоиска = ДанныеПоказанийСчетчиков.НайтиСтроки(СтруктураОтбора);
        СтрокаПоказанийСчетчиков = "";
        Если РезультатПоиска.Количество() > 0 Тогда
            Для Каждого Показания Из РезультатПоиска Цикл
                СтрокаПоказанийСчетчиков = СтрШаблон("%1; %2",
                        СтрокаПоказанийСчетчиков, СтрШаблон("%1 - %2",
                            Показания.ПредыдущееПоказание, Показания.ТекущееПоказание));
            КонецЦикла;
        КонецЕсли;

        Если СтрДлина(СтрокаПоказанийСчетчиков) > 0 Тогда
            СтрокаПоказанийСчетчиков = СтрШаблон(", Показания счетчиков: %1", Сред(СтрокаПоказанийСчетчиков, 3));
        КонецЕсли;

        РезультатФункции = СтрШаблон("%1%2", РезультатФункции, СтрокаПоказанийСчетчиков);
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

// Устарела. Больше не используется т.к. выполнен переход на заполнение с учетом л/с
//
// Параметры:
//  ДанныеДляЗаполнения - ТаблицаЗначений
//  ТаблицаРасшифровкиНеПройденногоКонтроля - ТаблицаЗначений
// Возвращаемое значение:
//  - ТаблицаЗначений
Функция ОчиститьТаблицуДанныхОтраженияПоЛицевымСетам(Знач ДанныеДляЗаполнения, Знач ТаблицаРасшифровкиНеПройденногоКонтроля) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |   ТаблицаРасшифровкиНеПройденногоКонтроля.ДоговорКонтрагента КАК ДоговорКонтрагента,
        |   ТаблицаРасшифровкиНеПройденногоКонтроля.Номенклатура КАК Номенклатура,
        |   ТаблицаРасшифровкиНеПройденногоКонтроля.СуммаОтражения КАК СуммаОтражения
        |ПОМЕСТИТЬ ВТ_ТаблицаРасшифровкиНеПройденногоКонтроля
        |ИЗ
        |   &ТаблицаРасшифровкиНеПройденногоКонтроля КАК ТаблицаРасшифровкиНеПройденногоКонтроля
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   *
        |ПОМЕСТИТЬ ВТ_ДанныеДляЗаполнения
        |ИЗ
        |   &ДанныеДляЗаполнения КАК ДанныеДляЗаполнения
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВТ_ДанныеДляЗаполнения.Контрагент КАК Контрагент,
        |	ВТ_ДанныеДляЗаполнения.ДоговорКонтрагента КАК ДоговорКонтрагента,
        |	ВТ_ДанныеДляЗаполнения.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
        |	ВТ_ДанныеДляЗаполнения.Номенклатура КАК Номенклатура,
        |	ВТ_ДанныеДляЗаполнения.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_ДанныеДляЗаполнения.ЭтоЛьгота КАК ЭтоЛьгота,
        |	ВТ_ДанныеДляЗаполнения.ЭтоПени КАК ЭтоПени,
        |	ВТ_ДанныеДляЗаполнения.ВариантПоставкиУслуг КАК ВариантПоставкиУслуг,
        |	ВТ_ДанныеДляЗаполнения.ДоговорПоставщикаУслуг КАК ДоговорПоставщикаУслуг,
        |	ВТ_ДанныеДляЗаполнения.ЭтоКапРемонт КАК ЭтоКапРемонт,
        |   ВЫБОР
        |       КОГДА ВТ_ТаблицаРасшифровкиНеПройденногоКонтроля.Номенклатура ЕСТЬ NULL
        |           ТОГДА ВТ_ДанныеДляЗаполнения.СуммаОтражения
        |       ИНАЧЕ ЕСТЬNULL(ВТ_ТаблицаРасшифровкиНеПройденногоКонтроля.СуммаОтражения, 0)
        |   КОНЕЦ КАК СуммаОтражения,
        |	ВТ_ДанныеДляЗаполнения.Тариф КАК Тариф,
        |	ВТ_ДанныеДляЗаполнения.Количество КАК Количество,
        |	ВТ_ДанныеДляЗаполнения.ЭтоРеализация КАК ЭтоРеализация
        |ИЗ
        |   ВТ_ДанныеДляЗаполнения КАК ВТ_ДанныеДляЗаполнения
        |   ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаРасшифровкиНеПройденногоКонтроля КАК ВТ_ТаблицаРасшифровкиНеПройденногоКонтроля
        |       ПО ВТ_ДанныеДляЗаполнения.ДоговорКонтрагента = ВТ_ТаблицаРасшифровкиНеПройденногоКонтроля.ДоговорКонтрагента
        |       И ВТ_ДанныеДляЗаполнения.Номенклатура = ВТ_ТаблицаРасшифровкиНеПройденногоКонтроля.Номенклатура
        |";

    Запрос.УстановитьПараметр("ТаблицаРасшифровкиНеПройденногоКонтроля", ТаблицаРасшифровкиНеПройденногоКонтроля);
    Запрос.УстановитьПараметр("ДанныеДляЗаполнения", ДанныеДляЗаполнения);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * ВременныеТаблицы - Строка
//      * ОсновнойЗапрос - Строка
Функция ПолучитьТекстЗапросаДанныхОтраженияПоЛицевымСетам() Экспорт
    РезультатФункции = Новый Структура("ВременныеТаблицы, ОсновнойЗапрос");

    РезультатФункции.ВременныеТаблицы =
        "ВЫБРАТЬ
        |	КВП_НачислениеДляОтраженияВРеглУчетеОстатки.ДоговорКонтрагента.Владелец КАК Контрагент,
        |	КВП_НачислениеДляОтраженияВРеглУчетеОстатки.ДоговорКонтрагента КАК ДоговорКонтрагента,
        |	КВП_НачислениеДляОтраженияВРеглУчетеОстатки.Номенклатура КАК Номенклатура,
        |	КВП_НачислениеДляОтраженияВРеглУчетеОстатки.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
        |	КВП_НачислениеДляОтраженияВРеглУчетеОстатки.ГП_ЛицевойСчет КАК ГП_ЛицевойСчет,
        |   КВП_НачислениеДляОтраженияВРеглУчетеОстатки.Тариф КАК Тариф,
        |	КВП_НачислениеДляОтраженияВРеглУчетеОстатки.ЭтоЛьгота КАК ЭтоЛьгота,
        |	КВП_НачислениеДляОтраженияВРеглУчетеОстатки.ЭтоПени КАК ЭтоПени,
        |	КВП_НачислениеДляОтраженияВРеглУчетеОстатки.ВариантПоставкиУслуг КАК ВариантПоставкиУслуг,
        |	КВП_НачислениеДляОтраженияВРеглУчетеОстатки.ДоговорПоставщикаУслуг КАК ДоговорПоставщикаУслуг,
        |	КВП_НачислениеДляОтраженияВРеглУчетеОстатки.КоличествоОстаток КАК КоличествоОтражения,
        |	КВП_НачислениеДляОтраженияВРеглУчетеОстатки.СуммаОстаток КАК СуммаОтражения
        |ПОМЕСТИТЬ ВТ_ТаблицаОстатков
        |ИЗ
        |	РегистрНакопления.КВП_НачислениеДляОтраженияВРеглУчете.Остатки(
        |			&ДатаСреза,
        |			Организация = &Организация
        |				И &ТекстДопУсловия) КАК КВП_НачислениеДляОтраженияВРеглУчетеОстатки
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ДвиженияДокумента.ДоговорКонтрагента.Владелец КАК Контрагент,
        |	ДвиженияДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
        |	ДвиженияДокумента.Номенклатура КАК Номенклатура,
        |	ДвиженияДокумента.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
        |	ДвиженияДокумента.ГП_ЛицевойСчет КАК ГП_ЛицевойСчет,
        |	ДвиженияДокумента.Тариф КАК Тариф,
        |	ДвиженияДокумента.ЭтоЛьгота КАК ЭтоЛьгота,
        |	ДвиженияДокумента.ЭтоПени КАК ЭтоПени,
        |	ДвиженияДокумента.ВариантПоставкиУслуг КАК ВариантПоставкиУслуг,
        |	ДвиженияДокумента.ДоговорПоставщикаУслуг КАК ДоговорПоставщикаУслуг,
        |	СУММА(ДвиженияДокумента.Количество) КАК КоличествоОтражения,
        |	СУММА(ДвиженияДокумента.Сумма) КАК СуммаОтражения
        |ПОМЕСТИТЬ ВТ_ТаблицаДвиженийДокумента
        |ИЗ
        |	РегистрНакопления.КВП_НачислениеДляОтраженияВРеглУчете КАК ДвиженияДокумента
        |ГДЕ
        |   ДвиженияДокумента.Активность = ИСТИНА
        |	И ДвиженияДокумента.Регистратор = &ДокументОтражения
        |	И &ТекстДопУсловия
        |
        |СГРУППИРОВАТЬ ПО
        |	ДвиженияДокумента.ДоговорКонтрагента.Владелец,
        |	ДвиженияДокумента.ДоговорКонтрагента,
        |	ДвиженияДокумента.Номенклатура,
        |	ДвиженияДокумента.НоменклатурнаяГруппа,
        |	ДвиженияДокумента.ГП_ЛицевойСчет,
        |	ДвиженияДокумента.Тариф,
        |	ДвиженияДокумента.ЭтоЛьгота,
        |	ДвиженияДокумента.ЭтоПени,
        |	ДвиженияДокумента.ВариантПоставкиУслуг,
        |	ДвиженияДокумента.ДоговорПоставщикаУслуг
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ЕСТЬNULL(ТаблицаОстатков.Контрагент, ТаблицаДвиженийДокумента.Контрагент) КАК Контрагент,
        |	ЕСТЬNULL(ТаблицаОстатков.ДоговорКонтрагента, ТаблицаДвиженийДокумента.ДоговорКонтрагента) КАК ДоговорКонтрагента,
        |	ЕСТЬNULL(ТаблицаОстатков.Номенклатура, ТаблицаДвиженийДокумента.Номенклатура) КАК Номенклатура,
        |	ЕСТЬNULL(ТаблицаОстатков.НоменклатурнаяГруппа, ТаблицаДвиженийДокумента.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппа,
        |	ЕСТЬNULL(ТаблицаОстатков.ГП_ЛицевойСчет, ТаблицаДвиженийДокумента.ГП_ЛицевойСчет) КАК ГП_ЛицевойСчет,
        |	ЕСТЬNULL(ТаблицаОстатков.Тариф, ТаблицаДвиженийДокумента.Тариф) КАК Тариф,
        |	ЕСТЬNULL(ТаблицаОстатков.ЭтоЛьгота, ТаблицаДвиженийДокумента.ЭтоЛьгота) КАК ЭтоЛьгота,
        |	ЕСТЬNULL(ТаблицаОстатков.ЭтоПени, ТаблицаДвиженийДокумента.ЭтоПени) КАК ЭтоПени,
        |	ЕСТЬNULL(ТаблицаОстатков.ВариантПоставкиУслуг, ТаблицаДвиженийДокумента.ВариантПоставкиУслуг) КАК ВариантПоставкиУслуг,
        |	ЕСТЬNULL(ТаблицаОстатков.ДоговорПоставщикаУслуг, ТаблицаДвиженийДокумента.ДоговорПоставщикаУслуг) КАК ДоговорПоставщикаУслуг,
        |	ЕСТЬNULL(ТаблицаОстатков.КоличествоОтражения, 0) + ЕСТЬNULL(ТаблицаДвиженийДокумента.КоличествоОтражения, 0) КАК КоличествоОтражения,
        |	ЕСТЬNULL(ТаблицаОстатков.СуммаОтражения, 0) + ЕСТЬNULL(ТаблицаДвиженийДокумента.СуммаОтражения, 0) КАК СуммаОтражения,
        |	ЛОЖЬ КАК ЭтоКапРемонт,
        |	ЛОЖЬ КАК ЭтоРеализация
        |ПОМЕСТИТЬ ВТ_Результат
        |ИЗ
        |	ВТ_ТаблицаОстатков КАК ТаблицаОстатков
        |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ТаблицаДвиженийДокумента КАК ТаблицаДвиженийДокумента
        |		ПО (ТаблицаДвиженийДокумента.Контрагент = ТаблицаОстатков.Контрагент)
        |			И (ТаблицаДвиженийДокумента.ДоговорКонтрагента = ТаблицаОстатков.ДоговорКонтрагента)
        |			И (ТаблицаДвиженийДокумента.Номенклатура = ТаблицаОстатков.Номенклатура)
        |			И (ТаблицаДвиженийДокумента.НоменклатурнаяГруппа = ТаблицаОстатков.НоменклатурнаяГруппа)
        |			И (ТаблицаДвиженийДокумента.ГП_ЛицевойСчет = ТаблицаОстатков.ГП_ЛицевойСчет)
        |			И (ТаблицаДвиженийДокумента.Тариф = ТаблицаОстатков.Тариф)
        |			И (ТаблицаДвиженийДокумента.ЭтоЛьгота = ТаблицаОстатков.ЭтоЛьгота)
        |			И (ТаблицаДвиженийДокумента.ЭтоПени = ТаблицаОстатков.ЭтоПени)
        |			И (ТаблицаДвиженийДокумента.ВариантПоставкиУслуг = ТаблицаОстатков.ВариантПоставкиУслуг)
        |			И (ТаблицаДвиженийДокумента.ДоговорПоставщикаУслуг = ТаблицаОстатков.ДоговорПоставщикаУслуг)
        |ГДЕ
        |	ИСТИНА
        |	И ЕСТЬNULL(ТаблицаОстатков.СуммаОтражения, 0) + ЕСТЬNULL(ТаблицаДвиженийДокумента.СуммаОтражения, 0) > 0
        |
        |;";

    РезультатФункции.ОсновнойЗапрос =
        "ВЫБРАТЬ
        |	ВТ_Результат.Контрагент КАК Контрагент,
        |	ВТ_Результат.ДоговорКонтрагента КАК ДоговорКонтрагента,
        |	ВТ_Результат.Номенклатура КАК Номенклатура,
        |	ВТ_Результат.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
        |	ВТ_Результат.ГП_ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_Результат.Тариф КАК Тариф,
        |	ВТ_Результат.ЭтоЛьгота КАК ЭтоЛьгота,
        |	ВТ_Результат.ЭтоПени КАК ЭтоПени,
        |	ВТ_Результат.ВариантПоставкиУслуг КАК ВариантПоставкиУслуг,
        |	ВТ_Результат.ДоговорПоставщикаУслуг КАК ДоговорПоставщикаУслуг,
        |	ВТ_Результат.КоличествоОтражения КАК Количество,
        |	ВТ_Результат.СуммаОтражения КАК СуммаОтражения,
        |	ВТ_Результат.ЭтоКапРемонт КАК ЭтоКапРемонт,
        |	ВТ_Результат.ЭтоРеализация КАК ЭтоРеализация
        |ИЗ
        |	ВТ_Результат КАК ВТ_Результат
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_Результат.Контрагент КАК Контрагент,
        |	ВТ_Результат.ДоговорКонтрагента КАК ДоговорКонтрагента,
        |	ВТ_Результат.Номенклатура КАК Номенклатура,
        |	ВТ_Результат.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
        |	ВТ_Результат.ГП_ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_Результат.Тариф КАК Тариф,
        |	ВТ_Результат.ЭтоЛьгота КАК ЭтоЛьгота,
        |	ВТ_Результат.ЭтоПени КАК ЭтоПени,
        |	ВТ_Результат.ВариантПоставкиУслуг КАК ВариантПоставкиУслуг,
        |	ВТ_Результат.ДоговорПоставщикаУслуг КАК ДоговорПоставщикаУслуг,
        |	ВТ_Результат.КоличествоОтражения КАК Количество,
        |	ВТ_Результат.СуммаОтражения КАК СуммаОтражения,
        |	КВП_НачислениеДляОтраженияВРеглУчете.Количество КАК КоличествоОтраженное,
        |	КВП_НачислениеДляОтраженияВРеглУчете.Сумма КАК СуммаОтраженная,
        |	ВТ_Результат.ЭтоКапРемонт КАК ЭтоКапРемонт,
        |	ВТ_Результат.ЭтоРеализация КАК ЭтоРеализация
        |ИЗ
        |   ВТ_Результат КАК ВТ_Результат
        |   ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.КВП_НачислениеДляОтраженияВРеглУчете КАК КВП_НачислениеДляОтраженияВРеглУчете
        |   ПО КВП_НачислениеДляОтраженияВРеглУчете.Регистратор ССЫЛКА Документ.КВП_ОтражениеНачисленийВРеглУчете
        |       И КВП_НачислениеДляОтраженияВРеглУчете.Регистратор <> &ДокументОтражения
        |       И КВП_НачислениеДляОтраженияВРеглУчете.Период МЕЖДУ &НачалоПериода И &КонецПериода
        |       И КВП_НачислениеДляОтраженияВРеглУчете.Активность = ИСТИНА
        |       И КВП_НачислениеДляОтраженияВРеглУчете.ДоговорКонтрагента = ВТ_Результат.ДоговорКонтрагента
        |       И КВП_НачислениеДляОтраженияВРеглУчете.Номенклатура = ВТ_Результат.Номенклатура
        |       И КВП_НачислениеДляОтраженияВРеглУчете.НоменклатурнаяГруппа = ВТ_Результат.НоменклатурнаяГруппа
        |       И КВП_НачислениеДляОтраженияВРеглУчете.ГП_ЛицевойСчет = ВТ_Результат.ГП_ЛицевойСчет
        |       И КВП_НачислениеДляОтраженияВРеглУчете.Тариф = ВТ_Результат.Тариф
        |       И КВП_НачислениеДляОтраженияВРеглУчете.ЭтоЛьгота = ВТ_Результат.ЭтоЛьгота
        |       И КВП_НачислениеДляОтраженияВРеглУчете.ЭтоПени = ВТ_Результат.ЭтоПени
        |       И КВП_НачислениеДляОтраженияВРеглУчете.ВариантПоставкиУслуг = ВТ_Результат.ВариантПоставкиУслуг
        |       И КВП_НачислениеДляОтраженияВРеглУчете.ДоговорПоставщикаУслуг = ВТ_Результат.ДоговорПоставщикаУслуг
        |ГДЕ
        |   НЕ КВП_НачислениеДляОтраженияВРеглУчете.Регистратор ЕСТЬ NULL
        |";

    Возврат РезультатФункции;
КонецФункции

// Гарант+ Килипенко 23.09.2024 [F00228749] Формирование счета на оплату ++
//
// Параметры:
//  ДокументРеализацииОбъект - ДокументОбъект.РеализацияТоваровИУслуг
// Возвращаемое значение:
//  - ДокументСсылка.СчетНаОплатуПокупателю
Функция СформироватьСчетНаОплатуДокументаРеализации(Знач ДокументРеализацииОбъект) Экспорт
    СчетНаОплатуОбъект = Неопределено;
    Если ДокументРеализацииОбъект.СчетНаОплатуПокупателю.Пустая() = Ложь Тогда
        СчетНаОплатуОбъект = ДокументРеализацииОбъект.СчетНаОплатуПокупателю.ПолучитьОбъект();
        Если СчетНаОплатуОбъект.ПометкаУдаления Тогда
            СчетНаОплатуОбъект.УстановитьПометкуУдаления(Ложь);
        КонецЕсли;
        СчетНаОплатуОбъект.Товары.Очистить();
    Иначе
        СчетНаОплатуОбъект = Документы.СчетНаОплатуПокупателю.СоздатьДокумент();
    КонецЕсли;

    СчетНаОплатуОбъект.Заполнить(ДокументРеализацииОбъект.Ссылка);
    СчетНаОплатуОбъект.Дата = ДокументРеализацииОбъект.Дата;
    СчетНаОплатуОбъект.СтруктурнаяЕдиница = ДокументРеализацииОбъект.БанковскийСчетОрганизации;
    СчетНаОплатуОбъект.Записать(РежимЗаписиДокумента.Запись);
    ДокументРеализацииОбъект.СчетНаОплатуПокупателю = СчетНаОплатуОбъект.Ссылка;

    Возврат ДокументРеализацииОбъект.СчетНаОплатуПокупателю.Ссылка;
КонецФункции // Гарант+ Килипенко 23.09.2024 [F00228749] Формирование счета на оплату ++

// Печать
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетЗаказ") Тогда
        Если МассивОбъектов.Количество() = 0 Тогда
            Возврат;
        КонецЕсли;

        МассивСчетовНаОплату = ПолучитьМассивСчетовНаОплатуДокументаОтражения(МассивОбъектов[0]);

        Обработки.ПечатьСчетаНаОплату.Печать(
            МассивСчетовНаОплату,
            ПараметрыПечати,
            КоллекцияПечатныхФорм,
            ОбъектыПечати,
            ПараметрыВывода);
    КонецЕсли;
КонецПроцедуры

// Параметры:
//  ДокументСсылка - ДокументСсылка.КВП_ОтражениеНачисленийВРеглУчете
// Возвращаемое значение:
//  - Массив
Функция ПолучитьМассивСчетовНаОплатуДокументаОтражения(Знач ДокументСсылка) Экспорт
    МассивДокументовРеализации =
        Документы.КВП_ОтражениеНачисленийВРеглУчете.ПолучитьМассивДокументовРеализацияТоваровИУслуг(ДокументСсылка);

    РезультатФункции = Новый Массив;
    Для Каждого ДокументРеализацииСсылка Из МассивДокументовРеализации Цикл
        СчетНаОплатуПокупателюСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
                ДокументРеализацииСсылка, "СчетНаОплатуПокупателю");

        Если СчетНаОплатуПокупателюСсылка.Пустая() Тогда
            Продолжить;
        КонецЕсли;

        РезультатФункции.Добавить(СчетНаОплатуПокупателюСсылка);
    КонецЦикла;

    Возврат РезультатФункции;
КонецФункции

// Гарант+ Килипенко 25.10.2024 [F00229948] Показания счетчиков в документах отражения ++
//
// Параметры:
//  ДокументОтраженияСсылка - ДокументСсылка.КВП_ОтражениеНачисленийВРеглУчете
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Счетчик - СправочникСсылка.КВП_Счетчики
//      * ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета
//      * Услуга - СправочникСсылка.КВП_Услуги
//      * Номенклатура - СправочникСсылка.Номенклатура
//      * ВидПоказания - ПеречислениеСсылка
//      * Расход - Число
//      * ТекущееПоказание - Число
//      * ПредыдущееПоказание - Число
Функция ПолучитьДанныеПоказанийСчетчиков(Знач ДокументОтраженияСсылка) Экспорт
    СтруктураТекстаЗапроса = ПолучитьТекстЗапросаДанныхПоказанийСчетчиков();

    Запрос = Новый Запрос;
    Запрос.Текст = СтруктураТекстаЗапроса.ТекстЗапроса;

    Запрос.УстановитьПараметр(СтруктураТекстаЗапроса.Параметры.ДокументСсылка, ДокументОтраженияСсылка);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции // Гарант+ Килипенко 25.10.2024 [F00229948] Показания счетчиков в документах отражения --

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
// Гарант+ Килипенко 19.09.2024 [F00228718] Доработка заполнения отражения начислений в рег. учете --

// Гарант+ Килипенко 25.10.2024 [F00229948] Показания счетчиков в документах отражения ++
#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
//  - Структура
//      * ТекстЗапроса - Строка
//      * Параметры - Структура
//          ** ДокументСсылка - Строка
Функция ПолучитьТекстЗапросаДанныхПоказанийСчетчиков()
    РезультатФункции = Новый Структура("ТекстЗапроса, Параметры", "", Новый Структура);

    РезультатФункции.Параметры.Вставить("ДокументСсылка", "ДокументОтраженияСсылка");

    РезультатФункции.ТекстЗапроса =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
        |	КВП_ОтражениеНачисленийВРеглУчете.Ссылка КАК Ссылка,
        |	КВП_ОтражениеНачисленийВРеглУчете.ВерсияДанных КАК ВерсияДанных,
        |	КВП_ОтражениеНачисленийВРеглУчете.ПометкаУдаления КАК ПометкаУдаления,
        |	КВП_ОтражениеНачисленийВРеглУчете.Номер КАК Номер,
        |	КВП_ОтражениеНачисленийВРеглУчете.Дата КАК Дата,
        |	НАЧАЛОПЕРИОДА(КВП_ОтражениеНачисленийВРеглУчете.Дата, МЕСЯЦ) КАК НачалоПериода,
        |	КОНЕЦПЕРИОДА(КВП_ОтражениеНачисленийВРеглУчете.Дата, ДЕНЬ) КАК КонецПериода,
        |	КВП_ОтражениеНачисленийВРеглУчете.Проведен КАК Проведен,
        |	КВП_ОтражениеНачисленийВРеглУчете.Организация КАК Организация,
        |	КВП_ОтражениеНачисленийВРеглУчете.ИспользуетсяНовыйМеханизмОтраженияНачислений КАК ИспользуетсяНовыйМеханизмОтраженияНачислений,
        |	КВП_ОтражениеНачисленийВРеглУчете.Взаиморасчеты КАК Взаиморасчеты,
        |	КВП_ОтражениеНачисленийВРеглУчете.ВидОперации КАК ВидОперации,
        |	КВП_ОтражениеНачисленийВРеглУчете.ТипДокументаОтражения КАК ТипДокументаОтражения,
        |	КВП_ОтражениеНачисленийВРеглУчете.УчитыватьНДС КАК УчитыватьНДС,
        |	КВП_ОтражениеНачисленийВРеглУчете.СуммаВключаетНДС КАК СуммаВключаетНДС,
        |	КВП_ОтражениеНачисленийВРеглУчете.Контрагент КАК Контрагент,
        |	КВП_ОтражениеНачисленийВРеглУчете.Номенклатура КАК Номенклатура,
        |	КВП_ОтражениеНачисленийВРеглУчете.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
        |	КВП_ОтражениеНачисленийВРеглУчете.Ответственный КАК Ответственный,
        |	КВП_ОтражениеНачисленийВРеглУчете.Комментарий КАК Комментарий,
        |	КВП_ОтражениеНачисленийВРеглУчете.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
        |	КВП_ОтражениеНачисленийВРеглУчете.КонтрагентКомпенсацииЛьгот КАК КонтрагентКомпенсацииЛьгот,
        |	КВП_ОтражениеНачисленийВРеглУчете.ДоговорКонтрагентаКомпенсацииЛьгот КАК ДоговорКонтрагентаКомпенсацииЛьгот,
        |	КВП_ОтражениеНачисленийВРеглУчете.Подразделение КАК Подразделение,
        |	КВП_ОтражениеНачисленийВРеглУчете.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
        |	КВП_ОтражениеНачисленийВРеглУчете.РучнаяКорректировка КАК РучнаяКорректировка,
        |	КВП_ОтражениеНачисленийВРеглУчете.ГруппаУслуг КАК ГруппаУслуг,
        |	КВП_ОтражениеНачисленийВРеглУчете.ОбъектОтражения КАК ОбъектОтражения,
        |	КВП_ОтражениеНачисленийВРеглУчете.ОтчетностьПодписана КАК ОтчетностьПодписана,
        |	КВП_ОтражениеНачисленийВРеглУчете.ВыполнятьОтражениеНачисленийСОбъемамиИТарифами КАК ВыполнятьОтражениеНачисленийСОбъемамиИТарифами
        |ПОМЕСТИТЬ ВТ_ДанныеДокументаОтражения
        |ИЗ
        |	Документ.КВП_ОтражениеНачисленийВРеглУчете КАК КВП_ОтражениеНачисленийВРеглУчете
        |ГДЕ
        |	КВП_ОтражениеНачисленийВРеглУчете.Ссылка = &ДокументОтраженияСсылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	РасшифровкаНачислений.Ссылка КАК Ссылка,
        |	РасшифровкаНачислений.НомерСтроки КАК НомерСтроки,
        |	РасшифровкаНачислений.ДоговорКонтрагента КАК ДоговорКонтрагента,
        |	РасшифровкаНачислений.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
        |	РасшифровкаНачислений.ЭтоКапРемонт КАК ЭтоКапРемонт,
        |	РасшифровкаНачислений.ЭтоЛьгота КАК ЭтоЛьгота,
        |	РасшифровкаНачислений.ЭтоПени КАК ЭтоПени,
        |	РасшифровкаНачислений.ВариантПоставкиУслуг КАК ВариантПоставкиУслуг,
        |	РасшифровкаНачислений.Номенклатура КАК Номенклатура,
        |	РасшифровкаНачислений.ДоговорПоставщикаУслуг КАК ДоговорПоставщикаУслуг,
        |	РасшифровкаНачислений.СуммаОтражения КАК СуммаОтражения,
        |	РасшифровкаНачислений.СчетУслуг КАК СчетУслуг,
        |	РасшифровкаНачислений.СубконтоСчетаУслуг1 КАК СубконтоСчетаУслуг1,
        |	РасшифровкаНачислений.СубконтоСчетаУслуг2 КАК СубконтоСчетаУслуг2,
        |	РасшифровкаНачислений.СубконтоСчетаУслуг3 КАК СубконтоСчетаУслуг3,
        |	РасшифровкаНачислений.Тариф КАК Тариф,
        |	РасшифровкаНачислений.Количество КАК Количество,
        |	РасшифровкаНачислений.ЭтоРеализация КАК ЭтоРеализация,
        |	РасшифровкаНачислений.lc_ЛицевойСчет КАК lc_ЛицевойСчет,
        |	РасшифровкаНачислений.lc_Количество КАК lc_Количество,
        |	РасшифровкаНачислений.lc_Цена КАК lc_Цена
        |ПОМЕСТИТЬ ВТ_РасшифровкаНачислений
        |ИЗ
        |	Документ.КВП_ОтражениеНачисленийВРеглУчете.РасшифровкаНачислений КАК РасшифровкаНачислений
        |ГДЕ
        |	РасшифровкаНачислений.Ссылка В
        |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
        |				Т.Ссылка
        |			ИЗ
        |				ВТ_ДанныеДокументаОтражения КАК Т)
        |	И РасшифровкаНачислений.ЭтоРеализация = ИСТИНА
        |	И РасшифровкаНачислений.ЭтоКапРемонт = ЛОЖЬ
        |	И РасшифровкаНачислений.ЭтоПени = ЛОЖЬ
        |	И РасшифровкаНачислений.ЭтоЛьгота = ЛОЖЬ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	УПЖКХ_РасчетПриборовУчета.Период КАК Период,
        |	УПЖКХ_РасчетПриборовУчета.Регистратор КАК Регистратор,
        |	УПЖКХ_РасчетПриборовУчета.НомерСтроки КАК НомерСтроки,
        |	УПЖКХ_РасчетПриборовУчета.ВидДвижения КАК ВидДвижения,
        |	ВЫРАЗИТЬ(УПЖКХ_РасчетПриборовУчета.Объект КАК Справочник.КВП_ЛицевыеСчета) КАК ЛицевойСчет,
        |	УПЖКХ_РасчетПриборовУчета.Счетчик КАК Счетчик,
        |	УПЖКХ_РасчетПриборовУчета.Услуга КАК Услуга,
        |	УПЖКХ_РасчетПриборовУчета.Услуга.Услуга КАК Номенклатура,
        |	УПЖКХ_РасчетПриборовУчета.ВидПоказания КАК ВидПоказания,
        |	УПЖКХ_РасчетПриборовУчета.Показание КАК Показание
        |ПОМЕСТИТЬ ВТ_РасчетыПриборовУчетаРасходВсеЗаписи
        |ИЗ
        |	РегистрНакопления.УПЖКХ_РасчетПриборовУчета КАК УПЖКХ_РасчетПриборовУчета
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДанныеДокументаОтражения КАК ВТ_ДанныеДокументаОтражения
        |		ПО (ИСТИНА)
        |ГДЕ
        |	УПЖКХ_РасчетПриборовУчета.Активность = ИСТИНА
        |	И УПЖКХ_РасчетПриборовУчета.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
        |	И УПЖКХ_РасчетПриборовУчета.Объект ССЫЛКА Справочник.КВП_ЛицевыеСчета
        |	И УПЖКХ_РасчетПриборовУчета.ВидПоказания = ЗНАЧЕНИЕ(Перечисление.КВП_ВидыТарифов.Дневной)
        |	И УПЖКХ_РасчетПриборовУчета.Счетчик.СпособРегистрацииПоказаний = ЗНАЧЕНИЕ(Перечисление.КВП_СпособыРегистрацииПоказанийСчетчиков.НарастающимИтогом)
        |	// И УПЖКХ_РасчетПриборовУчета.Период >= ВТ_ДанныеДокументаОтражения.НачалоПериода // Исключено
        |	И УПЖКХ_РасчетПриборовУчета.Период <= ВТ_ДанныеДокументаОтражения.КонецПериода
        |	И (УПЖКХ_РасчетПриборовУчета.Услуга.Услуга, УПЖКХ_РасчетПриборовУчета.Объект) В
        |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
        |				Т.Номенклатура,
        |				Т.lc_ЛицевойСчет
        |			ИЗ
        |				ВТ_РасшифровкаНачислений КАК Т)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.Период КАК Период,
        |	ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.Регистратор КАК Регистратор,
        |	ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.НомерСтроки КАК НомерСтроки,
        |	ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.ВидДвижения КАК ВидДвижения,
        |	ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.Счетчик КАК Счетчик,
        |	ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.Услуга КАК Услуга,
        |	ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.Номенклатура КАК Номенклатура,
        |	ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.ВидПоказания КАК ВидПоказания,
        |	ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.Показание КАК Расход
        |ПОМЕСТИТЬ ВТ_РасчетыПриборовУчетаРасход
        |ИЗ
        |	ВТ_РасчетыПриборовУчетаРасходВсеЗаписи КАК ВТ_РасчетыПриборовУчетаРасходВсеЗаписи
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетыПриборовУчетаРасходВсеЗаписи КАК Т
        |		ПО ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.Счетчик = Т.Счетчик
        |			И ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.ЛицевойСчет = Т.ЛицевойСчет
        |			И ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.Услуга = Т.Услуга
        |			И ВТ_РасчетыПриборовУчетаРасходВсеЗаписи.Период < Т.Период
        |ГДЕ
        |	Т.Период ЕСТЬ NULL
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КВП_ПоказанияСчетчиков.Период КАК Период,
        |	КВП_ПоказанияСчетчиков.Регистратор КАК Регистратор,
        |	КВП_ПоказанияСчетчиков.НомерСтроки КАК НомерСтроки,
        |	КВП_ПоказанияСчетчиков.Счетчик КАК Счетчик,
        |	КВП_ПоказанияСчетчиков.ДневноеПоказание КАК ДневноеПоказание,
        |	КВП_ПоказанияСчетчиков.НочноеПоказание КАК НочноеПоказание,
        |	КВП_ПоказанияСчетчиков.ПиковоеПоказание КАК ПиковоеПоказание,
        |	КВП_ПоказанияСчетчиков.НачальноеПоказание КАК НачальноеПоказание,
        |	КВП_ПоказанияСчетчиков.КоэффициентТрансформации КАК КоэффициентТрансформации,
        |	КВП_ПоказанияСчетчиков.ТемпературныйКоэффициент КАК ТемпературныйКоэффициент
        |ПОМЕСТИТЬ ВТ_ПоказанияСчетчиковВсеЗаписи
        |ИЗ
        |	РегистрСведений.КВП_ПоказанияСчетчиков КАК КВП_ПоказанияСчетчиков
        |ГДЕ
        |	КВП_ПоказанияСчетчиков.Активность = ИСТИНА
        |	И КВП_ПоказанияСчетчиков.НачальноеПоказание = ЛОЖЬ
        |	И КВП_ПоказанияСчетчиков.Счетчик В
        |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
        |				Т.Счетчик
        |			ИЗ
        |				ВТ_РасчетыПриборовУчетаРасходВсеЗаписи КАК Т)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ПоказанияСчетчиковВсеЗаписи.Период КАК Период,
        |	ВТ_ПоказанияСчетчиковВсеЗаписи.Регистратор КАК Регистратор,
        |	ВТ_ПоказанияСчетчиковВсеЗаписи.НомерСтроки КАК НомерСтроки,
        |	ВТ_ПоказанияСчетчиковВсеЗаписи.Счетчик КАК Счетчик,
        |	ВТ_ПоказанияСчетчиковВсеЗаписи.ДневноеПоказание КАК ДневноеПоказание,
        |	ВТ_ПоказанияСчетчиковВсеЗаписи.НочноеПоказание КАК НочноеПоказание,
        |	ВТ_ПоказанияСчетчиковВсеЗаписи.ПиковоеПоказание КАК ПиковоеПоказание,
        |	ВТ_ПоказанияСчетчиковВсеЗаписи.НачальноеПоказание КАК НачальноеПоказание,
        |	ВТ_ПоказанияСчетчиковВсеЗаписи.КоэффициентТрансформации КАК КоэффициентТрансформации,
        |	ВТ_ПоказанияСчетчиковВсеЗаписи.ТемпературныйКоэффициент КАК ТемпературныйКоэффициент,
        |	ВТ_РасчетыПриборовУчетаРасход.Период КАК ПериодНачисления,
        |	ВТ_РасчетыПриборовУчетаРасход.Регистратор КАК РегистраторНачисления,
        |	ВТ_РасчетыПриборовУчетаРасход.НомерСтроки КАК НомерСтрокиНачисления,
        |	ВТ_РасчетыПриборовУчетаРасход.ВидДвижения КАК ВидДвиженияНачисления,
        |	ВТ_РасчетыПриборовУчетаРасход.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_РасчетыПриборовУчетаРасход.Услуга КАК Услуга,
        |	ВТ_РасчетыПриборовУчетаРасход.Номенклатура КАК Номенклатура,
        |	ВТ_РасчетыПриборовУчетаРасход.ВидПоказания КАК ВидПоказания,
        |	ВТ_РасчетыПриборовУчетаРасход.Расход КАК Расход
        |ПОМЕСТИТЬ ВТ_ПоказанияСчетчиковПодготовка
        |ИЗ
        |	ВТ_ПоказанияСчетчиковВсеЗаписи КАК ВТ_ПоказанияСчетчиковВсеЗаписи
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_РасчетыПриборовУчетаРасход КАК ВТ_РасчетыПриборовУчетаРасход
        |		ПО ВТ_ПоказанияСчетчиковВсеЗаписи.Счетчик = ВТ_РасчетыПриборовУчетаРасход.Счетчик
        |			И ВТ_ПоказанияСчетчиковВсеЗаписи.Период <= ВТ_РасчетыПриборовУчетаРасход.Период
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ПоказанияСчетчиковПодготовка.Период КАК Период,
        |	ВТ_ПоказанияСчетчиковПодготовка.Регистратор КАК Регистратор,
        |	ВТ_ПоказанияСчетчиковПодготовка.НомерСтроки КАК НомерСтроки,
        |	ВТ_ПоказанияСчетчиковПодготовка.Счетчик КАК Счетчик,
        |	ВТ_ПоказанияСчетчиковПодготовка.ДневноеПоказание КАК ТекущееПоказание,
        |	ВТ_ПоказанияСчетчиковПодготовка.НочноеПоказание КАК НочноеПоказание,
        |	ВТ_ПоказанияСчетчиковПодготовка.ПиковоеПоказание КАК ПиковоеПоказание,
        |	ВТ_ПоказанияСчетчиковПодготовка.НачальноеПоказание КАК НачальноеПоказание,
        |	ВТ_ПоказанияСчетчиковПодготовка.КоэффициентТрансформации КАК КоэффициентТрансформации,
        |	ВТ_ПоказанияСчетчиковПодготовка.ТемпературныйКоэффициент КАК ТемпературныйКоэффициент,
        |	ВТ_ПоказанияСчетчиковПодготовка.ПериодНачисления КАК ПериодНачисления,
        |	ВТ_ПоказанияСчетчиковПодготовка.РегистраторНачисления КАК РегистраторНачисления,
        |	ВТ_ПоказанияСчетчиковПодготовка.НомерСтрокиНачисления КАК НомерСтрокиНачисления,
        |	ВТ_ПоказанияСчетчиковПодготовка.ВидДвиженияНачисления КАК ВидДвиженияНачисления,
        |	ВТ_ПоказанияСчетчиковПодготовка.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_ПоказанияСчетчиковПодготовка.Услуга КАК Услуга,
        |	ВТ_ПоказанияСчетчиковПодготовка.Номенклатура КАК Номенклатура,
        |	ВТ_ПоказанияСчетчиковПодготовка.ВидПоказания КАК ВидПоказания,
        |	ВТ_ПоказанияСчетчиковПодготовка.Расход КАК Расход,
        |	ВТ_ПоказанияСчетчиковПодготовка.ДневноеПоказание - ВТ_ПоказанияСчетчиковПодготовка.Расход КАК ПредыдущееПоказание
        |ПОМЕСТИТЬ ВТ_РезультатПодготовка
        |ИЗ
        |	ВТ_ПоказанияСчетчиковПодготовка КАК ВТ_ПоказанияСчетчиковПодготовка
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоказанияСчетчиковПодготовка КАК Т
        |		ПО ВТ_ПоказанияСчетчиковПодготовка.Счетчик = Т.Счетчик
        |			И ВТ_ПоказанияСчетчиковПодготовка.Период < Т.Период
        |ГДЕ
        |	Т.Период ЕСТЬ NULL
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_РезультатПодготовка.Счетчик КАК Счетчик,
        |	ВТ_РезультатПодготовка.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_РезультатПодготовка.Услуга КАК Услуга,
        |	ВТ_РезультатПодготовка.Номенклатура КАК Номенклатура,
        |	ВТ_РезультатПодготовка.ВидПоказания КАК ВидПоказания,
        |	ВТ_РезультатПодготовка.Расход КАК Расход,
        |	ВТ_РезультатПодготовка.ТекущееПоказание КАК ТекущееПоказание,
        |	ВТ_РезультатПодготовка.ПредыдущееПоказание КАК ПредыдущееПоказание
        |ИЗ
        |	ВТ_РезультатПодготовка КАК ВТ_РезультатПодготовка
        |";

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 25.10.2024 [F00229948] Показания счетчиков в документах отражения --
