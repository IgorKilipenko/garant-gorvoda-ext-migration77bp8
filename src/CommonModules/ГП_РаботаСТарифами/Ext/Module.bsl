// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа ++
#Область ПрограммныйИнтерфейс

// Получает таблицу помещений для установки тарифов
// Параметры:
//  ПараметрыОтбора - Структура
//      * ДатаАктуальности - Дата, МоментВремени, Граница
//      * Организация - СправочникСсылка.Организации
//      * ВидТарифаПотребителя - СправочникСсылка.lc_ВидыТарифов
//      * Услуга - СправочникСсылка.КВП_Услуги
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета
//      * Здание - СправочникСсылка.КВП_Здания
//      * Помещение - СправочникСсылка.УПЖКХ_Помещения
Функция ПолучитьПомещенияДляУстановкиТарифов(Знач ПараметрыОтбора) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст = ПолучитьТекстЗапросаОтбораПомещенийДляУстановкиТарифов();

    Если ПараметрыОтбора.Свойство("ДатаАктуальности") = Истина Тогда
        Запрос.УстановитьПараметр("ДатаАктуальности", ПараметрыОтбора.ДатаАктуальности);
    Иначе
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДатаАктуальности", "");
    КонецЕсли;

    Если ПараметрыОтбора.Свойство("Организация") = Истина Тогда
        Запрос.УстановитьПараметр("Организация", ПараметрыОтбора.Организация);
    Иначе
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Организация = &Организация", "");
    КонецЕсли;

    Если ПараметрыОтбора.Свойство("ВидТарифаПотребителя") = Истина Тогда
        Запрос.УстановитьПараметр("ВидТарифаПотребителя", ПараметрыОтбора.ВидТарифаПотребителя);
    Иначе
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидТарифаПотребителя = &ВидТарифаПотребителя", "");
    КонецЕсли;

    Если ПараметрыОтбора.Свойство("Услуга") = Истина Тогда
        Запрос.УстановитьПараметр("ВидУслуги", ПараметрыОтбора.Услуга);
    Иначе
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Услуга = &ВидУслуги", "");
    КонецЕсли;

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

#Область Константы

#Область ВидыТарифов

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.lc_ВидыТарифов
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьВидТарифаПрочиеПотребители() Экспорт
    Возврат ПолучитьВидТарифаПоКоду("003", Истина);
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.lc_ВидыТарифов
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьВидТарифаДляБюджетныхОрганизаций() Экспорт
    Возврат ПолучитьВидТарифаПоКоду("002", Истина);
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.lc_ВидыТарифов
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьВидТарифаДляНаселения() Экспорт
    Возврат ПолучитьВидТарифаПоКоду("001", Истина);
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.lc_ВидыТарифов
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьВидТарифаНегативноеБезНДС() Экспорт
    Возврат ПолучитьВидТарифаПоКоду("014", Истина);
КонецФункции

// Теплоснабжающие орг-ции
// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.lc_ВидыТарифов
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьВидТарифаТеплоснабжающиеОрганизации() Экспорт
    Возврат ПолучитьВидТарифаПоКоду("004", Истина);
КонецФункции

// Транспортировка по сетям
// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.lc_ВидыТарифов
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьВидТарифаТранспортировкаПоСетям() Экспорт
    Возврат ПолучитьВидТарифаПоКоду("012", Истина);
КонецФункции

// Возвращаемое значение:
//  - Структура из КлючИЗначение
//      * Ключ - Строка
//      * Значение - Структура
//          ** Ссылка - СправочникСсылка.lc_ВидыТарифов
//          ** Код - Строка
//          ** Наименование - Строка
Функция ПолучитьОбязательныеВидыТарифов() Экспорт
    РезультатФункции = Новый Структура;

    РезультатФункции.Вставить("ПрочиеПотребители", ПолучитьВидТарифаПрочиеПотребители());
    РезультатФункции.Вставить("ДляБюджетныхОрганизаций", ПолучитьВидТарифаДляБюджетныхОрганизаций());
    РезультатФункции.Вставить("ДляНаселения", ПолучитьВидТарифаДляНаселения());
    РезультатФункции.Вставить("НегативноеБезНДС", ПолучитьВидТарифаНегативноеБезНДС());
    РезультатФункции.Вставить("ТеплоснабжающиеОрганизации", ПолучитьВидТарифаТеплоснабжающиеОрганизации());
    РезультатФункции.Вставить("ТранспортировкаПоСетям", ПолучитьВидТарифаТранспортировкаПоСетям());

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ВидыТарифов

#КонецОбласти // Константы

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа --

#Область СлужебныйПрограммныйИнтерфейс

#Область ВидыТарифов

// Параметры:
//  Код - Строка
//  ИгнорироватьПомеченныеНаУдаление - Булево
// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.lc_ВидыТарифов
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьВидТарифаПоКоду(Знач Код, Знач ИгнорироватьПомеченныеНаУдаление = Истина) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   ВидыТарифов.Ссылка КАК Ссылка,
        |   ВидыТарифов.Код КАК Код,
        |   ВидыТарифов.Наименование КАК Наименование
        |ИЗ
        |   Справочник.lc_ВидыТарифов КАК ВидыТарифов
        |ГДЕ
        |   ВидыТарифов.Код = &Код
        |   И ВидыТарифов.ПометкаУдаления = ЛОЖЬ
        |";

    Запрос.УстановитьПараметр("Код", Код);
    Если ИгнорироватьПомеченныеНаУдаление = Ложь Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВидыТарифов.ПометкаУдаления = ЛОЖЬ", "");
    КонецЕсли;

    РезультатЗапроса = Запрос.Выполнить();
    ТаблицаВидовТарифов = РезультатЗапроса.Выгрузить();

    Если ТаблицаВидовТарифов.Количество() <> 1 Тогда
        ВызватьИсключение(СтрШаблон("Ошибка при получении вида тарифа с кодом ""%1"". %2",
                Код,
                ?(ТаблицаВидовТарифов.Количество() > 1, "Код вида тарифа не уникален.", "Вид тарифа отсутствует в ИБ.")));
    КонецЕсли;

    РезультатФункции = Новый Структура("Ссылка, Код, Наименование");
    ЗаполнитьЗначенияСвойств(РезультатФункции, ТаблицаВидовТарифов[0]);

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ВидыТарифов

#КонецОбласти // СлужебныйПрограммныйИнтерфейс

// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа ++
#Область СлужебныеПроцедурыИФункции

// Формирует текст запроса получения помещений для установки тарифов
// Возвращаемое значение:
//  - Строка
Функция ПолучитьТекстЗапросаОтбораПомещенийДляУстановкиТарифов()
    РезультатФункции =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	ВидыТарифовПотребителейЛицевыхСчетов.Период КАК Период,
        |	ВидыТарифовПотребителейЛицевыхСчетов.ЛицевойСчет КАК ЛицевойСчет,
        |	ВидыТарифовПотребителейЛицевыхСчетов.ЛицевойСчет.Адрес КАК Помещение,
        |	ВидыТарифовПотребителейЛицевыхСчетов.ЛицевойСчет.Адрес.Владелец КАК Здание,
        |	ВидыТарифовПотребителейЛицевыхСчетов.ВидТарифаПотребителя КАК ВидТарифаПотребителя
        |ПОМЕСТИТЬ ВТ_ВидыТарифовПотребителей
        |ИЗ
        |	РегистрСведений.ГП_ВидыТарифовПотребителейЛицевыхСчетов.СрезПоследних(&ДатаАктуальности, ) КАК ВидыТарифовПотребителейЛицевыхСчетов
        |ГДЕ
        |	ВидыТарифовПотребителейЛицевыхСчетов.ВидТарифаПотребителя = &ВидТарифаПотребителя
        |	И НЕ ВидыТарифовПотребителейЛицевыхСчетов.ВидТарифаПотребителя ЕСТЬ NULL
        |	И НЕ ВидыТарифовПотребителейЛицевыхСчетов.ЛицевойСчет ЕСТЬ NULL
        |	И НЕ ВидыТарифовПотребителейЛицевыхСчетов.ЛицевойСчет.Адрес ЕСТЬ NULL
        |	И НЕ ВидыТарифовПотребителейЛицевыхСчетов.ЛицевойСчет.Адрес.Владелец ЕСТЬ NULL
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	ВЫРАЗИТЬ(КВП_Тарифы.Объект КАК Справочник.КВП_Здания) КАК Здание
        |ПОМЕСТИТЬ ВТ_ТарифыЗданий
        |ИЗ
        |	РегистрСведений.КВП_Тарифы.СрезПоследних(
        |			&ДатаАктуальности,
        |			Объект ССЫЛКА Справочник.КВП_Здания
        |				И Объект В
        |					(ВЫБРАТЬ
        |						ВТ_ВидыТарифовПотребителей.Здание
        |					ИЗ
        |						ВТ_ВидыТарифовПотребителей)
        |				И Услуга = &ВидУслуги
        |				И Организация = &Организация) КАК КВП_Тарифы
        |ГДЕ
        |	КВП_Тарифы.Действует = ИСТИНА
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	ВЫРАЗИТЬ(КВП_Тарифы.Объект КАК Справочник.УПЖКХ_Помещения) КАК Помещение
        |ПОМЕСТИТЬ ВТ_ТарифыПомещений
        |ИЗ
        |	РегистрСведений.КВП_Тарифы.СрезПоследних(
        |			&ДатаАктуальности,
        |			Объект ССЫЛКА Справочник.УПЖКХ_Помещения
        |				И Объект В
        |					(ВЫБРАТЬ
        |						ВТ_ВидыТарифовПотребителей.Помещение
        |					ИЗ
        |						ВТ_ВидыТарифовПотребителей)
        |				И Услуга = &ВидУслуги
        |				И Организация = &Организация) КАК КВП_Тарифы
        |ГДЕ
        |	КВП_Тарифы.Действует = ИСТИНА
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	ВТ_ВидыТарифовПотребителей.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_ВидыТарифовПотребителей.Здание КАК Здание,
        |	ВТ_ВидыТарифовПотребителей.Помещение КАК Помещение
        |ПОМЕСТИТЬ ВТ_ТарифыЛицевыхСчетов
        |ИЗ
        |	ВТ_ВидыТарифовПотребителей КАК ВТ_ВидыТарифовПотребителей
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТарифыЗданий КАК ВТ_ТарифыЗданий
        |		ПО ВТ_ВидыТарифовПотребителей.Здание = ВТ_ТарифыЗданий.Здание
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТарифыПомещений КАК ВТ_ТарифыПомещений
        |		ПО ВТ_ВидыТарифовПотребителей.Помещение = ВТ_ТарифыПомещений.Помещение
        |			И (ВТ_ТарифыЗданий.Здание ЕСТЬ NULL)
        |ГДЕ
        |	ВЫБОР
        |			КОГДА ВТ_ТарифыЗданий.Здание ЕСТЬ NULL
        |				ТОГДА 0
        |			ИНАЧЕ 1
        |		КОНЕЦ + ВЫБОР
        |			КОГДА ВТ_ТарифыПомещений.Помещение ЕСТЬ NULL
        |				ТОГДА 0
        |			ИНАЧЕ 1
        |		КОНЕЦ > 0
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
        |	КВП_НазначенныеНачисления.Объект КАК Объект
        |ПОМЕСТИТЬ ВТ_ОбъектыНазначенныхНачислений
        |ИЗ
        |	РегистрСведений.КВП_НазначенныеНачисления.СрезПоследних(
        |			&ДатаАктуальности,
        |			Объект В
        |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
        |						ВТ_ТарифыЛицевыхСчетов.ЛицевойСчет
        |					ИЗ
        |						ВТ_ТарифыЛицевыхСчетов
        |
        |					ОБЪЕДИНИТЬ ВСЕ
        |
        |					ВЫБРАТЬ
        |						ВТ_ТарифыЛицевыхСчетов.Здание
        |					ИЗ
        |						ВТ_ТарифыЛицевыхСчетов
        |
        |					ОБЪЕДИНИТЬ ВСЕ
        |
        |					ВЫБРАТЬ
        |						ВТ_ТарифыЛицевыхСчетов.Помещение
        |					ИЗ
        |						ВТ_ТарифыЛицевыхСчетов)
        |				И Услуга = &ВидУслуги
        |				И Организация = &Организация) КАК КВП_НазначенныеНачисления
        |ГДЕ
        |	КВП_НазначенныеНачисления.Действует = ИСТИНА
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВЫРАЗИТЬ(ВТ_ОбъектыНазначенныхНачислений.Объект КАК Справочник.КВП_ЛицевыеСчета) КАК ЛицевойСчет
        |ПОМЕСТИТЬ ВТ_ЛицевыеСчетаНазначенныхНачислений
        |ИЗ
        |	ВТ_ОбъектыНазначенныхНачислений КАК ВТ_ОбъектыНазначенныхНачислений
        |ГДЕ
        |	ВТ_ОбъектыНазначенныхНачислений.Объект ССЫЛКА Справочник.КВП_ЛицевыеСчета
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВЫРАЗИТЬ(ВТ_ОбъектыНазначенныхНачислений.Объект КАК Справочник.КВП_Здания) КАК Здание
        |ПОМЕСТИТЬ ВТ_ЗданияНазначенныхНачислений
        |ИЗ
        |	ВТ_ОбъектыНазначенныхНачислений КАК ВТ_ОбъектыНазначенныхНачислений
        |ГДЕ
        |	ВТ_ОбъектыНазначенныхНачислений.Объект ССЫЛКА Справочник.КВП_Здания
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВЫРАЗИТЬ(ВТ_ОбъектыНазначенныхНачислений.Объект КАК Справочник.УПЖКХ_Помещения) КАК Помещение
        |ПОМЕСТИТЬ ВТ_ПомещенияНазначенныхНачислений
        |ИЗ
        |	ВТ_ОбъектыНазначенныхНачислений КАК ВТ_ОбъектыНазначенныхНачислений
        |ГДЕ
        |	ВТ_ОбъектыНазначенныхНачислений.Объект ССЫЛКА Справочник.УПЖКХ_Помещения
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ТарифыЛицевыхСчетов.ЛицевойСчет КАК ЛицевойСчет,
        |	ВТ_ТарифыЛицевыхСчетов.Здание КАК Здание,
        |	ВТ_ТарифыЛицевыхСчетов.Помещение КАК Помещение
        |ИЗ
        |	ВТ_ТарифыЛицевыхСчетов КАК ВТ_ТарифыЛицевыхСчетов
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЛицевыеСчетаНазначенныхНачислений КАК ВТ_ЛицевыеСчетаНазначенныхНачислений
        |		ПО ВТ_ТарифыЛицевыхСчетов.ЛицевойСчет = ВТ_ЛицевыеСчетаНазначенныхНачислений.ЛицевойСчет
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗданияНазначенныхНачислений КАК ВТ_ЗданияНазначенныхНачислений
        |		ПО (ВТ_ЛицевыеСчетаНазначенныхНачислений.ЛицевойСчет ЕСТЬ NULL)
        |			И ВТ_ТарифыЛицевыхСчетов.Здание = ВТ_ЗданияНазначенныхНачислений.Здание
        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПомещенияНазначенныхНачислений КАК ВТ_ПомещенияНазначенныхНачислений
        |		ПО (ВТ_ЛицевыеСчетаНазначенныхНачислений.ЛицевойСчет ЕСТЬ NULL)
        |			И (ВТ_ЗданияНазначенныхНачислений.Здание ЕСТЬ NULL)
        |			И ВТ_ТарифыЛицевыхСчетов.Помещение = ВТ_ПомещенияНазначенныхНачислений.Помещение
        |ГДЕ
        |	ВЫБОР
        |			КОГДА ВТ_ЛицевыеСчетаНазначенныхНачислений.ЛицевойСчет ЕСТЬ NULL
        |				ТОГДА 0
        |			ИНАЧЕ 1
        |		КОНЕЦ + ВЫБОР
        |			КОГДА ВТ_ЗданияНазначенныхНачислений.Здание ЕСТЬ NULL
        |				ТОГДА 0
        |			ИНАЧЕ 1
        |		КОНЕЦ + ВЫБОР
        |			КОГДА ВТ_ПомещенияНазначенныхНачислений.Помещение ЕСТЬ NULL
        |				ТОГДА 0
        |			ИНАЧЕ 1
        |		КОНЕЦ > 0
        |";

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
// Гарант+ Килипенко 17.09.2024 [F00228438] Вид тарифа потребителя для Установки тарифа --
