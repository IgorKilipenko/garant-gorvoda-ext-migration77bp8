// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления ++
#Область СлужебныйПрограммныйИнтерфейс

// Возвращаемое значение:
//  - ТаблицаЗначений
Функция НовыйТаблицаОплатПоЛицевымСчетам() Экспорт
    РезультатФункции = Новый ТаблицаЗначений;

    ДокументОбъект = Документы.КВП_РегистрацияОплаты.СоздатьДокумент();
    РезультатФункции = ДокументОбъект.ЛицевыеСчета.ВЫгрузитьКолонки();

    РезультатФункции.Колонки.Добавить("Помещение", Новый ОписаниеТипов("СправочникСсылка.УПЖКХ_Помещения"));
    РезультатФункции.Колонки.Добавить("Здание", Новый ОписаниеТипов("СправочникСсылка.КВП_Здания"));
    РезультатФункции.Колонки.Добавить("Владелец", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));

    Возврат РезультатФункции;
КонецФункции

Функция ПодготовитьСтруктуруДанныхДляРаспределенияОплаты(Знач ТаблицаНачисленийНаЛС) Экспорт
    РезультатФункции = Новый Структура("ДанныеДляПропорциональногоРаспределения, ДанныеДляРавномерногоРаспределения");

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   *
        |ПОМЕСТИТЬ ВТ_ТаблицаНачисленийНаЛС
        |ИЗ
        |   &ТаблицаНачисленийНаЛС КАК ТаблицаНачисленийНаЛС
        |;
        |
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   *
        |ИЗ
        |   ВТ_ТаблицаНачисленийНаЛС КАК ВТ_ТаблицаНачисленийНаЛС
        |ГДЕ
        |   ВТ_ТаблицаНачисленийНаЛС.СуммаНачисленияОстаток > 0
        |;
        |
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   *
        |ИЗ
        |   ВТ_ТаблицаНачисленийНаЛС КАК ВТ_ТаблицаНачисленийНаЛС
        |;
        |";

    Запрос.УстановитьПараметр("ТаблицаНачисленийНаЛС", ТаблицаНачисленийНаЛС);
    РезультатПакетаЗапроса = Запрос.ВыполнитьПакет();

    РезультатФункции.ДанныеДляПропорциональногоРаспределения = РезультатПакетаЗапроса[1].Выгрузить();
    РезультатФункции.ДанныеДляРавномерногоРаспределения = РезультатПакетаЗапроса[2].Выгрузить();

    Возврат РезультатФункции;
КонецФункции

Функция СформироватьТаблицуРаспределенияОплаты(
        Знач СуммаРаспределения, Знач ОбщаяСуммаНачислений, Знач ДанныеДляРаспределения, Знач ДокументОплаты, Знач Контрагент, Знач РаспределятьРавномерно = Ложь) Экспорт

    РезультатФункции = НовыйТаблицаОплатПоЛицевымСчетам();

    Если ДанныеДляРаспределения.Количество() = 0 Тогда
        Возврат РезультатФункции; // Нет данных для распределения
    КонецЕсли;

    НераспределеннаяСумма = СуммаРаспределения;
    СтрокаМаксимальнойСуммы = Неопределено;
    Для Каждого СтрокаЛС Из ДанныеДляРаспределения Цикл
        КоэффициентРаспределенияЛС = РассчитатьКоэффициентРаспределения(
                СтрокаЛС.СуммаНачисленияОстаток, ОбщаяСуммаНачислений, ?(РаспределятьРавномерно = Истина,
                    ДанныеДляРаспределения.Количество(), Неопределено));

        #Область Отладка
        ГП_ДиагностикаКлиентСервер.Утверждение(КоэффициентРаспределенияЛС >= 0,
            "Коэффициент распределения должен не может иметь отрицательное значение");
        #КонецОбласти // Отладка

        НоваяСтрокаЛС = РезультатФункции.Добавить();

        НоваяСтрокаЛС.Объект = СтрокаЛС.ЛицевойСчет;
        НоваяСтрокаЛС.ДокументОплаты = ДокументОплаты;
        НоваяСтрокаЛС.Сумма = ?(КоэффициентРаспределенияЛС = 1,
                СтрокаЛС.СуммаНачисленияОстаток,
                Окр(СуммаРаспределения * КоэффициентРаспределенияЛС, 2, 0));

        НоваяСтрокаЛС.Помещение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаЛС.ЛицевойСчет, "Адрес");
        НоваяСтрокаЛС.Здание = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоваяСтрокаЛС.Помещение, "Владелец");
        НоваяСтрокаЛС.Владелец = Контрагент;

        НераспределеннаяСумма = НераспределеннаяСумма - НоваяСтрокаЛС.Сумма;

        Если СтрокаМаксимальнойСуммы = Неопределено Тогда
            СтрокаМаксимальнойСуммы = НоваяСтрокаЛС;
        КонецЕсли;

        Если СтрокаМаксимальнойСуммы.Сумма < НоваяСтрокаЛС.Сумма Тогда
            СтрокаМаксимальнойСуммы = НоваяСтрокаЛС;
        КонецЕсли;
    КонецЦикла;

    Если НераспределеннаяСумма <> 0 И СтрокаМаксимальнойСуммы <> Неопределено Тогда
        СтрокаМаксимальнойСуммы.Сумма =
            СтрокаМаксимальнойСуммы.Сумма + НераспределеннаяСумма;
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

Функция ПолучитьНачисленияДляСпискаЛицевыхСчетов(
        Знач СписокЛицевыхСчетов, Знач ОрганизацияСсылка = Неопределено, Знач Период = Неопределено) Экспорт

    ОрганизацияСсылка = ?(ОрганизацияСсылка = Неопределено,
            УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию(), ОрганизацияСсылка);

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	КВП_ВзаиморасчетыПоЛицевымСчетамОстатки.ЛицевойСчет КАК ЛицевойСчет,
        |	КВП_ВзаиморасчетыПоЛицевымСчетамОстатки.СуммаНачисленияОстаток КАК СуммаНачисленияОстаток
        |ИЗ
        |	РегистрНакопления.КВП_ВзаиморасчетыПоЛицевымСчетам.Остатки(&Период, ЛицевойСчет В (&СписокЛицевыхСчетов) И Организация = &Организация) КАК КВП_ВзаиморасчетыПоЛицевымСчетамОстатки
        |";

    Запрос.УстановитьПараметр("СписокЛицевыхСчетов", СписокЛицевыхСчетов);
    Если Период = Неопределено Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Период", "");
    Иначе
        Запрос.УстановитьПараметр("Период", Период);
    КонецЕсли;
    Запрос.УстановитьПараметр("Организация", ОрганизацияСсылка);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

Функция РассчитатьКоэффициентРаспределения(
        Знач СуммаНачисления, Знач СуммаРаспределения, Знач КоличествоСтрокРаспределения = Неопределено) Экспорт

    КоэффициентРаспределенияЛС = 1;

    РаспределятьРавномерно = КоличествоСтрокРаспределения <> Неопределено;

    Если РаспределятьРавномерно = Ложь Тогда
        Если СуммаНачисления <> СуммаРаспределения Тогда
            КоэффициентРаспределенияЛС = ?(СуммаРаспределения > 0,
                    СуммаНачисления / СуммаРаспределения, 0);
        КонецЕсли;
    Иначе
        КоэффициентРаспределенияЛС = ?(КоличествоСтрокРаспределения = 0, 0, КоэффициентРаспределенияЛС / КоличествоСтрокРаспределения);
    КонецЕсли;

    Возврат КоэффициентРаспределенияЛС;
КонецФункции

#КонецОбласти // СлужебныйПрограммныйИнтерфейс
// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления --
