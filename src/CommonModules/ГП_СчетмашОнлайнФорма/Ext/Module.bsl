//#Область ПрограммныйИнтерфейс

//#Область КомандыРаботыСЧеками

//&НаКлиенте
//Процедура ПроверкаСтатусовЧеков(Форма) Экспорт // Проверка статусов чеков для всех строк

//    Инд = 0;
//    Всего = Объект.СтрокиРегистрацииОплат.Количество();
//    Для Каждого ТекСтр Из Форма.Объект.СтрокиРегистрацииОплат Цикл
//        Инд = Инд + 1;
//        Если НЕ ПроверкаСтатусаЧека(ТекСтр) Тогда
//            //Прервать;
//        КонецЕсли;
//        Состояние("Проверено " + Инд + " из " + Всего, Инд * 100 / Всего, "Проверка статуса чеков");
//    КонецЦикла;

//КонецПроцедуры

//&НаКлиенте
//Процедура ВозвратПрихода(Форма) Экспорт

//    Режим = РежимДиалогаВопрос.ДаНет;
//    Ответ = Вопрос("Выполнить Возврат прихода по лицевому счету " + Форма.Элементы.СтрокиРегистрацииОплат.ТекущиеДанные.Лицевойсчет.Наименование + " на сумма "
//            + Форма.Элементы.СтрокиРегистрацииОплат.ТекущиеДанные.Сумма, Режим, 0);

//    Если Ответ = КодВозвратаДиалога.Да Тогда
//        Состояние("Возврат прихода " + Форма.Элементы.СтрокиРегистрацииОплат.ТекущиеДанные.ЛицевойСчет.Наименование, "Возврат чеков");
//        ДляТекущейСтрокиРегистрацияЧека("sell_refund", Форма.Элементы.СтрокиРегистрацииОплат.ТекущиеДанные);
//        ПоказатьПредупреждение( , "Возврат выполнен успешно");

//    ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
//        ОбщегоНазначенияКлиент.СообщениеПользователю("Не выполнено");
//    КонецЕсли;
//КонецПроцедуры

//&НаКлиенте
//Процедура КоррекцияПрихода(Форма) Экспорт
//    ФормаДоступа = ПолучитьФорму("Обработка.ГП_APIСервисСчетмашОнлайнВ2.Форма.ФормаДоступа");
//    Проверка = ФормаДоступа.ОткрытьМодально();

//    Если Проверка <> Неопределено Тогда
//        Если Проверка.Свойство("Да") Тогда
//            Режим = РежимДиалогаВопрос.ДаНет;
//            Ответ = Вопрос("Выполнить Коррекцию прихода по лицевому счету " + Форма.Элементы.СтрокиРегистрацииОплат.ТекущиеДанные.Лицевойсчет.Наименование + " на сумма "
//                    + Форма.Элементы.СтрокиРегистрацииОплат.ТекущиеДанные.Сумма, Режим, 0);

//            Если Ответ = КодВозвратаДиалога.Да Тогда
//                Инд = 0;
//                Всего = Форма.Объект.СтрокиРегистрацииОплат.Количество();
//                Для Каждого ТекущаяСтрока Из Форма.Объект.СтрокиРегистрацииОплат Цикл
//                    Инд = Инд + 1;
//                    ДляТекущейСтрокиРегистрацияЧека("sell_correction", Форма.Элементы.СтрокиРегистрацииОплат.ТекущиеДанные);
//                    Состояние("Коррекция прихода " + Инд + " из " + Всего, Инд * 100 / Всего, "Отправка чеков");
//                КонецЦикла;

//            ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
//                ОбщегоНазначенияКлиент.СообщениеПользователю("Не выполнено");
//            КонецЕсли;

//        Иначе
//            Режим = РежимДиалогаВопрос.ПовторитьОтмена;
//            Ответ = Вопрос("Вы ввели неверный пароль!", Режим, 0);
//        КонецЕсли;

//    Иначе
//        ОбщегоНазначенияКлиент.СообщениеПользователю("Отменен ввод пароля");
//    КонецЕсли;
//КонецПроцедуры

//&НаКлиенте
//Процедура КоррекцияПриходаВсехСтрок(Форма) Экспорт
//    ФормаДоступа = ПолучитьФорму("Обработка.ГП_APIСервисСчетмашОнлайн.Форма.ФормаДоступа");
//    Проверка = ФормаДоступа.ОткрытьМодально();

//    Если Проверка <> Неопределено Тогда
//        Если Проверка.Свойство("Да") Тогда
//            ВсегоСумма = 0;
//            Для Каждого Стр Из Форма.Объект.СтрокиРегистрацииОплат Цикл
//                ВсегоСумма = ВсегоСумма + Стр.Сумма;
//            КонецЦикла;

//            Режим = РежимДиалогаВопрос.ДаНет;
//            Ответ = Вопрос("Выполнить Коррекцию прихода по всем строкам табличной части на сумма " + ВсегоСумма, Режим, 0);

//            Если Ответ = КодВозвратаДиалога.Да Тогда
//                Инд = 0;
//                Всего = Форма.Объект.СтрокиРегистрацииОплат.Количество();
//                Для Каждого ТекущаяСтрока Из Форма.Объект.СтрокиРегистрацииОплат Цикл
//                    Инд = Инд + 1;
//                    ДляТекущейСтрокиРегистрацияЧека("sell_correction", Форма.Элементы.СтрокиРегистрацииОплат.ТекущиеДанные);
//                    Состояние("Коррекция прихода " + Инд + " из " + Всего, Инд * 100 / Всего, "Отправка чеков");
//                КонецЦикла;

//            ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
//                ОбщегоНазначенияКлиент.СообщениеПользователю("Не выполнено");
//            КонецЕсли;

//        Иначе
//            Режим = РежимДиалогаВопрос.ПовторитьОтмена;
//            Ответ = Вопрос("Вы ввели неверный пароль!", Режим, 0);
//        КонецЕсли;

//    Иначе
//        ОбщегоНазначенияКлиент.СообщениеПользователю("Отменен ввод пароля");
//    КонецЕсли;
//КонецПроцедуры

//&НаКлиенте
//Процедура ВозвратПриходаВсехСтрок(Форма) Экспорт
//    ФормаДоступа = ПолучитьФорму("Обработка.ГП_APIСервисСчетмашОнлайн.Форма.ФормаДоступа");
//    Проверка = ФормаДоступа.ОткрытьМодально();

//    Если Проверка <> Неопределено Тогда
//        Если Проверка.Свойство("Да") Тогда
//            ВсегоСумма = 0;
//            Для Каждого Стр Из Форма.Объект.СтрокиРегистрацииОплат Цикл

//                ВсегоСумма = ВсегоСумма + Стр.Сумма;

//            КонецЦикла;

//            Режим = РежимДиалогаВопрос.ДаНет;
//            Ответ = Вопрос("Выполнить Возврат прихода по всем строкам табличной части на сумма " + ВсегоСумма, Режим, 0);

//            Если Ответ = КодВозвратаДиалога.Да Тогда

//                Инд = 0;
//                Всего = Форма.Объект.СтрокиРегистрацииОплат.Количество();
//                Для Каждого ТекущаяСтрока Из Форма.Объект.СтрокиРегистрацииОплат Цикл
//                    Инд = Инд + 1;
//                    ДляТекущейСтрокиРегистрацияЧека("sell_refund", Форма.Элементы.СтрокиРегистрацииОплат.ТекущиеДанные);
//                    Состояние("Возврат прихода " + Инд + " из " + Всего, Инд * 100 / Всего, "Отправка чеков");
//                КонецЦикла;

//            ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда

//                ОбщегоНазначенияКлиент.СообщениеПользователю("Не выполнено");
//            КонецЕсли;
//        Иначе

//            Режим = РежимДиалогаВопрос.ПовторитьОтмена;
//            Ответ = Вопрос("Вы ввели неверный пароль!", Режим, 0);

//        КонецЕсли;

//    Иначе
//        ОбщегоНазначенияКлиент.СообщениеПользователю("Отменен ввод пароля");
//    КонецЕсли;
//КонецПроцедуры

//#КонецОбласти // КомандыРаботыСЧеками

//&НаКлиенте
//Процедура ДляТекущейСтрокиРегистрацияЧека(Форма, Знач ТипОперации, Знач ТекущаяСтрока)

//    Получитьtoken();

//    // Запись JSON
//    Структура = Новый Структура;
//    Структура.Вставить("timestamp", ТекущаяСтрока.timestamp); // дата оплаты
//    Если ТипОперации = "sell_refund" Тогда
//        Структура.Вставить("external_id", "VP" + ТекущаяСтрока.external_id); // уникальный номер документа
//    Иначе
//        Структура.Вставить("external_id", ТекущаяСтрока.external_id); // уникальный номер документа
//    КонецЕсли;

//    service = Новый Структура;
//    service.Вставить("callback_url", ""); // Адрес, на который придёт ответ от сервера https://test.ru/api.php
//    Структура.Вставить("service", service);

//    //ТабличнаяЧастьЧека(ТекущаяСтрока.ДокРегистрацияОплаты, ТекущаяСтрока.Лицевойсчет);

//    ПП = Новый Структура;
//    ПП.Вставить("ДокРегистрацияОплаты", ТекущаяСтрока.ДокРегистрацияОплаты);
//    ПП.Вставить("Лицевойсчет", ТекущаяСтрока.Лицевойсчет);
//    ПП.Вставить("external_id", ТекущаяСтрока.external_id);

//    ТЧЧека = Форма.Объект.РасшифровкаРегистрацийОплат.НайтиСтроки(ПП);

//    items_М = Новый Массив;

//    Для Каждого ТекУслуга Из ТЧЧека Цикл

//        items_ = Новый Структура;
//        items_.Вставить("name", СокрЛП(ТекУслуга.Услуга)); // Название товара

//        price = ТекУслуга.Сумма + ТекУслуга.Пени;

//        items_.Вставить("type", ТекУслуга.items_type); // 1–товар, 2-подакцизный товар, 3-работа, 4-услуга...
//        items_.Вставить("mode", ТекУслуга.items_mode); // 1-предоплата 100%, 2–частичная предоплата, 3–аванс, 4-полный расчет полная оплата......
//        items_.Вставить("price", price); // Цена с учётом скидок
//        items_.Вставить("quantity", 1); //количество
//        items_.Вставить("sum", price); //сумма

//        ЭтоТочноПени = Найти(СокрЛП(ТекУслуга.Услуга), "пени");
//        Если ЭтоТочноПени = 0 Тогда

//            items_.Вставить("tax", "vat20"); //НДС, допустимые значения vat18, vat20, vat10, vat118, vat110, vat0, none
//            items_.Вставить("tax_sum", Окр(price * 20 / 100, 2));

//        Иначе

//            items_.Вставить("tax", "none"); //НДС, допустимые значения vat18, vat20, vat10, vat118, vat110, vat0, none
//            items_.Вставить("tax_sum", 0);

//        КонецЕсли;

//        items_М.Добавить(items_);

//    КонецЦикла;

//    attributes = Новый Структура;
//    attributes.Вставить("email", ТекущаяСтрока.email); // Email покупателя
//    attributes.Вставить("phone", ТекущаяСтрока.phone); // телефон покупателя

//    receipt = Новый Структура;
//    receipt.Вставить("attributes", attributes);
//    receipt.Вставить("items", items_М);
//    receipt.Вставить("total", ТекущаяСтрока.total);

//    payments_ = Новый Структура;
//    payments_.Вставить("type", ТекущаяСтрока.type); //Вид оплаты: 1 – электронный, 2 – аванс, 3 - кредит и т. д. ....
//    payments_.Вставить("sum", ТекущаяСтрока.total); //???

//    payments_М = Новый Массив;
//    payments_М.Добавить(payments_);

//    receipt.Вставить("payments", payments_М);

//    Структура.Вставить("receipt", receipt);

//    ЗаписьJSON = Новый ЗаписьJSON;
//    тПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, " ", Истина);
//    ЗаписьJSON.УстановитьСтроку(тПараметрыJSON);
//    ЗаписатьJSON(ЗаписьJSON, Структура);
//    СтрокаJS = ЗаписьJSON.Закрыть();

//    ФайлОтвета = СокрЛП(Форма.Объект.КаталогДляВременныхФайлов) + "\answer_" + ТипОперации + ".txt";

//    // Отправка запроса
//    HTTPСоединение = Новый HTTPСоединение("online.schetmash.com", , , , , , Новый ЗащищенноеСоединениеOpenSSL());
//    ЗапросPOST = Новый HTTPЗапрос("/lk/api/v1/" + Форма.Объект.ИдентификаторМагазина + "/" + ТипОперации + "?" + "token=" + Форма.Объект.Токен);
//    ЗапросPOST.Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
//    ЗапросPOST.УстановитьТелоИзСтроки(СтрокаJS, КодировкаТекста.UTF8, ИспользованиеByteOrderMark.Авто);
//    HTTPСоединение.ВызватьHTTPМетод("POST", ЗапросPOST, ФайлОтвета);

//    ЧтениеJSON = Новый ЧтениеJSON;
//    ЧтениеJSON.ОткрытьФайл(ФайлОтвета);

//    Пока ЧтениеJSON.Прочитать() Цикл

//        ТипJSON = ЧтениеJSON.ТипТекущегоЗначения;
//        Если ТипJSON = ТипЗначенияJSON.ИмяСвойства Тогда
//            ИмяСвойства = ЧтениеJSON.ТекущееЗначение;
//        КонецЕсли;

//        Если (ИмяСвойства = "id") И ТипJSON = ТипЗначенияJSON.Число Тогда
//            id_Чека = ЧтениеJSON.ТекущееЗначение;
//        КонецЕсли;

//        Если (ИмяСвойства = "status") И ТипJSON = ТипЗначенияJSON.Строка Тогда
//            status = ЧтениеJSON.ТекущееЗначение;
//        КонецЕсли;

//    КонецЦикла;

//    ТекущаяСтрока.id_Чека = id_Чека;
//    ТекущаяСтрока.status = status;

//КонецПроцедуры

//#КонецОбласти // ПрограммныйИнтерфейс
