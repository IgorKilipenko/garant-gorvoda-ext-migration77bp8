#Область ПрограммныйИнтерфейс

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.НоменклатурныеГруппы
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьНоменклатурнуюГруппуВодоснабжение() Экспорт
    Возврат ПолучитьНоменклатурнуюГруппуПоКоду("0000001", Истина);
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.НоменклатурныеГруппы
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьНоменклатурнуюГруппуВодоотведение() Экспорт
    Возврат ПолучитьНоменклатурнуюГруппуПоКоду("0000002", Истина);
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.НоменклатурныеГруппы
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьНоменклатурнуюГруппуНегативноеВоздействиеНаЦСВ() Экспорт
    Возврат ПолучитьНоменклатурнуюГруппуПоКоду("0000158", Истина);
КонецФункции

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.Номенклатура
//      * Код - Строка
//      * Наименование - Строка
//      * НаименованиеПолное - Строка
Функция ПолучитьНоменклатуруНегативноеВоздействиеНаЦСВ() Экспорт
    Возврат ПолучитьНоменклатуруПоКоду("00-00000008", Истина);
КонецФункции

// Параметры:
//  Код - Строка
//  ИгнорироватьПомеченныеНаУдаление - Булево
// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.НоменклатурныеГруппы
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьНоменклатурнуюГруппуПоКоду(Знач Код, Знач ИгнорироватьПомеченныеНаУдаление = Истина) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   НоменклатурныеГруппы.Ссылка КАК Ссылка,
        |   НоменклатурныеГруппы.Код КАК Код,
        |   НоменклатурныеГруппы.Наименование КАК Наименование
        |ИЗ
        |   Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
        |ГДЕ
        |   НоменклатурныеГруппы.Код = &Код
        |   И НоменклатурныеГруппы.ПометкаУдаления = ЛОЖЬ
        |";

    Запрос.УстановитьПараметр("Код", Код);
    Если ИгнорироватьПомеченныеНаУдаление = Ложь Тогда
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НоменклатурныеГруппы.ПометкаУдаления = ЛОЖЬ", "");
    КонецЕсли;

    РезультатЗапроса = Запрос.Выполнить();
    ТаблицаУслуг = РезультатЗапроса.Выгрузить();

    Если ТаблицаУслуг.Количество() <> 1 Тогда
        ВызватьИсключение(СтрШаблон("Ошибка при получении номенклатурной группы с кодом ""%1"". %2",
                Код,
                ?(ТаблицаУслуг.Количество() > 1, "Код номенклатурной группы не уникален.", "Номенклатурная группа отсутствует в ИБ.")));
    КонецЕсли;

    РезультатФункции = Новый Структура("Ссылка, Код, Наименование");
    ЗаполнитьЗначенияСвойств(РезультатФункции, ТаблицаУслуг[0]);

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  Код - Строка
//  ИгнорироватьПомеченныеНаУдаление - Булево
// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.Номенклатура
//      * Код - Строка
//      * Наименование - Строка
//      * НаименованиеПолное - Строка
Функция ПолучитьНоменклатуруПоКоду(Знач Код, Знач ИгнорироватьПомеченныеНаУдаление = Истина) Экспорт
    СтруктураНоменклатуры = ГП_ОбщегоНазначения.ПолучитьЭлементСправочникаПоКоду("Номенклатура", Код, ИгнорироватьПомеченныеНаУдаление);
    СтруктураНоменклатуры.Вставить("НаименованиеПолное",
        ?(СтруктураНоменклатуры.Ссылка.Пустая(), "",
            ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураНоменклатуры.Ссылка, "НаименованиеПолное")));

    Возврат СтруктураНоменклатуры;
КонецФункции

// Возвращаемое значение:
//  - Соответствие
Функция ПолучитьСоответствиеПсевдонимовНоменклатурныхГрупп() Экспорт
    РезультатФункции = Новый Соответствие;

    СтруктураНоменклатуры = ПолучитьНоменклатурнуюГруппуНегативноеВоздействиеНаЦСВ();
    СтруктураНоменклатуры.Вставить("НаименованиеПолное",
        ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураНоменклатуры.Ссылка, "НаименованиеПолное"));

    РезультатФункции.Вставить(СтруктураНоменклатуры, "Водоотведение");

    Возврат РезультатФункции;
КонецФункции

// Гарант+ Килипенко 26.02.2025 Псевдоним Негативного воздействия ++
#Область ПсевдонимыНоменклатуры

// Возвращаемое значение:
//  - Строка
Функция ПолучитьПсевдонимНегативногоВоздействияДляПечатныхФорм() Экспорт
    Возврат "Негативное воздействие на ЦСВ";
КонецФункции

// Возвращаемое значение:
//  - Соответствие из КличИЗначение
//      * Ключ - СправочникСсылка.Номенклатура
//      * Значение - Структура
Функция ПолучитьСоответствиеПсевдонимовНоменклатуры() Экспорт
    РезультатФункции = Новый Соответствие;

    СтруктураНоменклатуры = ПолучитьНоменклатуруНегативноеВоздействиеНаЦСВ();
    СтруктураНоменклатуры.Вставить("Псевдоним", ПолучитьПсевдонимНегативногоВоздействияДляПечатныхФорм());
    РезультатФункции.Вставить(СтруктураНоменклатуры.Ссылка, СтруктураНоменклатуры);

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  ИсходнаяСтрокаЗамены - Строка
//  Номенклатура - СправочникСсылка.Номенклатура
// Возвращаемое значение:
//  - Строка
Функция ЗаменитьНаименованиеНоменклатурыПсевдонимом(Знач ИсходнаяСтрокаЗамены, Знач Номенклатура) Экспорт
    РезультатФункции = ИсходнаяСтрокаЗамены;

    Если ТипЗнч(Номенклатура) <> Тип("СправочникСсылка.Номенклатура") И Номенклатура.Пустая() = Ложь Тогда
        Возврат РезультатФункции;
    КонецЕсли;

    СоответствиеПсевдонимовНоменклатуры = ПолучитьСоответствиеПсевдонимовНоменклатуры();

    СтруктураНоменклатурыЗамены = СоответствиеПсевдонимовНоменклатуры.Получить(Номенклатура);
    Если СтруктураНоменклатурыЗамены = Неопределено Тогда
        Возврат РезультатФункции; // Нет псевдонима
    КонецЕсли;

    ШаблонЗаменыНаименованияНоменклатуры = ?(ПустаяСтрока(СтруктураНоменклатурыЗамены.НаименованиеПолное),
            СтруктураНоменклатурыЗамены.Наименование, СтруктураНоменклатурыЗамены.НаименованиеПолное);

    РезультатФункции =
        СтрЗаменить(ИсходнаяСтрокаЗамены,
            ШаблонЗаменыНаименованияНоменклатуры,
            СтруктураНоменклатурыЗамены.Псевдоним);

    Возврат РезультатФункции; // Замена выполнена
КонецФункции

#КонецОбласти // ПсевдонимыНоменклатуры
// Гарант+ Килипенко 26.02.2025 Псевдоним Негативного воздействия --

#КонецОбласти // ПрограммныйИнтерфейс
