#Область ПрограммныйИнтерфейс

// Возвращает таблицу соответствий номеров договоров полученных из наименования договора
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Ссылка - СправочникСсылка.ДоговорыКонтрагентов
//      * Наименование - Строка
//      * НомерИзНаименования - Строка
Функция ПолучитьТаблицуСоответствийНомеровНаименованийДоговоров() Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
        |	ДоговорыКонтрагентов.Наименование КАК Наименование,
        |	ВЫРАЗИТЬ("""" КАК СТРОКА(15)) КАК НомерИзНаименования
        |ИЗ
        |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
        |ГДЕ
        |	ДоговорыКонтрагентов.ЭтоГруппа = ЛОЖЬ
        |	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
        |	И ДоговорыКонтрагентов.lc_ВидДоговора В (&ВидыДоговора)
        |	И ДоговорыКонтрагентов.Владелец ССЫЛКА Справочник.Контрагенты
        |";

    СписокВидовДоговоров = Новый Массив;
    СписокВидовДоговоров.Добавить(ПолучитьДополнительныйВидДоговораАбонентскийОтдел().Ссылка);

    Запрос.УстановитьПараметр("ВидыДоговора", СписокВидовДоговоров);

    РезультатЗапроса = Запрос.Выполнить();
    СоответствияНомеровСуществующихДоговоров = РезультатЗапроса.Выгрузить();
    Для Каждого СтрокаДанных Из СоответствияНомеровСуществующихДоговоров Цикл
        // Заполнение поля НомерИзНаименования
        СтруктураНомера = ГП_МиграцияОбщегоНазначения.ПолучитьНомерДоговораПоНаименованию(СтрокаДанных.Наименование);
        Если СтруктураНомера.Успех = Истина Тогда
            СтрокаДанных.НомерИзНаименования = СтруктураНомера.Номер + ?(ПустаяСтрока(СтруктураНомера.Суффикс),
                    "", СтрШаблон("-%1", СтруктураНомера.Суффикс));
        КонецЕсли;
    КонецЦикла;

    Возврат СоответствияНомеровСуществующихДоговоров;
КонецФункции

#Область Константы

// Возвращаемое значение:
//  - Структура
//      * Ссылка - СправочникСсылка.lc_ВидыДоговоров
//      * Код - Строка
//      * Наименование - Строка
Функция ПолучитьДополнительныйВидДоговораАбонентскийОтдел() Экспорт
    РезультатФункции = Новый Структура("Ссылка, Код, Наименование");
    РезультатФункции.Код = "000000004";

    РезультатФункции.Ссылка = Справочники.lc_ВидыДоговоров.НайтиПоКоду(РезультатФункции.Код, Истина);
    Если ЗначениеЗаполнено(РезультатФункции) = Ложь Тогда
        ВызватьИсключение("Отсутствует обязательный элемент ""АбонентскийОтдел"" справочника ""lc_ВидыДоговоров""");
    КонецЕсли;

    РезультатФункции.Наименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РезультатФункции.Ссылка, "Наименование");

    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // Константы

#КонецОбласти // ПрограммныйИнтерфейс
