#Область ПрограммныйИнтерфейс

// Параметры:
//  ДатаНачала - Дата
//  ДатаОкончания - Дата
//  СтруктураОтбора - Структура
//      * Организация - СправочникСсылка.Организации, Неопределено
//      * Контрагент - СправочникСсылка.Контрагенты, Неопределено
// Возвращаемое значение:
//  - Структура
Функция СобратьДанныеЧековПрочихУслугСчетмаш(Знач ДатаНачала, Знач ДатаОкончания, Знач СтруктураОтбора) Экспорт
    РезультатФункции = Новый Структура("ТаблицаОплат, РасшифровкаОплатДляЧеков");

    ТаблицаОплатПрочихУслуг = ПолучитьТаблицуОплатПрочихУслугСчетмаш(ДатаНачала, ДатаОкончания, СтруктураОтбора);

    КолонкиТаблицыОплат = "Организация, Документ, Контрагент";
    РезультатФункции.ТаблицаОплат = ТаблицаОплатПрочихУслуг.Скопировать( , КолонкиТаблицыОплат);
    РезультатФункции.ТаблицаОплат.Свернуть(КолонкиТаблицыОплат);
    РасшифровкаОплатДляЧеков = ПолучитьРасшифровкуОплатПрочихУслугДляЧековСчетмаш(ДатаНачала, ДатаОкончания, СтруктураОтбора);

    КолонкиТаблицыОплат = "Документ, Контрагент";
    ТаблицаОплатПрочихУслуг = ТаблицаОплатПрочихУслуг.Скопировать( , КолонкиТаблицыОплат + ", Сумма");
    РезультатФункции.ТаблицаОплат = ТаблицаОплатПрочихУслуг;
    РезультатФункции.ТаблицаОплат.Свернуть(КолонкиТаблицыОплат, "Сумма");
    РезультатФункции.РасшифровкаОплатДляЧеков = РасшифровкаОплатДляЧеков;

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  ДатаНачала - Дата
//  ДатаОкончания - Дата
//  СтруктураОтбора - Структура
//      * Организация - СправочникСсылка.Организации, Неопределено
//      * Контрагент - СправочникСсылка.Контрагенты, Неопределено
//      * Контрагент - СправочникСсылка.Контрагенты, Неопределено
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Организация - СправочникСсылка.Организации
//      * Документ - ДокументСсылка.КВП_РегистрацияОплаты
//      * Контрагент - СправочникСсылка.Контрагенты
//      * Сумма - Число
Функция ПолучитьТаблицуОплатПрочихУслугСчетмаш(Знач ДатаНачала, Знач ДатаОкончания, Знач СтруктураОтбора) Экспорт
    РезультатФункции = Неопределено;

    ТаблицаРасшифровкиОплат = ПолучитьТаблицуДанныхОплатПрочихУслугСчетмаш(ДатаНачала, ДатаОкончания, СтруктураОтбора);

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   *
        |ПОМЕСТИТЬ ВТ_ТаблицаРасшифровкиОплат
        |ИЗ
        |   &ТаблицаРасшифровкиОплат КАК ТаблицаРасшифровкиОплат
        |;
        |
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   ВТ_ТаблицаРасшифровкиОплат.Организация КАК Организация,
        |   ВТ_ТаблицаРасшифровкиОплат.Документ КАК Документ,
        |   ВТ_ТаблицаРасшифровкиОплат.Контрагент КАК Контрагент,
        |   СУММА(ВТ_ТаблицаРасшифровкиОплат.СуммаПлатежа) КАК Сумма
        //|   СУММА(ВТ_ТаблицаРасшифровкиОплат.СуммаВозврата) КАК СуммаВозврата
        |ИЗ
        |   ВТ_ТаблицаРасшифровкиОплат КАК ВТ_ТаблицаРасшифровкиОплат
        |СГРУППИРОВАТЬ ПО
        |   ВТ_ТаблицаРасшифровкиОплат.Организация,
        |   ВТ_ТаблицаРасшифровкиОплат.Документ,
        |   ВТ_ТаблицаРасшифровкиОплат.Контрагент
        |;
        |
        |// Контроль дублей
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   ВТ_ТаблицаРасшифровкиОплат.Документ КАК Документ,
        |   ВТ_ТаблицаРасшифровкиОплат.Контрагент КАК Контрагент
        |ИЗ
        |   ВТ_ТаблицаРасшифровкиОплат КАК ВТ_ТаблицаРасшифровкиОплат
        |
        |СГРУППИРОВАТЬ ПО
        |   ВТ_ТаблицаРасшифровкиОплат.Документ,
        |   ВТ_ТаблицаРасшифровкиОплат.Контрагент
        |ИМЕЮЩИЕ
        |   КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ТаблицаРасшифровкиОплат.Контрагент) > 1
        |;";

    Запрос.УстановитьПараметр("ТаблицаРасшифровкиОплат", ТаблицаРасшифровкиОплат);

    РезультатПакетаЗапроса = Запрос.ВыполнитьПакет();

    РезультатФункции = РезультатПакетаЗапроса[РезультатПакетаЗапроса.Количество() - 2].Выгрузить();
    ТаблицаКонтроля = РезультатПакетаЗапроса[РезультатПакетаЗапроса.Количество() - 1].Выгрузить();

    // Контроль
    Если ТаблицаКонтроля.Количество() <> 0 Тогда
        Для Каждого СтрокаКонтроля Из ТаблицаКонтроля Цикл
            НайденныеСтрокиДляУдаления = РезультатФункции.НайтиСтроки(Новый Структура("Документ", СтрокаКонтроля.Документ));
            Для Каждого СтрокаУдаления Из НайденныеСтрокиДляУдаления Цикл
                ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
                        "Документ: ""%1"" не может быть обработан т.к. контрагент документа не соответствует строкам расшифровки",
                        СтрокаКонтроля.Документ));
                РезультатФункции.Удалить(СтрокаУдаления);
            КонецЦикла;
        КонецЦикла;
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

// Параметры:
//  ДатаНачала - Дата
//  ДатаОкончания - Дата
//  СтруктураОтбора - Структура
//      * Организация - СправочникСсылка.Организации, Неопределено
//      * Контрагент - СправочникСсылка.Контрагенты, Неопределено
//      * МассивИсключенийВидовДоговоровДополнительных - Массив из СправочникСсылка.lc_ВидыДоговоров, Неопределено
//  МВТ - МенеджерВременныхТаблиц, Неопределено
//  Параметры - Структура, Неопределено
//      * ВыводитьПредупрежденияКонтроля - Булево, Неопределено - По умолчанию Истина если МВТ = Неопределено
// Возвращаемое значение:
//  - ТаблицаЗначений, МенеджерВременныхТаблиц
Функция ПолучитьТаблицуДанныхОплатПрочихУслугСчетмаш(
        Знач ДатаНачала, Знач ДатаОкончания, Знач СтруктураОтбора, МВТ = Неопределено, Знач Параметры = Неопределено) Экспорт

    Организация = ГП_ВспомогательныеФункции.ПолучитьЗначениеСвойстваКонтейнера(
            СтруктураОтбора, "Организация", УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию());
    Контрагент = ГП_ВспомогательныеФункции.ПолучитьЗначениеСвойстваКонтейнера(
            СтруктураОтбора, "Контрагент", Неопределено);
    МассивИсключенийВидовДоговоровДополнительных = ГП_ВспомогательныеФункции.ПолучитьЗначениеСвойстваКонтейнера(
            СтруктураОтбора, "МассивИсключенийВидовДоговоровДополнительных", Неопределено);
    Если МассивИсключенийВидовДоговоровДополнительных = Неопределено Тогда
        МассивИсключенийВидовДоговоровДополнительных =
            ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
                ГП_РаботаСДоговорами.ПолучитьДополнительныйВидДоговораАбонентскийОтдел().Ссылка);
    КонецЕсли;

    СтавкаНДСПеречисление = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеОсновнойСтавкиНДСПоУмолчанию(ТекущаяДатаСеанса());
    ВидСтавкиНДСИзПерсональныхНастроек = Перечисления.ВидыСтавокНДС.ВидСтавки(СтавкаНДСПеречисление);

    Запрос = Новый Запрос;
    Запрос.Текст = ПолучитьТекстЗапросаДанныхОплатПрочихУслугСчетмаш(Контрагент <> Неопределено, МВТ <> Неопределено);
    Если МВТ <> Неопределено Тогда
        Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
    КонецЕсли;

    // Установка параметров отбора:
    Запрос.УстановитьПараметр("МассивИсключенийВидовДоговоровДополнительных",
        МассивИсключенийВидовДоговоровДополнительных);

    Запрос.УстановитьПараметр("Организация", Организация);
    Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
    Запрос.УстановитьПараметр("КонецПериода", ДатаОкончания);
    Запрос.УстановитьПараметр("ВидСтавкиНДСИзПерсональныхНастроек", ВидСтавкиНДСИзПерсональныхНастроек);
    Запрос.УстановитьПараметр("ВидыОперацииПоступления",
        ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя));
    Если Контрагент <> Неопределено Тогда
        Запрос.УстановитьПараметр("Контрагент", Контрагент);
    КонецЕсли;

    Если МВТ <> Неопределено Тогда
        Запрос.Выполнить();
        РезультатФункции = МВТ;
    Иначе
        РезультатПакетаЗапроса = Запрос.ВыполнитьПакет();
        РезультатФункции = РезультатПакетаЗапроса[РезультатПакетаЗапроса.Количество() - 1].Выгрузить();

        ВыводитьПредупрежденияКонтроля = Истина; // По умолчанию Истина
        Если (Параметры <> Неопределено) И Параметры.Свойство("ВыводитьПредупрежденияКонтроля") Тогда
            ВыводитьПредупрежденияКонтроля = (Параметры.ВыводитьПредупрежденияКонтроля = Истина);
        КонецЕсли;

        // Контроль дублей
        Если ВыводитьПредупрежденияКонтроля = Истина Тогда
            ТаблицаДублейСтрокОплат = РезультатПакетаЗапроса[РезультатПакетаЗапроса.Количество() - 2].Выгрузить();
            Для Каждого СтрокаДубля Из ТаблицаДублейСтрокОплат Цикл
                ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
                        "ВНИМАНИЕ! По строке оплаты: Контрагент: < %1 > Документ: < %2 > Счет на оплату: < %3 > указано несколько услуг.
                        |Данная строка оплаты (чек) не будет учтена при сборе данных для передачи в Счетмаш",
                        СтрокаДубля.Контрагент, СтрокаДубля.Документ, СтрокаДубля.СчетНаОплату));
            КонецЦикла;
        КонецЕсли;
    КонецЕсли;

    Возврат РезультатФункции;
КонецФункции

Функция ПолучитьРасшифровкуОплатПрочихУслугДляЧековСчетмаш(Знач ДатаНачала, Знач ДатаОкончания, Знач СтруктураОтбора) Экспорт
    Организация = ГП_ВспомогательныеФункции.ПолучитьЗначениеСвойстваКонтейнера(
            СтруктураОтбора, "Организация", УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию());
    Контрагент = ГП_ВспомогательныеФункции.ПолучитьЗначениеСвойстваКонтейнера(
            СтруктураОтбора, "Контрагент", Неопределено);
    //ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО =
    //    ГП_ОбменОФД.ПолучитьПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахСчетмаш();

    ТекущаяДата = ТекущаяДатаСеанса();
    СтавкаНДСПеречисление = УПЖКХ_ОбщегоНазначенияСервер.ПолучитьЗначениеОсновнойСтавкиНДСПоУмолчанию(ТекущаяДата);
    ВидСтавкиНДСИзПерсональныхНастроек = Перечисления.ВидыСтавокНДС.ВидСтавки(СтавкаНДСПеречисление);

    Запрос = Новый Запрос;
    Запрос.Текст = ПолучитьТекстЗапросаРасшифровкиОплатПрочихУслугДляЧековСчетмаш(Контрагент <> Неопределено);

    Запрос.УстановитьПараметр("Организация", Организация);
    Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
    Запрос.УстановитьПараметр("КонецПериода", ДатаОкончания);
    Запрос.УстановитьПараметр("ВидСтавкиНДСИзПерсональныхНастроек", ВидСтавкиНДСИзПерсональныхНастроек);
    Запрос.УстановитьПараметр("ВидыОперацииПоступления",
        ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя));
    Запрос.УстановитьПараметр("МассивИсключенийВидовДоговоровДополнительных",
        ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ГП_РаботаСДоговорами.ПолучитьДополнительныйВидДоговораАбонентскийОтдел().Ссылка));
    Если Контрагент <> Неопределено Тогда
        Запрос.УстановитьПараметр("Контрагент", Контрагент);
    КонецЕсли;
    //Запрос.УстановитьПараметр("ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО",
    //    ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО);

    РезультатЗапроса = Запрос.Выполнить();
    РасшифровкаОплатДляЧеков = РезультатЗапроса.Выгрузить();

    // Пересчет сумм НДС
    Для Каждого ТекущаяСтрока Из РасшифровкаОплатДляЧеков Цикл
        ТекущаяСтрока.СуммаНДС = Окр(УчетНДСКлиентСервер.РассчитатьСуммуНДС(ТекущаяСтрока.Сумма,
                    Истина, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ТекущаяСтрока.СтавкаНДС)), 2);
    КонецЦикла;

    // Колонка не используется в дальнейших операциях печати чека.
    РасшифровкаОплатДляЧеков.Колонки.Удалить("ВидСтавкиНДС");

    СвернутьТаблицуРасшифровкаОплатПрочихУслугДляЧековСчетмашПоТарифамУслуг(РасшифровкаОплатДляЧеков);

    // Переименование колонок
    РасшифровкаОплатДляЧеков.Колонки.ПредставлениеТовараУслуги.Имя = "ВидУслугиПредставление";
    РасшифровкаОплатДляЧеков.Колонки.Номенклатура.Имя = "Услуга";

    Возврат РасшифровкаОплатДляЧеков;
КонецФункции

// Параметры:
//  РасшифровкаОплатДляЧеков - ТаблицаЗначений
// Возвращаемое значение:
//  - Булево - Истина если процесс сворачивания выполнялся
Функция СвернутьТаблицуРасшифровкаОплатПрочихУслугДляЧековСчетмашПоТарифамУслуг(РасшифровкаОплатДляЧеков) Экспорт
    КолонкиСворачивания = Новый Массив;
    КолонкиСворачивания.Добавить("Документ");
    КолонкиСворачивания.Добавить("Контрагент");
    КолонкиСворачивания.Добавить("Номенклатура");
    КолонкиСворачивания.Добавить("ПредставлениеТовараУслуги");
    КолонкиСворачивания.Добавить("СтавкаНДС");
    КолонкиСворачивания.Добавить("ЭтоАванс");
    КолонкиСворачивания.Добавить("ПризнакПредметаРасчета");
    КолонкиСворачивания.Добавить("ПризнакСпособаРасчета");

    КолонкиСуммирования = Новый Массив;
    КолонкиСуммирования.Добавить("Сумма, СуммаНДС");

    СтрокаКолонокСворачивания = ГП_ВспомогательныеФункцииКлиентСервер.МассивВСтроку(КолонкиСворачивания, ", ");
    СтрокаКолонокСуммирования = ГП_ВспомогательныеФункцииКлиентСервер.МассивВСтроку(КолонкиСуммирования, ", ");

    РасшифровкаОплатДляЧеков.Свернуть(СтрокаКолонокСворачивания, СтрокаКолонокСуммирования);

    // Установка Тариф = Сумма
    РасшифровкаОплатДляЧеков.Колонки.Добавить("Тариф", Новый ОписаниеТипов("Число"));
    Для Каждого ТекущаяСтрокаРасшифровки Из РасшифровкаОплатДляЧеков Цикл
        ТекущаяСтрокаРасшифровки.Тариф = ТекущаяСтрокаРасшифровки.Сумма;
    КонецЦикла;

    Возврат Истина;
КонецФункции

// Параметры:
//  ДанныеДокумента - Структура
//      * Дата - Дата
//      * Номер - Строка
//  ДанныеКонтрагента - Структура
//      * Код - Строка
// Возвращаемое значение:
//  - Строка
Функция СформироватьВнешнийИдентификаторЧекаПрочихУслугСчетмаш(Знач ДанныеДокумента, Знач ДанныеКонтрагента) Экспорт
    ПрефиксНомераДокумента = ПолучитьПрефиксДляНомераДокументаОплатыПрочихУслуг();

    РезультатФункции = ГП_ОбменОФД.СформироватьВнешнийИдентификаторЧекаСчетмаш(
            ДанныеДокумента, ДанныеКонтрагента, ПрефиксНомераДокумента);

    Возврат РезультатФункции;
КонецФункции

// Возвращаемое значение:
//  - Строка
Функция ПолучитьПрефиксДляНомераДокументаОплатыПрочихУслуг() Экспорт
    Возврат "PRS";
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

// Параметры:
//  СОтборомПоКонтрагенту - Булево
//  ПоместитьВоВременнуюТаблицу - Булево
// Возвращаемое значение:
//  - Строка
Функция ПолучитьТекстЗапросаДанныхОплатПрочихУслугСчетмаш(Знач СОтборомПоКонтрагенту = Ложь, Знач ПоместитьВоВременнуюТаблицу = Ложь)
    ТекстЗапроса =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ПоступлениеНаРасчетныйСчет.Ссылка КАК Ссылка,
        |	ПоступлениеНаРасчетныйСчет.Номер КАК Номер,
        |	ПоступлениеНаРасчетныйСчет.Дата КАК Дата,
        |	ПоступлениеНаРасчетныйСчет.Организация КАК Организация,
        |	ПоступлениеНаРасчетныйСчет.ВидОперации КАК ВидОперации,
        |	ПоступлениеНаРасчетныйСчет.СчетОрганизации КАК СчетОрганизации,
        |	ПоступлениеНаРасчетныйСчет.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
        |	ПоступлениеНаРасчетныйСчет.СчетБанк КАК СчетБанк,
        |	ПоступлениеНаРасчетныйСчет.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
        |	ПоступлениеНаРасчетныйСчет.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
        |	ПоступлениеНаРасчетныйСчет.Контрагент КАК Контрагент,
        |	ПоступлениеНаРасчетныйСчет.СчетКонтрагента КАК СчетКонтрагента,
        |	ПоступлениеНаРасчетныйСчет.СуммаДокумента КАК СуммаДокумента,
        |	ПоступлениеНаРасчетныйСчет.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
        |	ПоступлениеНаРасчетныйСчет.ПодразделениеКт КАК ПодразделениеКт,
        |	ПоступлениеНаРасчетныйСчет.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
        |	ПоступлениеНаРасчетныйСчет.СуммаУслуг КАК СуммаУслуг,
        |	ПоступлениеНаРасчетныйСчет.НазначениеПлатежа КАК НазначениеПлатежа,
        |	ПоступлениеНаРасчетныйСчет.ДоговорКонтрагента КАК ДоговорКонтрагента,
        |	ПоступлениеНаРасчетныйСчет.ВалютаДокумента КАК ВалютаДокумента,
        |	ПоступлениеНаРасчетныйСчет.ДокументОснование КАК ДокументОснование,
        |	ПоступлениеНаРасчетныйСчет.РучнаяКорректировка КАК РучнаяКорректировка,
        |	ПоступлениеНаРасчетныйСчет.БезЗакрывающихДокументов КАК БезЗакрывающихДокументов,
        |	ПоступлениеНаРасчетныйСчет.НомерЧекаККМ КАК НомерЧекаККМ,
        |	ПоступлениеНаРасчетныйСчет.СуммаВозврата КАК СуммаВозврата,
        |	ПоступлениеНаРасчетныйСчет.Налог КАК Налог,
        |	ПоступлениеНаРасчетныйСчет.КодВалютнойОперации КАК КодВалютнойОперации,
        |	ПоступлениеНаРасчетныйСчет.ГП_ОплатаОтПокупателяФизЛица КАК ГП_ОплатаОтПокупателяФизЛица
        |ПОМЕСТИТЬ ВТ_ДокументыПоступленияНаРасчетныйСчет
        |ИЗ
        |	Документ.ПоступлениеНаРасчетныйСчет КАК ПоступлениеНаРасчетныйСчет
        |ГДЕ
        |	ИСТИНА
        |	И ПоступлениеНаРасчетныйСчет.Проведен = ИСТИНА
        |   И ПоступлениеНаРасчетныйСчет.Контрагент = &Контрагент
        |	И ПоступлениеНаРасчетныйСчет.Организация = &Организация
        |	И ПоступлениеНаРасчетныйСчет.НомерЧекаККМ = 0
        |	И ПоступлениеНаРасчетныйСчет.Дата >= &НачалоПериода
        |	И ПоступлениеНаРасчетныйСчет.Дата <= &КонецПериода
        |	И ПоступлениеНаРасчетныйСчет.ВидОперации В(&ВидыОперацииПоступления)
        |	И НЕ ПоступлениеНаРасчетныйСчет.ДоговорКонтрагента.lc_ВидДоговора В (&МассивИсключенийВидовДоговоровДополнительных)
        |	И ВЫБОР// ЭтоФизЛицо
        |			КОГДА ПоступлениеНаРасчетныйСчет.ГП_ОплатаОтПокупателяФизЛица = ИСТИНА
        |				ТОГДА ИСТИНА
        |			КОГДА ПоступлениеНаРасчетныйСчет.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
        |				ТОГДА ПоступлениеНаРасчетныйСчет.Контрагент.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
        |				// Только физ. лица
        |						И НЕ ПоступлениеНаРасчетныйСчет.Контрагент.ИндивидуальныйПредприниматель
        |						И НЕ ПоступлениеНаРасчетныйСчет.Контрагент.Самозанятый
        |			ИНАЧЕ ВЫБОР
        |					КОГДА ЕСТЬNULL(ПоступлениеНаРасчетныйСчет.ДоговорКонтрагента.Владелец, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
        |						ТОГДА ЛОЖЬ
        |					ИНАЧЕ ПоступлениеНаРасчетныйСчет.ДоговорКонтрагента.Владелец.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
        |					// Только физ. лица
        |							И НЕ ПоступлениеНаРасчетныйСчет.ДоговорКонтрагента.Владелец.ИндивидуальныйПредприниматель
        |							И НЕ ПоступлениеНаРасчетныйСчет.ДоговорКонтрагента.Владелец.Самозанятый
        |				КОНЕЦ
        |		КОНЕЦ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ДокументыПоступленияНаРасчетныйСчет.Ссылка КАК Документ,
        |	ВТ_ДокументыПоступленияНаРасчетныйСчет.Организация КАК Организация,
        |	ВТ_ДокументыПоступленияНаРасчетныйСчет.ВидОперации КАК ВидОперации,
        |	ВТ_ДокументыПоступленияНаРасчетныйСчет.Дата КАК ДатаДокумента,
        |	ВТ_ДокументыПоступленияНаРасчетныйСчет.Номер КАК НомерДокумента,
        |	ВТ_ДокументыПоступленияНаРасчетныйСчет.Дата КАК ДатаВходящегоДокумента,
        |	ВТ_ДокументыПоступленияНаРасчетныйСчет.Номер КАК НомерВходящегоДокумента,
        |	ВТ_ДокументыПоступленияНаРасчетныйСчет.Контрагент КАК Контрагент,
        |	ВТ_ДокументыПоступленияНаРасчетныйСчет.ДоговорКонтрагента КАК ДоговорКонтрагента,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.НомерСтроки КАК НомерСтрокиРасшифровкиОплаты,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.ДоговорКонтрагента КАК ДоговорКонтрагентаРасшифровкиОплаты,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СпособПогашенияЗадолженности КАК СпособПогашенияЗадолженности,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.Сделка КАК Сделка,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СуммаПлатежа КАК СуммаПлатежа,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СуммаНДС КАК СуммаНДС,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СчетНаОплату КАК СчетНаОплату,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.ПодразделениеКт КАК ПодразделениеКт,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СуммаУслуг КАК СуммаУслуг,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.КурсНаДатуПриобретенияРеализацииВалюты КАК КурсНаДатуПриобретенияРеализацииВалюты,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.ПорядокОтраженияАванса КАК ПорядокОтраженияАванса,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.ДоходыУСН КАК ДоходыУСН,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.УслугаНПД КАК УслугаНПД,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СуммаВозврата КАК СуммаВозврата,
        |	ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СуммаВозврата <> 0 КАК ЭтоВозврат,
        |	ВТ_ДокументыПоступленияНаРасчетныйСчет.СуммаДокумента КАК СуммаДокумента,
        |	СчетНаОплатуПокупателю.Дата КАК ДатаСчетаНаОплату,
        |	СчетНаОплатуПокупателю.Номер КАК НомерСчетаНаОплату,
        |	СчетНаОплатуПокупателю.ДокументОснование КАК ДокументОснованиеСчетаНаОплату,
        |	СчетНаОплатуПокупателю.ОрганизацияПолучатель КАК ОрганизацияПолучательСчетаНаОплату,
        |	СчетНаОплатуПокупателю.СсылочныйИдентификатор КАК СсылочныйИдентификаторСчетаНаОплату,
        |	СчетНаОплатуПокупателю.ВидОперации КАК ВидОперацииСчетаНаОплату,
        |	СчетНаОплатуПокупателюТовары.НомерСтроки КАК НомерСтрокиТовараСчетаНаОплату,
        |	СчетНаОплатуПокупателюТовары.Номенклатура КАК Номенклатура,
        // |	ВЫБОР
        // |		КОГДА
        // |			СчетНаОплатуПокупателюТовары.Номенклатура.ПризнакПредметаРасчета ЕСТЬ NULL
        // |				ИЛИ СчетНаОплатуПокупателюТовары.Номенклатура.ПризнакПредметаРасчета = ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.ПустаяСсылка)
        // |			ТОГДА ВЫБОР
        // |                   КОГДА СчетНаОплатуПокупателюТовары.Номенклатура.Услуга ЕСТЬ NULL ИЛИ СчетНаОплатуПокупателюТовары.Номенклатура.Услуга
        // |                        ТОГДА ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.Услуга)
        // |                   ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.Товар)
        // |               КОНЕЦ
        // |		ИНАЧЕ
        // |			СчетНаОплатуПокупателюТовары.Номенклатура.ПризнакПредметаРасчета
        // |	КОНЕЦ КАК ПризнакПредметаРасчета,
        |   ЗНАЧЕНИЕ(Перечисление.ПризнакиПредметаРасчета.Услуга) КАК ПризнакПредметаРасчета, // !!! По ТЗ признак предмета расчета принудительно устанавливается в Услуга
        |	ЕСТЬNULL(СчетНаОплатуПокупателюТовары.Номенклатура.НоменклатурнаяГруппа, ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)) КАК НоменклатурнаяГруппаСчетаНаОплату,
        |	ВЫБОР
        |		КОГДА СчетНаОплатуПокупателюТовары.Номенклатура ССЫЛКА Справочник.Номенклатура
        |			И СчетНаОплатуПокупателюТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
        |			ТОГДА ВЫБОР
        |				КОГДА СчетНаОплатуПокупателюТовары.Номенклатура.НаименованиеПолное <> """" ТОГДА ВЫРАЗИТЬ(СчетНаОплатуПокупателюТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(128))
        |				ИНАЧЕ ВЫРАЗИТЬ(СчетНаОплатуПокупателюТовары.Номенклатура.Наименование КАК СТРОКА(128))
        |			КОНЕЦ
        |		ИНАЧЕ
        |			ВЫРАЗИТЬ(СчетНаОплатуПокупателюТовары.Содержание КАК СТРОКА(128))
        |	КОНЕЦ КАК ПредставлениеТовараУслуги,
        |    ЕСТЬNULL(СчетНаОплатуПокупателюТовары.Номенклатура.ВидСтавкиНДС, &ВидСтавкиНДСИзПерсональныхНастроек) КАК ВидСтавкиНДС,
        |	ВЫБОР
        |		КОГДА СчетНаОплатуПокупателю.СуммаВключаетНДС ТОГДА СчетНаОплатуПокупателюТовары.Сумма
        |		ИНАЧЕ СчетНаОплатуПокупателюТовары.Сумма + СчетНаОплатуПокупателюТовары.СуммаНДС
        |	КОНЕЦ КАК СуммаСчетаНаОплату,
        |	СчетНаОплатуПокупателюТовары.СуммаНДС КАК СуммаНДССчетаНаОплату,
        |	СчетНаОплатуПокупателюТовары.СтавкаНДС КАК СтавкаНДССчетаНаОплату,
        |	СчетНаОплатуПокупателюТовары.Содержание КАК СодержаниеСчетаНаОплату,
        |	СчетНаОплатуПокупателюТовары.Цена КАК ЦенаСчетаНаОплату,
        |	СчетНаОплатуПокупателюТовары.Количество КАК КоличествоСчетаНаОплату
        |ПОМЕСТИТЬ ВТ_ТаблицаОплатПрочихУслугСчетмаш_Подготовка
        |ИЗ
        |	Документ.ПоступлениеНаРасчетныйСчет.РасшифровкаПлатежа КАК ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументыПоступленияНаРасчетныйСчет КАК ВТ_ДокументыПоступленияНаРасчетныйСчет
        |		ПО ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.Ссылка = ВТ_ДокументыПоступленияНаРасчетныйСчет.Ссылка
        |			И (ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СчетНаОплату ССЫЛКА Документ.СчетНаОплатуПокупателю)
        |			И (ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СчетНаОплату <> ЗНАЧЕНИЕ(Документ.СчетНаОплатуПокупателю.ПустаяСсылка))
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
        |		ПО ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СчетНаОплату = СчетНаОплатуПокупателю.Ссылка
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПокупателю.Товары КАК СчетНаОплатуПокупателюТовары
        |		ПО ПоступлениеНаРасчетныйСчетРасшифровкаПлатежа.СчетНаОплату = СчетНаОплатуПокупателюТовары.Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	Документ КАК Документ,
        |	Контрагент КАК Контрагент
        |ПОМЕСТИТЬ ВТ_ДублиСтрокОплат
        |ИЗ
        |	ВТ_ТаблицаОплатПрочихУслугСчетмаш_Подготовка КАК ВТ_ТаблицаОплатПрочихУслугСчетмаш_Подготовка
        |
        |СГРУППИРОВАТЬ ПО
        |	Документ,
        |	Контрагент
        |
        |ИМЕЮЩИЕ
        |	КОЛИЧЕСТВО(*) > 1
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |// КОНТРОЛЬ ДУБЛЕЙ СТРОК ОПЛАТ (Не допускается больше одной строки товаров в счетах на оплату - по ТЗ)
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ДублиСтрокОплат.*,
        |	ДопДанные.СчетНаОплату КАК СчетНаОплату
        |ИЗ
        |	ВТ_ДублиСтрокОплат КАК ВТ_ДублиСтрокОплат
        |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
        |		ВЫБРАТЬ РАЗЛИЧНЫЕ
        |			Т.Документ,
        |			Т.Контрагент,
        |			Т.СчетНаОплату
        |		ИЗ
        |			ВТ_ТаблицаОплатПрочихУслугСчетмаш_Подготовка КАК Т
        |	) КАК ДопДанные
        |	ПО ВТ_ДублиСтрокОплат.Документ = ДопДанные.Документ
        |		И ВТ_ДублиСтрокОплат.Контрагент = ДопДанные.Контрагент
        |       И %%ВыполнятьКонтроль%%
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	*
        |ПОМЕСТИТЬ ВТ_ТаблицаОплатПрочихУслугСчетмаш
        |ИЗ
        |	ВТ_ТаблицаОплатПрочихУслугСчетмаш_Подготовка КАК ВТ_ТаблицаОплатПрочихУслугСчетмаш_Подготовка
        |ГДЕ
        |	ИСТИНА
        |	И (Документ, Контрагент) НЕ В (ВЫБРАТЬ Т.Документ, Т.Контрагент ИЗ ВТ_ДублиСтрокОплат КАК Т)
        |";

    Если СОтборомПоКонтрагенту = Ложь Тогда
        ТекстЗапроса = СтрЗаменитьПоРегулярномуВыражению(
                ТекстЗапроса,
                "(?:[А-Яа-яA-Za-z0-9_\-]+\s*\.\s*)?(?:[А-Яа-яA-Za-z0-9_\-]+\s*=\s*&Контрагент)\s*$", "ИСТИНА", Истина, Истина);
    КонецЕсли;

    Если ПоместитьВоВременнуюТаблицу = Ложь Тогда
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%ВыполнятьКонтроль%%", "ИСТИНА");
        ТекстЗапроса = СтрЗаменитьПоРегулярномуВыражению(
                ТекстЗапроса,
                "^\s*ПОМЕСТИТЬ\s*ВТ_ТаблицаОплатПрочихУслугСчетмаш\s*$", "", Истина, Истина);
    Иначе
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%ВыполнятьКонтроль%%", "ЛОЖЬ");
        ТекстЗапроса = ТекстЗапроса + ";";
    КонецЕсли;

    Возврат ТекстЗапроса;
КонецФункции

// Параметры:
//  СОтборомПоКонтрагенту - Булево
//  ПоместитьВоВременнуюТаблицу - Булево
// Возвращаемое значение:
//  - Строка
Функция ПолучитьТекстЗапросаРасшифровкиОплатПрочихУслугДляЧековСчетмаш(
        Знач СОтборомПоКонтрагенту = Ложь, Знач ПоместитьВоВременнуюТаблицу = Ложь)

    ТекстЗапроса = ПолучитьТекстЗапросаДанныхОплатПрочихУслугСчетмаш(СОтборомПоКонтрагенту, Истина);

    ТекстЗапроса = ТекстЗапроса
        + "
        |////////////////////////////////////////////////////////////////////////////////
        |" +
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ТаблицаОплатПрочихУслугСчетмаш.Документ КАК Документ,
        |	ВТ_ТаблицаОплатПрочихУслугСчетмаш.Контрагент КАК Контрагент,
        |	ВТ_ТаблицаОплатПрочихУслугСчетмаш.СчетНаОплату КАК СчетНаОплату,
        |	МАКСИМУМ(ВТ_ТаблицаОплатПрочихУслугСчетмаш.СуммаДокумента) КАК СуммаДокументаОплаты,
        |	СУММА(ВТ_ТаблицаОплатПрочихУслугСчетмаш.СуммаСчетаНаОплату) КАК СуммаСчетаНаОплату
        |ПОМЕСТИТЬ ВТ_СуммыОплатПоСчету_Общая
        |ИЗ
        |	ВТ_ТаблицаОплатПрочихУслугСчетмаш КАК ВТ_ТаблицаОплатПрочихУслугСчетмаш
        |СГРУППИРОВАТЬ ПО
        |	ВТ_ТаблицаОплатПрочихУслугСчетмаш.Документ,
        |	ВТ_ТаблицаОплатПрочихУслугСчетмаш.Контрагент,
        |	ВТ_ТаблицаОплатПрочихУслугСчетмаш.СчетНаОплату
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_СуммыОплатПоСчету.Документ КАК Документ,
        |	ВТ_СуммыОплатПоСчету.Контрагент КАК Контрагент,
        |	ВТ_СуммыОплатПоСчету.СчетНаОплату КАК СчетНаОплату,
        |	ВТ_СуммыОплатПоСчету.СуммаСчетаНаОплату КАК Сумма,
        |	ЛОЖЬ КАК ЭтоАванс,
        //|	&ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО КАК ПризнакСпособаРасчета
        |	ЗНАЧЕНИЕ(Перечисление.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой) КАК ПризнакСпособаРасчета
        |ПОМЕСТИТЬ ВТ_СуммыОплатПоСчету
        |ИЗ
        |	ВТ_СуммыОплатПоСчету_Общая КАК ВТ_СуммыОплатПоСчету
        |ГДЕ
        |	ВТ_СуммыОплатПоСчету.СуммаСчетаНаОплату = ВТ_СуммыОплатПоСчету.СуммаДокументаОплаты
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ВТ_СуммыОплатПоСчету.Документ,
        |	ВТ_СуммыОплатПоСчету.Контрагент,
        |	ВТ_СуммыОплатПоСчету.СчетНаОплату,
        |	ВТ_СуммыОплатПоСчету.СуммаСчетаНаОплату,
        |	ЛОЖЬ КАК ЭтоАванс,
        //|	&ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО КАК ПризнакСпособаРасчета
        |	ЗНАЧЕНИЕ(Перечисление.ПризнакиСпособаРасчета.ПередачаСПолнойОплатой) КАК ПризнакСпособаРасчета
        |ИЗ
        |	ВТ_СуммыОплатПоСчету_Общая КАК ВТ_СуммыОплатПоСчету
        |ГДЕ
        |	ВТ_СуммыОплатПоСчету.СуммаСчетаНаОплату < ВТ_СуммыОплатПоСчету.СуммаДокументаОплаты
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ВТ_СуммыОплатПоСчету.Документ,
        |	ВТ_СуммыОплатПоСчету.Контрагент,
        |	ВТ_СуммыОплатПоСчету.СчетНаОплату,
        |	ВТ_СуммыОплатПоСчету.СуммаДокументаОплаты - ВТ_СуммыОплатПоСчету.СуммаСчетаНаОплату,
        |	ИСТИНА,
        |	ЗНАЧЕНИЕ(Перечисление.ПризнакиСпособаРасчета.Аванс)
        |ИЗ
        |	ВТ_СуммыОплатПоСчету_Общая КАК ВТ_СуммыОплатПоСчету
        |ГДЕ
        |	ВТ_СуммыОплатПоСчету.СуммаСчетаНаОплату < ВТ_СуммыОплатПоСчету.СуммаДокументаОплаты
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ВТ_СуммыОплатПоСчету.Документ,
        |	ВТ_СуммыОплатПоСчету.Контрагент,
        |	ВТ_СуммыОплатПоСчету.СчетНаОплату,
        |	ВТ_СуммыОплатПоСчету.СуммаДокументаОплаты,
        |	ЛОЖЬ,
        |	ЗНАЧЕНИЕ(Перечисление.ПризнакиСпособаРасчета.ПередачаСЧастичнойОплатой)
        |ИЗ
        |	ВТ_СуммыОплатПоСчету_Общая КАК ВТ_СуммыОплатПоСчету
        |ГДЕ
        |	ВТ_СуммыОплатПоСчету.СуммаСчетаНаОплату > ВТ_СуммыОплатПоСчету.СуммаДокументаОплаты
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |// РЕЗУЛЬТАТ
        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |	ВТ_ТаблицаОплатПрочихУслугСчетмаш.*,
        //|	ВЫРАЗИТЬ(ВЫБОР
        //|		КОГДА ВТ_СуммыОплатПоСчету.ПризнакСпособаРасчета = &ПризнакСпособаРасчетаВПлатежахНаОказаниеУслугВЧекахРО
        //|			ТОГДА ВТ_СуммыОплатПоСчету.Сумма
        //|		ИНАЧЕ
        //|			ВТ_СуммыОплатПоСчету.Сумма * ВТ_ТаблицаОплатПрочихУслугСчетмаш.СуммаПлатежа / ВТ_ТаблицаОплатПрочихУслугСчетмаш.СуммаДокумента
        //|	КОНЕЦ КАК ЧИСЛО(15, 2))  КАК Сумма,
        |   ВТ_СуммыОплатПоСчету.Сумма КАК Сумма,
        |	ВТ_СуммыОплатПоСчету.ЭтоАванс КАК ЭтоАванс,
        |	ВТ_СуммыОплатПоСчету.ПризнакСпособаРасчета КАК ПризнакСпособаРасчета
        |ИЗ
        |	ВТ_ТаблицаОплатПрочихУслугСчетмаш КАК ВТ_ТаблицаОплатПрочихУслугСчетмаш
        |	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СуммыОплатПоСчету КАК ВТ_СуммыОплатПоСчету
        |	ПО ВТ_ТаблицаОплатПрочихУслугСчетмаш.Документ = ВТ_СуммыОплатПоСчету.Документ
        |		И ВТ_ТаблицаОплатПрочихУслугСчетмаш.Контрагент = ВТ_СуммыОплатПоСчету.Контрагент
        |		И ВТ_ТаблицаОплатПрочихУслугСчетмаш.СчетНаОплату = ВТ_СуммыОплатПоСчету.СчетНаОплату
        |";

    Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции
