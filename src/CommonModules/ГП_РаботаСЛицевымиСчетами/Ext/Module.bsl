// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления ++
#Область ПрограммныйИнтерфейс

// Получает л/с контрагента из РС.УПЖКХ_СведенияДляВзаиморасчетовПоЛС
// Параметры:
//  КонтрагентСсылка - СправочникСсылка.Контрагенты
//  ОрганизацияСсылка - СправочникСсылка.Организации, Неопределено - Если Неопределено, устанавливается в
//      значение по умолчанию функцией `УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию`
//  ДатаАктуальности - Дата, Неопределено
// Возвращаемое значение:
//  - ТаблицаЗначений
//      * Период - Дата
//      * ЛицевойСчет - СправочникСсылка.КВП_ЛицевыеСчета
Функция ПолучитьЛицевыеСчетаКонтрагента(
    Знач КонтрагентСсылка, Знач ОрганизацияСсылка = Неопределено, Знач ДатаАктуальности = Неопределено) Экспорт

    Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |   СведенияДляВзаиморасчетовПоЛС.Период КАК Период,
        |   СведенияДляВзаиморасчетовПоЛС.ЛицевойСчет КАК ЛицевойСчет
        |ИЗ
        |   РегистрСведений.УПЖКХ_СведенияДляВзаиморасчетовПоЛС.СрезПоследних(&ДатаАктуальности, Контрагент = &Контрагент И Организация = &Организация) КАК СведенияДляВзаиморасчетовПоЛС
        |";

    Если ДатаАктуальности <> Неопределено Тогда
        Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
    Иначе
        Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДатаАктуальности", "");
    КонецЕсли;

    ОрганизацияСсылка = ?(ОрганизацияСсылка = Неопределено,
            УПЖКХ_ТиповыеМетодыВызовСервера.ПолучитьОсновнуюОрганизацию(), ОрганизацияСсылка);
        Запрос.УстановитьПараметр("Организация", ОрганизацияСсылка);

    Запрос.УстановитьПараметр("Контрагент", КонтрагентСсылка);

    РезультатЗапроса = Запрос.Выполнить();
    РезультатФункции = РезультатЗапроса.Выгрузить();
    Возврат РезультатФункции;
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс
// Гарант+ Килипенко 01.11.2024 [F00230427] Создание регистрации оплаты на основании поступления --
